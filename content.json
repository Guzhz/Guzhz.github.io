{"meta":{"title":"Guzhz's House","subtitle":"Simply to do something.","description":null,"author":"Guzhz","url":"http://yoursite.com","root":"/"},"pages":[{"title":"","date":"2019-03-26T17:19:54.435Z","updated":"2019-03-26T17:19:54.435Z","comments":false,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"About","date":"2019-03-26T17:19:33.780Z","updated":"2019-03-26T17:19:33.780Z","comments":false,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"","date":"2019-03-26T12:47:50.243Z","updated":"2019-03-26T12:47:50.243Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"CSS3的简单回顾","slug":"CSS3的简单回顾","date":"2020-06-08T04:20:22.172Z","updated":"2020-06-08T08:18:48.533Z","comments":true,"path":"2020/06/08/CSS3的简单回顾/","link":"","permalink":"http://yoursite.com/2020/06/08/CSS3的简单回顾/","excerpt":"","text":"前言：教学视频参考 1、CSS3的三种导入方式 优先级：就近原则 123456789101112131415161718192021&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;!--内部样式--&gt; &lt;style&gt; h1 &#123; color: green; &#125; &lt;/style&gt; &lt;!--外部样式--&gt; &lt;link rel=\"stylesheet\" href=\"css/style.css\" /&gt;&lt;/head&gt;&lt;body&gt; &lt;!--行内样式：在标签元素中，编写一个style属性，编写样式即可--&gt; &lt;h1 style=\"color: red\"&gt;这是标签&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt; 拓展：CSS2.1导入式 123&lt;style&gt; @import url(\"css/style.css\");&lt;/style&gt; 2、选择器2.1、基本选择器123标签选择器：选择一类标签 标签.&#123; &#125;class选择器：.类名&#123; &#125;id选择器：#.ID名&#123; &#125; 2.2、层次选择器 后代选择器，在某个元素的后面 12345&lt;style&gt; body p &#123; background: red; &#125;&lt;/style&gt; 子选择器，一代 12345&lt;style&gt; body&gt;p &#123; background: orange; &#125;&lt;/style&gt; 相邻兄弟选择器：只有一个，相邻（向下） 123456789&lt;style&gt; .active+p &#123; background: red &#125;&lt;/style&gt;&lt;body&gt; &lt;p class=\"active\"&gt;p1&lt;p&gt; &lt;p&gt;p2&lt;/p&gt;&lt;/body&gt; 通用兄弟选择器，当前选中元素的向下的所有兄弟元素 12345678910&lt;style&gt; .active~p &#123; background: red; &#125;&lt;/style&gt;&lt;body&gt; &lt;p class=\"active\"&gt;p1&lt;p&gt; &lt;p&gt;p2&lt;/p&gt;&lt;/body&gt; 2.3、结构伪类选择器 ul的第一个子元素 123ul li:first-child &#123; background: aqua;&#125; ul的最后一个子元素 123ul li:last-child &#123; background: blue;&#125; 选中pfather：定位到父元素，选择当前的第一个子元素p，子元素的第一位必须为p才生效 123pfather:nth-child(1) &#123; background: orange;&#125; 选中父元素下的，第2个p元素 123p:nth-of-type(2) &#123; background: red;&#125; 2.4、属性选择器（常用） class + id 结合 123456789101112131415&lt;style&gt; .demo a &#123; display: block; height: 50px; width: 50px; float: left; border-radius: 10px; background: blue; text-align: center; color: beige; text-decoration: none; margin-right: 5px; font: bold 20px/50px Arial; &#125;&lt;/style&gt; 标签名[属性名=属性值]（正则: =、*=、^=、$=） 1234567891011121314151617181920212223242526272829303132333435&lt;style&gt;/*存在id的a标签*/a[id] &#123; background: red;&#125; /* =表示绝对等于 *=表示包含... ^=表示以...开头 $=表示以...结尾 *//*id=first的a标签*/a[id=first] &#123; background: aqua;&#125;/*class属性值绝对等于\"links item2 first2\"*/a[class=\"links item2 first2\"] &#123; background: orange;&#125;/*class属性值绝对包涵\"links\"*/a[class *=\"links\"] &#123; background: black;&#125;/*选中href中以http开头的元素*/a[href^=\"http\"] &#123; background: orange;&#125;&lt;/style&gt; 123456789&lt;p class=\"demo\"&gt; &lt;a href=\"http://www.baidu.com\" class=\"links item first\" id=\"first\"&gt;1&lt;/a&gt; &lt;a href=\"/adad/faf\" class=\"links item2 first2\"&gt;2&lt;/a&gt; &lt;a href=\"qwe123\" class=\"links item3 first3\"&gt;3&lt;/a&gt; &lt;a href=\"eweqe\" class=\"links item4 first4\"&gt;4&lt;/a&gt; &lt;a href=\"rrrrr\" class=\"links item5 first5\"&gt;5&lt;/a&gt; &lt;a href=\"ttt\" class=\"links item6 first6\"&gt;6&lt;/a&gt; &lt;a href=\"yyy\" class=\"links item7 first7\"&gt;7&lt;/a&gt;&lt;/p&gt; 3、美化网页元素3.1、字体 建立在标签上的处理，所以建议用span包裹 123456789101112131415&lt;head&gt; &lt;style&gt; #title1 &#123; font-size: 50px; font-weight：blod; font-family: 楷体; /*常用写法：*/ font: oblique bloder 12px \"楷体\" &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;span id=\"title1\"&gt;JAVA&lt;/span&gt;&lt;/body&gt; 3.2、文本 下划线 12345678text-decoration:underline/*下划线*/text-decoration:line-through/*中划线*/text-decoration:overline/*上划线*/text-decoration:none/*超链接去下划线*/ 图片、文字水平居中 123img,span &#123; vertical-align: middle&#125; 3.3、文本，阴影和超链接伪类 超链接伪类 123456789101112131415161718192021222324&lt;style&gt;/*超链接有默认的颜色*/a &#123; text-decoration: none; color: #000000;&#125;a:hover &#123; /*鼠标悬浮的状态*/ color: orange;&#125;a:active &#123; /*鼠标按住未释放的状态*/ color: green&#125;a:visited &#123; /*点击之后的状态*/ color: red&#125;&lt;/style&gt; 阴影 12 左 下 半径text-shadow:5px 5px 5px 颜色 3.4、利用列表ul li小设计：a进来变样式123456789101112131415161718192021222324ul li &#123; height: 30px; list-style: none; /*none:去掉原点、circle:空心圆、decimal:数字、square:正方形*/ text-indent: 1em; /*缩进*/&#125;a&#123; text-decoration: none; /*首先去掉下划线*/ font-size: 14px; color: #000;&#125;a:hover &#123; color: orange; text-decoration: underline /*进来再有下划线*/ &#125;/*放在div中，作为导航栏*/&lt;div id=\"nav\"&gt;&lt;/div&gt;#nav &#123; width: 300px;&#125; 3.5、背景样式、图片123456789background:red---------------------------------------------background-image:url(\"\"); /*默认是全部平铺的*/background-repeat:repeat-x /*水平平铺*/background-repeat:repeat-y /*垂直平铺*/background-repeat:no-repeat /*不平铺*/---------------------------------------------background:red url(\"url\") 270px 10px no-repeat /*综合使用*/background-position:center /*定位：背景位置*/ 拓展：渐变网址：https://www.grablent.com径向渐变、圆形渐变 4、盒子模型4.1、什么是盒子模型123margin：外边距padding：内边距border：边框 4.2、边框1border：2px solid red 4.3、外边距的妙用：居中1234margin:0 0 0 0 /*表示上、右、下、左*/margin:0 auto /*居中、auto表示左右自动*/margin:4px /*表示上、右、下、左都为4px*/margin:10px 20px 30px /*表示上为10px，左右为20px，下为30px*/ 开发中的常用操作12345/* 盒子的计算方式：margin+border+padding+内容的大小 *//* body总有一个默认的外边距，开发中会先把内外边距置为0 */margin:0;padding:0;text-decoration:none; 4.4、圆角边框：border-radius123（顺时针），左上开始圆圈：圆角=半径border-radius: 有四个参数 5、浮动5.1、标准文档流 包涵关系：块级元素包裹行级元素块级元素：独占一行 h1~h6 、p、div、 列表…行内元素：不独占一行 span、a、img、strong 5.2、display（重要） block：块元素inline：行内元素inline-block：行内块元素none：消失注：这也是一种实现行内元素排列的方式，但是我们很多情况用float 5.3、float：浮动 参考：详细参考123456div&#123; float:left/right&#125;/*浮动后，不再属于标准中的元素，下面的元素会上移、但本身还会于上面的元素对其*//*假如某个div元素A是浮动的，如果A元素上一个元素也是浮动的，那么A元素会跟随在上一个元素的后边(如果一行放不下这两个元素，那么A元素会被挤到下一行)；如果A元素上一个元素是标准流中的元素，那么A的相对垂直位置不会改变，也就是说A的顶部总是和上一个元素的底部对齐。*/ 清除浮动 clear123456/* right：右侧不允许有浮动元素left： 左侧不允许有浮动元素both： 两侧不允许有浮动元素none： 两侧允许有浮动元素 对于CSS的清除浮动(clear)，一定要牢记：这个规则只能影响使用清除的元素本身，不能影响其他元素。*/ 5.4、解决浮动后父级边框塌陷问题1234567891011121314151617181920212223242526272829/* 方案一：增加父级元素的高度；*//* 方案二：增加一个空的div标签，清除本标签的浮动来实现补回原标签 */&lt;style&gt; .clear&#123; clear:both; margin:0; padding:0; &#125;&lt;/style&gt;&lt;div class = \"clear\"&gt;&lt;/div&gt;/* 方案三：在父级元素中增加一个滚动条然后隐藏起来：overflow：hidden */overflow:hidden /*隐藏*/overflow：scoll /*滚动*//* 方案四：父类添加一个伪类:after */#father:after&#123; content:''; display:block; clear:both;&#125;浮动元素增加空div----&gt; 简单、代码尽量避免空div设置父元素的高度-----&gt; 简单，元素假设没有了固定的高度，就会超出overflow----&gt; 简单，下拉的一些场景避免使用父类添加一个伪类:after（推荐）----&gt; 写法稍微复杂，但是没有副作用，推荐使用 5.5、display与float对比 display：方向不可以控制float：浮动起来的话会脱离标准文档流，所以要解决父级边框塌陷的问题。 6、定位6.1、相对定位（relative） 相对于自身的位置，它仍然在标准文档流中12345678h2.pos_left&#123; location:relative top:-20px; left:20px; bottom:-10px; right:20px;&#125; 6.2、绝对定位： 1234567891011/* 总结：相对一父级或浏览器的位置，进行指定的偏移， 绝对定位的话，它不在标准文档流中，原来的位置不会被保留 */div:nth-of-type(1)&#123;/*绝对定位：没有相对的父级元素，所以相对于浏览器*/ width: 100px; height: 100px; background:red; position: absolute; right: 0; bottom: 0;&#125; 6.3、固定定位123456789div:nth-of-type(2)&#123; /*始终在右下角*/ width: 50px; height: 50px; background: yellow; position: fixed; right: 0; bottom: 0;&#125; 6.4、图层 z-index：默认是0，最高无限~999(最顶层)1234.tipText&#123; color: white; z-index: 999;&#125; 6.5、透明度12345.tipBg&#123; background: orange; opacity: 0.5; /*背景透明度*/ filter: alpha(opacity=50); /*原理同上，这里解决ie的兼容性问题*/&#125; 2020年06月06日 下午Guzhz","categories":[{"name":"学习类","slug":"学习类","permalink":"http://yoursite.com/categories/学习类/"}],"tags":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"HTML5的简单回顾","slug":"HTML5的简单回顾","date":"2020-06-06T11:15:05.110Z","updated":"2020-06-06T11:25:01.267Z","comments":true,"path":"2020/06/06/HTML5的简单回顾/","link":"","permalink":"http://yoursite.com/2020/06/06/HTML5的简单回顾/","excerpt":"","text":"前言：教学视频参考：https://www.bilibili.com/video/BV1x4411V75C 网页基本标签1234&lt;!--meta描述性标签，用来描述我们网站的一些信息--&gt;&lt;meta charset=\"UTF-8\"&gt;&lt;meta name=\"keywords\" content=\"跟狂神学Java\"&gt;&lt;meta name=\"description\" content=\"可以学习java\"&gt; 12粗体：&lt;strong&gt;&lt;/strong&gt;斜体：&lt;em&gt;&lt;/em&gt; 1234 空 &amp;nbsp;大于号 &amp;gt;小于号 &amp;lt;版权符号 &amp;copy; 12&lt;!--图像标签： alt:图片描述--&gt;&lt;img src=\"../resources/image/1.jpg\" alt=\"我的图片\" title=\"悬停文字\" width=\"1366\" height=\"768\"&gt; 123456789101112target=\"_blank\" ：在新标签中打开target=\"_self\" ：在自己的网页中打开target=\"#MarkName\"：即跳转到锚点 &lt;!--锚链接：指定跳转到页面的某个位置，需要定义name属性作为标记--&gt;&lt;a name=\"top\"&gt;顶部&lt;/a&gt;&lt;!--跳转到标记--&gt;&lt;a href=\"#top\"&gt;回到顶部&lt;/a&gt;&lt;!--邮件连接：mailto--&gt;&lt;a href=\"mailto:936681921@qq.com\"&gt;点击联系我&lt;/a&gt; 行内元素和块元素12块元素：无论内容有多少，元素自己独占一行行内元素：内容撑开宽度，左右都是行内元素的可以排在一行 列表标签123456789101112131415161718192021有序列表&lt;ol&gt; &lt;li&gt;语文&lt;/li&gt; 1.语文 &lt;li&gt;数学&lt;/li&gt; 2.数学 &lt;li&gt;英语&lt;/li&gt; 3.英语&lt;/ol&gt;无序列表&lt;ul&gt; &lt;li&gt;语文&lt;/li&gt; ● 语文 &lt;li&gt;数学&lt;/li&gt; ● 数学 &lt;li&gt;英语&lt;/li&gt; ● 英语&lt;/ul&gt;自定义列表&lt;dl&gt; &lt;dt&gt;科目&lt;/dt&gt; 科目 &lt;dd&gt;语文&lt;/dd&gt; 语文 &lt;dd&gt;数学&lt;/dd&gt; 数学 &lt;dd&gt;英语&lt;/dd&gt; 英语&lt;/dl&gt; 表格标签1234567891011121314151617&lt;table&gt; ...&lt;/table&gt;表格标签。&lt;tr&gt;...&lt;/tr&gt;行标签，代表一行。&lt;td&gt;...&lt;/td&gt;列标签，代表一列。border=\"\"表示表格线条宽度。colspan=\"3\"表示这一单元跨几列。rowspan=\"2\"表示这一单元跨几行。 视频和音频1234controls：控制调autoplay：自动播放&lt;video src=\"../resources/video/2.mp4\" controls autoplay&gt;&lt;/video&gt;&lt;audio src=\"../resources/audio/3.mp3\" controls autoplay&gt;&lt;/audio&gt; 结构分析12345678910111213&lt;header&gt; &lt;h2&gt;网页头部&lt;/h2&gt;&lt;/header&gt;&lt;section&gt; &lt;h2&gt;网页主体&lt;/h2&gt;&lt;/section&gt;&lt;footer&gt; &lt;h2&gt;网页脚步&lt;/h2&gt;&lt;/footer&gt;&lt;nav&gt;导航&lt;/nav&gt; iframe内联框架12345678&lt;body&gt; &lt;!--单独使用--&gt; &lt;iframe src=\"www.baidu.com\" name=\"go\" frameborder=\"0\" width=\"1000\" height=\"800\"&gt;&lt;/iframe&gt; &lt;!--配合a标签使用--&gt; &lt;iframe src=\"\" name=\"go\" frameborder=\"0\" width=\"1000\" height=\"800\"&gt;&lt;/iframe&gt; &lt;a href=\"https://www.baidu.com\" target=\"go\" &gt;点击打开百度&lt;/a&gt;&lt;/body&gt; 表单12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;body&gt; &lt;form action=\"\" method=\"\"&gt; action:填写表单内数据提交给的地址。 是提交表单数据的方式，get可以在url看见提交的内容，post的保密性稍高。 &lt;input type=\"\"&gt; &lt;/form&gt; type=\"text\" 默认文本框。 type=\"password\" 密码框，输入不显示密码。 type=\"search\" 搜索框。 type=\"submit\" 提交按钮，网页中点击提交。 type=\"reset\" 重置按钮，网页中点击后表单重置。 hidden:隐藏。 单选框： type=\"radio\" name=\"\":填入组名，网页内在同一组内的单选框只能选中一个，不在同一组则 相当于多选框。 value=\"\"：提交时显示的名字。 checked:默认选择本项选中。 多选框： type=\"checkbox\" name=\"\":填入组名。 value=\"\"：提交时显示的名字。 checked:默认选择本项选中。 普通按钮： type=\"button\": name=\"\":提交时的按钮名。 value=\"\"：在网页显示在按钮中的字符。 下拉列表框： &lt;select name=\"\"&gt;:name中填写列表名。 &lt;option value=\"\"&gt;:value填写单元名 &lt;option value=\"\"&gt;:value填写单元名 &lt;/select&gt; selected:默认选择本项选中。 文本域： &lt;textarea name=\"\"cols=\"30\" rows=\"10\" placeholder=\"\"&gt; name=\"\" :文本域名。文本域网页。 cols=\"30\" :列数。 rows=\"10\" :行数。 placeholder=\"\":默认显示内容，所有文本框可用。 文件域： &lt;input type=\"file\" name=\"files\"&gt; 滑块： &lt;input type=\"range\" name=\"range\" min=\"0\" max=\"100\" step=\"5\"&gt;滑块网 页 type=\"range\" min：表示滑块底部的数值。 max：表示滑块顶端的数值。 step：表示每次拖动滑块改变的数值。 数字验证： &lt;input type=\"number\" name=\"number\" min=\"0\" max=\"100\" step=\"1\"&gt;数字 验证网页 min：表示最低数字。 max：表示最大数字。 step：表示每次增加时改变的数值。 &lt;label for=\"\"&gt;此处可任意填写&lt;/label&gt; 给其他标签添加id=\"\"属性，然后将id中的字符填入for=\"\",点击其产生的字符 可指向对应id的文本框。 初级验证 type=\"email\" 邮箱输入框，带有简单的邮箱格式验证。 type=\"url\" url连接输入框，带有简单的格式验证。 type=\"number\" &lt;input type=\"number\" name=\"num\" max=\"100\" min=\"1\" step=\"1\"&gt; pattern=\"正则表达式验证，使用正则表达式验证文本框填写是否正确\"&lt;/body&gt; 2020年06月06日 下午Guzhz","categories":[{"name":"学习类","slug":"学习类","permalink":"http://yoursite.com/categories/学习类/"}],"tags":[{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"Github&Gitee使用教程","slug":"Github&Gitee使用教程","date":"2020-04-11T07:57:18.917Z","updated":"2020-05-12T16:35:35.153Z","comments":true,"path":"2020/04/11/Github&Gitee使用教程/","link":"","permalink":"http://yoursite.com/2020/04/11/Github&Gitee使用教程/","excerpt":"","text":"前言：注册GitHub有一段时间了，之前有按照教程操作过，不过后来一段时间不用又不熟练了。以至于后期突然使用时出现一些错误，导致本地文件一直提交不了。今天又熟悉了一次，这里做个笔记，以至于后面在忘记可以回顾一下。 一、操作前准备 Github环境搭建 配置共存Github/Gitee环境共存Github/Gitee环境，需要切换全局的 user.name 和 user.email git config –global –list（先查看变量）git config –global user.name “账户名” （再修改变量）git config –global user.email “邮箱” 二、Github/Gitee部署详细步骤【无仓库：新建远程仓库、初始化本地仓库、两者建立连接、添加并部署】 创建仓库，勾选上RENAME name -&gt; description -&gt; public -&gt; Init -&gt; create “+” -&gt; 介绍 -&gt; 使用Readme文件初始化这个仓库 -&gt; 创建 git init （初始化本地仓库） git add .（有空格） git status（可查看代码的状态） git commit -m “说明”（把文件提交的本地仓库） git remote add origin [url]（连接远程仓库，这个为新建的仓库地址） it pull –rebase origin master （本地仓库为空，远程仓库不为空，需要pull合并同步，这里–为“双杠”） git push origin master（部署） 【有本地仓库/克隆操作（已建立连接）：在仓库文件夹下进行以下操作】 改动文件后 ↓ git add . git status git commit -m “说明” git push origin master 三、常用命令 git status git add . git commit -m “说明” git push origin master git clone [url] git pull （拉去远程库更新本地库） 2020年4月11日 下午Guzhz","categories":[{"name":"技术类","slug":"技术类","permalink":"http://yoursite.com/categories/技术类/"}],"tags":[{"name":"备份","slug":"备份","permalink":"http://yoursite.com/tags/备份/"},{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/教程/"}]},{"title":"Hexo的使用","slug":"Hexo的使用","date":"2020-04-10T16:23:09.371Z","updated":"2020-05-08T16:31:48.448Z","comments":true,"path":"2020/04/11/Hexo的使用/","link":"","permalink":"http://yoursite.com/2020/04/11/Hexo的使用/","excerpt":"","text":"前言：Hexo是一个主题框架，用于搭建博客，这里做个笔记，以至于后面忘记了可以回顾一下如何操作。 一、详细搭建参考 搭建参考一搭建参考二markdown语法参考主题推荐 二、域名的绑定与解绑绑定：免费一年的域名网 1、在myblog\\source（source目录下的文件为源文件)目录下新建CNAME(无后缀)2、把域名写进去即可，www加不加都行。 解绑： 1、只生效一次的解绑方法：直接删除github项目上的CNAME文件，但是更新后重新部署后又会生成2、永久解绑方法：删除主题source目录下的CNAME，删除/清空source目录下的CNAME文件后重新部署，setting里删除手动指定的域名。 三、我的博客详细分类操作步骤： 1. 在项目的根目录下（myblog) 2. 右键打开：Git Bash 3. 新文章 ：myblog\\source\\_posts 下编写md文件 hexo g (生成) hexo s (本地浏览) hexo d (部署到github) 博客一：VScode、有道云笔记 myblog → 主目录 myblog_bak → 主目录备份 Picture-bed → 图床仓库 博客二：有道云笔记编写，VScode编辑 虚拟机桌面的“blog”文件 已同步到坚果云 test = &gt; 测试仓库 blog\\source\\_posts =&gt; 源文件 blog\\themes\\diaspora\\source\\img =&gt; 图库(图床)，不需要额外的图床 source -&gt; MD File =&gt; md文件 2020年4月11日 凌晨Guzhz","categories":[{"name":"技术类","slug":"技术类","permalink":"http://yoursite.com/categories/技术类/"}],"tags":[{"name":"备份","slug":"备份","permalink":"http://yoursite.com/tags/备份/"}]},{"title":"一年了","slug":"一年了","date":"2020-02-24T15:07:07.900Z","updated":"2020-02-24T16:50:53.380Z","comments":true,"path":"2020/02/24/一年了/","link":"","permalink":"http://yoursite.com/2020/02/24/一年了/","excerpt":"","text":"时间飞逝，一眨眼，一年过去了。 好久没来，好久没写，其实心里一直想着，总要记录点什么，可是总是没能抽出时间过来。 有空再写吧，晚安。 Mood挺好的。 Weather晴天。 Date2020年2月24日 晚上 完结","categories":[{"name":"生活类","slug":"生活类","permalink":"http://yoursite.com/categories/生活类/"}],"tags":[{"name":"心情","slug":"心情","permalink":"http://yoursite.com/tags/心情/"}]},{"title":"优化","slug":"优化","date":"2019-03-27T09:35:01.408Z","updated":"2019-03-28T11:46:46.916Z","comments":true,"path":"2019/03/27/优化/","link":"","permalink":"http://yoursite.com/2019/03/27/优化/","excerpt":"","text":"更新 优化了界面 添加搜索功能 Mood还OK Weather晴天。 Date2019年3月28日 下午 完结","categories":[{"name":"生活类","slug":"生活类","permalink":"http://yoursite.com/categories/生活类/"}],"tags":[{"name":"心情","slug":"心情","permalink":"http://yoursite.com/tags/心情/"}]},{"title":"新玩意儿","slug":"新玩意儿","date":"2019-03-26T15:00:06.441Z","updated":"2020-02-24T16:51:23.874Z","comments":true,"path":"2019/03/26/新玩意儿/","link":"","permalink":"http://yoursite.com/2019/03/26/新玩意儿/","excerpt":"","text":"耗时三天，搭建了人生的，第一个网站，感觉还不错。(#^.^#) Mood从郁闷到舒畅。 Weather阴天。 Date2019年3月26日 晚上 完结","categories":[{"name":"生活类","slug":"生活类","permalink":"http://yoursite.com/categories/生活类/"}],"tags":[{"name":"心情","slug":"心情","permalink":"http://yoursite.com/tags/心情/"}]}]}