<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>canvas的使用</title>
    <link href="/2021/04/10/canvas%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/04/10/canvas%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h4 id="一、基本使用"><a href="#一、基本使用" class="headerlink" title="一、基本使用"></a>一、基本使用</h4><p>1   、两个属性，width和height，建议直接设置在标签上，如果用css设置，则会拉伸<br><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">canvas</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"500"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"400"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"mycanvas"</span>&gt;</span>    当前浏览器不支持，请升级浏览器<span class="hljs-tag">&lt;/<span class="hljs-name">canvas</span>&gt;</span></code></pre></p><p>2、通过js获得画布上下文对象<br><pre><code class="hljs js"><span class="hljs-keyword">var</span> canvas = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"mycanvas"</span>)<span class="hljs-comment">//获得的画布对象有两个上下文对象，2d、3d</span><span class="hljs-comment">//所有设置都是通过这个ctx设置，和canvas标签没有关系了</span><span class="hljs-keyword">var</span> ctx = canvas.getContext(<span class="hljs-string">"2d"</span>)<span class="hljs-comment">//先设置颜色</span>ctx.fillStyle = <span class="hljs-string">"green"</span><span class="hljs-comment">//再绘制</span>ctx.fillRect(<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">200</span>,<span class="hljs-number">50</span>)</code></pre></p><h4 id="二、Canvas的思想"><a href="#二、Canvas的思想" class="headerlink" title="二、Canvas的思想"></a>二、Canvas的思想</h4><p>一旦绘制成功，canvas就像素化了它们，canvas没有能力从画布上再次得到这个图形，也就是说无法更改画出来的内容了。这就是为啥canvas轻量的原因，而flash重的原因是因为它可以存在对应的api，可以得到画布的内容进行修改。</p><ul><li>动画思想：如果我们想要canvas移动，就需要按照【清屏-&gt;更新-&gt;重绘】的逻辑进行编程</li></ul><pre><code class="hljs js"><span class="hljs-keyword">var</span> canvas = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"mycanvas"</span>)<span class="hljs-keyword">var</span> ctx = canvas.getContext(<span class="hljs-string">"2d"</span>)ctx.fillStyle = <span class="hljs-string">"green"</span>ctx.fillRect(<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">600</span>,<span class="hljs-number">50</span>)<span class="hljs-comment">//信号量</span><span class="hljs-keyword">var</span> left = <span class="hljs-number">100</span>setInterval(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;  ctx.clearRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">600</span>, <span class="hljs-number">600</span>)  left++  ctx.fillRect(left, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>, <span class="hljs-number">100</span>)&#125;,<span class="hljs-number">10</span>)<span class="hljs-built_in">console</span>.log(ctx)</code></pre><h4 id="三、面向对象思想"><a href="#三、面向对象思想" class="headerlink" title="三、面向对象思想"></a>三、面向对象思想</h4><pre><code class="hljs js"><span class="hljs-comment">//把操作封装成对象</span><span class="hljs-keyword">var</span> canvas = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"mycanvas"</span>)<span class="hljs-keyword">var</span> ctx = canvas.getContext(<span class="hljs-string">"2d"</span>)<span class="hljs-comment">//矩形对象</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Rect</span>(<span class="hljs-params">x, y, w, h, color</span>) </span>&#123;    <span class="hljs-keyword">this</span>.x = x    <span class="hljs-keyword">this</span>.y = y    <span class="hljs-keyword">this</span>.w = w    <span class="hljs-keyword">this</span>.h = h    <span class="hljs-keyword">this</span>.color = color&#125;<span class="hljs-comment">//移动更新</span>Rect.prototype.update = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">this</span>.x++&#125;<span class="hljs-comment">//绘制</span>Rect.prototype.render = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    ctx.fillStyle = <span class="hljs-keyword">this</span>.color    ctx.fillRect(<span class="hljs-keyword">this</span>.x, <span class="hljs-keyword">this</span>.y, <span class="hljs-keyword">this</span>.w, <span class="hljs-keyword">this</span>.h)&#125;<span class="hljs-comment">//实例化</span><span class="hljs-keyword">var</span> r1 = <span class="hljs-keyword">new</span> Rect(<span class="hljs-number">100</span>,<span class="hljs-number">100</span>,<span class="hljs-number">50</span>,<span class="hljs-number">50</span>,<span class="hljs-string">"purple"</span>)<span class="hljs-comment">//动画过程</span>setInterval(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-comment">//清屏</span>    ctx.clearRect(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, canvas.width, canvas.height)    <span class="hljs-comment">//更新</span>    r1.update()    <span class="hljs-comment">//绘制</span>    r1.render()&#125;)</code></pre><h4 id="四、绘制功能（非填充）"><a href="#四、绘制功能（非填充）" class="headerlink" title="四、绘制功能（非填充）"></a>四、绘制功能（非填充）</h4><p>1、绘制边框</p><ul><li>ctx.strokeStyle = “red”</li><li>ctx.strokeRect(300, 100, 100, 100)<br>绘制一个矩形边框</li></ul><p>2、绘制路径</p><ul><li>为了绘制不规则多边形的形态</li><li>路径是闭合的</li><li>如果路径不闭合不会自动填充，而fill会自动填充</li></ul><pre><code class="hljs js"><span class="hljs-comment">//创建路径</span>ctx.beginPath()<span class="hljs-comment">//移动到开始绘制的那个点</span>ctx.moveTo(<span class="hljs-number">100</span>,<span class="hljs-number">100</span>)<span class="hljs-comment">//开始画线</span>ctx.lineTo(<span class="hljs-number">200</span>,<span class="hljs-number">200</span>)ctx.lineTo(<span class="hljs-number">400</span>,<span class="hljs-number">180</span>)ctx.lineTo(<span class="hljs-number">380</span>,<span class="hljs-number">50</span>)<span class="hljs-comment">//闭合路径：最后一次线的末端点连接绘制点（间接的画线）</span>ctx.closePath()<span class="hljs-comment">//给路径上色</span>ctx.strokeStyle = <span class="hljs-string">"red"</span><span class="hljs-comment">//绘制</span>ctx.stroke(); <span class="hljs-comment">//注意，这个只是简单的绘制方法</span></code></pre><p>3、绘制圆弧 <code>arc(x, y, radius, startAngle, endAngle, anticlockwise)</code> - x,y为圆心坐标</p><ul><li>radius为半径</li><li>startAngle 开始角度，一般为0</li><li>endAngle 结束角度，2π为一个圆，2*Math.PI，数字的话为0-7为一个圆</li><li>anticlockwise 默认为false(顺时针)，反之逆时针</li></ul><pre><code class="hljs js">ctx.beginPath()ctx.arc(<span class="hljs-number">200</span>,<span class="hljs-number">200</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-literal">false</span>)ctx.stroke()<span class="hljs-comment">//画圆</span>ctx.beginPath()ctx.arc(<span class="hljs-number">200</span>,<span class="hljs-number">200</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-built_in">Math</span>.PI,<span class="hljs-literal">false</span>)ctx.stroke()ctx.fillStyle = <span class="hljs-string">"orange"</span>ctx.fill()</code></pre><p>4、透明度</p><ul><li>ctx.globalAlpha = 0.2 //0-1之间</li></ul><p>5、线型</p><ul><li>ctx.lineWidth设置线的粗细，默认是1，没有单位</li><li>ctx.lineCap =&gt; 末端的样式<ul><li>= “butt” 向线条的每个末端添加平直的边缘。 -&gt; 默认</li><li>= “round” 向线条的每个末端添加圆形线帽，多出一些长度</li><li>= “square” 向线条的每个末端添加正方形线帽，多出一些长度</li></ul></li><li>ctx.lineJoin =&gt; 交点的样式<ul><li>= “miter” 内外都是尖角（原理为填充菱形），默认</li><li>= “round” 内尖外圆（原理为填充扇形）</li><li>= “bevel” 底部平滑（原理为填充三角形）</li></ul></li></ul><p>6、虚线</p><ul><li><p>线宽：<code>ctx.setLineDash([线宽，间隔])</code> ，数组也可以传多组数据<br>ctx.strokeRect(20,20,200,200)</p></li><li><p>起始偏移量 <code>ctx.lineDashOffset = 2</code></p></li></ul><h4 id="五、绘制文本"><a href="#五、绘制文本" class="headerlink" title="五、绘制文本"></a>五、绘制文本</h4><ul><li>ctx.font = “30px 微软雅黑”</li><li>ctx.textAlign = “center” //right left</li><li>ctx.fillText(“你好,我的文本”, 100, 100)</li></ul><h4 id="六、渐变"><a href="#六、渐变" class="headerlink" title="六、渐变"></a>六、渐变</h4><p>1、线性渐变<br><pre><code class="hljs js"><span class="hljs-comment">//左上角到右下角开始渐变</span><span class="hljs-keyword">var</span> linear = ctx.createLinearGradient(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">200</span>, <span class="hljs-number">200</span>)linear.addColorStop(<span class="hljs-number">0</span>, <span class="hljs-string">"red"</span>)linear.addColorStop(<span class="hljs-number">0.5</span>, <span class="hljs-string">"blue"</span>)linear.addColorStop(<span class="hljs-number">1</span>, <span class="hljs-string">"purple"</span>)ctx.fillStyle = linearctx.fillRect(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">200</span>, <span class="hljs-number">100</span>)</code></pre></p><p>2、径向渐变<br><pre><code class="hljs js"><span class="hljs-keyword">var</span> linear = ctx.createRadialGradient(<span class="hljs-number">95</span>, <span class="hljs-number">25</span>, <span class="hljs-number">25</span>, <span class="hljs-number">102</span>, <span class="hljs-number">20</span>, <span class="hljs-number">40</span>)<span class="hljs-comment">//参数：第一个圆的坐标和半径，第二个圆的坐标和半径</span>linear.addColorStop(<span class="hljs-number">0</span>, <span class="hljs-string">"red"</span>)linear.addColorStop(<span class="hljs-number">0.5</span>, <span class="hljs-string">"blue"</span>)linear.addColorStop(<span class="hljs-number">1</span>, <span class="hljs-string">"purple"</span>)ctx.fillStyle = linearctx.fillRect(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>, <span class="hljs-number">200</span>, <span class="hljs-number">100</span>)</code></pre></p><h4 id="七、阴影"><a href="#七、阴影" class="headerlink" title="七、阴影"></a>七、阴影</h4><pre><code class="hljs js">ctx.shadowOffsetX = <span class="hljs-number">1</span>;ctx.shadowOffsetY = <span class="hljs-number">1</span>;ctx.shadowBlur = <span class="hljs-number">20</span>;   <span class="hljs-comment">//模糊量</span>ctx.shadowColor = <span class="hljs-string">"red"</span>ctx.font = <span class="hljs-string">"30px 宋体"</span>ctx.fillText(<span class="hljs-string">"我是文字"</span>, <span class="hljs-number">100</span> ,<span class="hljs-number">100</span>)</code></pre><h4 id="八、使用图片"><a href="#八、使用图片" class="headerlink" title="八、使用图片"></a>八、使用图片</h4><pre><code class="hljs js"><span class="hljs-comment">//1、创建image元素</span><span class="hljs-keyword">var</span> image = <span class="hljs-keyword">new</span> Image()<span class="hljs-comment">//2、用src设置图片地址</span>image.src = <span class="hljs-string">"image/1.jpg"</span><span class="hljs-comment">//3、进行图片加载，然后绘制</span>image.onLoad = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    ctx.drawImage(image, x, y [,width,height])    <span class="hljs-comment">//8个参数的含义：切片,切下来移动后，缩放后，再渲染出来</span>    ctx.drawImage(image, x, y, slice_width, slice_height, slice_result_position_x, slice_result_position_y, slice_result_scale_x, slice_result_scale_y)&#125;</code></pre><h4 id="九、变形"><a href="#九、变形" class="headerlink" title="九、变形"></a>九、变形</h4><p>1、定义：canvas是可以变形的，但变形的不是元素，而是画布本身<br>2、基本属性</p><ul><li>save() =&gt; 用来保存状态</li><li>restore() =&gt; 用来恢复状态</li></ul><p>3、可保存的属性：strokeStyle, fillStyle, blobalAiphp, lineWidth, lineCap, lineJoin, miterLimit, lineDashOffset, shadowOffsetX,shadowOffsetY, shadowBlur, shadowColor, globalComposite, font,textAlign, textBaseLine,direction, imageSmoothingEnabled</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>canvas</tag>
      
      <tag>HTML5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重温JS（四）</title>
    <link href="/2021/04/09/%E9%87%8D%E6%B8%A9JS%EF%BC%88%E5%9B%9B%EF%BC%89/"/>
    <url>/2021/04/09/%E9%87%8D%E6%B8%A9JS%EF%BC%88%E5%9B%9B%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h4 id="一、浏览器的BOM对象"><a href="#一、浏览器的BOM对象" class="headerlink" title="一、浏览器的BOM对象"></a>一、浏览器的BOM对象</h4><ul><li>Window<ul><li>代表的是整个浏览器的窗口，同时也是网页的全局对象</li></ul></li><li>Navigator<ul><li>代表的当前浏览器的信息，通过改对象可以识别不同的浏览器</li></ul></li><li>Location<ul><li>代表当前浏览器的地址栏信息，也可以操作浏览器跳转页面</li></ul></li><li>History<ul><li>代表历史记录，可以通过该对象来操作浏览器的历史记录</li><li>由于隐私问题，不能获取具体的历史纪录</li><li>只能操作页面向前后者向后操作</li><li>该操作只在档次访问时有效（不关闭浏览器）</li></ul></li><li>Screen<ul><li>获得显示器相关的信息</li></ul></li></ul><p><code>这些对象都是window的属性，因为是全局的，所以可以直接调用</code></p><h4 id="二、navigator"><a href="#二、navigator" class="headerlink" title="二、navigator"></a>二、navigator</h4><p>用于识别不同的浏览器<br><pre><code class="hljs js"><span class="hljs-keyword">var</span> ua = navigator.userAgent<span class="hljs-built_in">console</span>.log(ua)<span class="hljs-keyword">if</span> (<span class="hljs-regexp">/firefox/i</span>.test(ua)) &#123;  alert(<span class="hljs-string">"火狐"</span>)&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/chrome/i</span>.test(ua)) &#123;  alert(<span class="hljs-string">"你是chrome"</span>)&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/msie/i</span>.test(ua)) &#123;  alert(<span class="hljs-string">"你是IE"</span>)&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (<span class="hljs-string">"ActiveXObject"</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">window</span>)) &#123;  <span class="hljs-comment">//IE11，window.activeXObject =&gt; false</span>  alert(<span class="hljs-string">"你是IE11"</span>)&#125;</code></pre></p><h4 id="三、History"><a href="#三、History" class="headerlink" title="三、History"></a>三、History</h4><p><code>用来操作浏览器向前或向后</code></p><ul><li>history.length =&gt; 获取到访问链接数量</li><li>history.back() =&gt; 退回上一个页面</li><li>history.forward() =&gt; 前进一个页面</li><li>history.go(num) =&gt; -1，1，2跳转</li></ul><h4 id="四、Location"><a href="#四、Location" class="headerlink" title="四、Location"></a>四、Location</h4><p><code>封装了地址栏信息</code></p><ul><li>alert(location)<br>如果直接将使用，则打印当前页面的完整路径。</li><li>location = “<a href="http://www.baidu.com&quot;" target="_blank" rel="noopener">http://www.baidu.com&quot;</a><br>修改为别的完整路径/相对路径，页面会自动条状，并且生成相应的历史记录</li><li>location.assign(“<a href="http://www.baidu.com&quot;" target="_blank" rel="noopener">http://www.baidu.com&quot;</a>)<br>和直接修改一样</li><li>location.reload([true])<br>用于重新加载页面，作用和刷新按钮一样，可选参数，强制清空缓存true</li><li>location.replace(“<a href="http://www.baidu.com&quot;" target="_blank" rel="noopener">http://www.baidu.com&quot;</a>)<br>不会生成历史记录，不能使用回退按钮</li></ul><h4 id="五、定时器"><a href="#五、定时器" class="headerlink" title="五、定时器"></a>五、定时器</h4><ul><li><p>定时调用</p><pre><code class="hljs js"><span class="hljs-keyword">var</span> timer = setInterval(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;  count.innerHTML = num++&#125;, <span class="hljs-number">1000</span>)<span class="hljs-comment">//返回一个唯一标识（数字），用这个数字来清除定时器</span><span class="hljs-comment">//参数可以接收任何参数，如果不是一个有效的标识，则什么也不做</span>clearInterval(timer)</code></pre></li><li><p>延时调用，只执行一次</p><pre><code class="hljs js"><span class="hljs-keyword">var</span> timer = setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"test"</span>)&#125;, <span class="hljs-number">2000</span>)<span class="hljs-comment">//关闭延时调用</span>clearTimeout(timer)</code></pre></li></ul><h4 id="六、JSON"><a href="#六、JSON" class="headerlink" title="六、JSON"></a>六、JSON</h4><p>1、json只允许的值</p><ul><li>字符串</li><li>数值</li><li>布尔值</li><li>null</li><li>对象</li><li>数组</li></ul><p><code>不能是函数</code></p><p>2、json字符串转化为JS对象<br><code>var obj = JSON.parse(json字符串)</code></p><p>3、JS对象转字符串化<br><code>var str = JSON.stringify(obj)</code></p><p>4、eval()函数</p><ul><li>IE7不支持JSON</li><li>可以执行字符串代码</li><li>但是性能差，不建议使用，有安全隐患</li><li>对象的{}会当成代码块，提示需要加“；”<pre><code class="hljs js"><span class="hljs-keyword">var</span> str = <span class="hljs-string">"&#123;'name': 'hh'&#125;"</span><span class="hljs-keyword">var</span> obj = <span class="hljs-built_in">eval</span>(<span class="hljs-string">"("</span>+str+<span class="hljs-string">")"</span>);</code></pre></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重温JS（三）</title>
    <link href="/2021/04/08/%E9%87%8D%E6%B8%A9JS%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <url>/2021/04/08/%E9%87%8D%E6%B8%A9JS%EF%BC%88%E4%B8%89%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h4 id="一、查找DOM"><a href="#一、查找DOM" class="headerlink" title="一、查找DOM"></a>一、查找DOM</h4><h5 id="1、document对象获得元素（方法）"><a href="#1、document对象获得元素（方法）" class="headerlink" title="1、document对象获得元素（方法）"></a>1、document对象获得元素（方法）</h5><ul><li>通过id属性 document.getElementById 获得元素并修改值</li><li>通过标签名 document.getElementsByTagName 获得标签数组</li><li>通过name属性 document.getElementsByName 获得标签数组</li><li>通过class属性 document.getElementsByClassName 获得标签数组（IE8以下不支持）<pre><code class="hljs js"><span class="hljs-keyword">var</span> btn = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"btn"</span>)btn.innerHTML = <span class="hljs-string">"I'm a button"</span><span class="hljs-comment">//获得的标签对象数组，可直接使用元素.属性名获取属性</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; inputs.length; i++) &#123;  alert(inputs[i].name)  alert(inputs[i].value)  <span class="hljs-comment">//但是获得class属性不能直接.class，因为class是js保留字。</span>  <span class="hljs-comment">//需要用className来获取</span>  alert(inputs[i].className)&#125;</code></pre></li></ul><h5 id="2、元素对象获得子元素同样适用（方法）"><a href="#2、元素对象获得子元素同样适用（方法）" class="headerlink" title="2、元素对象获得子元素同样适用（方法）"></a>2、元素对象获得子元素同样适用（方法）</h5><ul><li>getElementById =&gt; 唯一</li><li>getElementsByTagName =&gt; 数组</li><li>getElementsByName =&gt; 数组</li></ul><h5 id="3、元素获得子节点（属性）"><a href="#3、元素获得子节点（属性）" class="headerlink" title="3、元素获得子节点（属性）"></a>3、元素获得子节点（属性）</h5><p>（1）e.childNodes =&gt; 不推荐使用</p><ul><li>获得的是数组</li><li><code>主流浏览器DOM标签左右空白部分也会当成文本结点，IE8不会</code></li></ul><p>（2）e.children =&gt; 推荐使用</p><ul><li>获得的是数组</li><li><code>只获得元素结点，不包括空白</code></li></ul><p>（3）元素获得第一个/最后一个子节点 e.firstChild / e.lastChild</p><ul><li>包括空白</li></ul><p>（4）元素获得第一个/最后一个子节点 e.firstElementChild / e.lastElementChild</p><ul><li>不包括空白</li><li><code>不兼容IE8及以下</code></li></ul><h5 id="4、元素获得父节点-parentNode（属性）"><a href="#4、元素获得父节点-parentNode（属性）" class="headerlink" title="4、元素获得父节点 parentNode（属性）"></a>4、元素获得父节点 parentNode（属性）</h5><h5 id="5、元素获得前一个兄弟节点（属性）"><a href="#5、元素获得前一个兄弟节点（属性）" class="headerlink" title="5、元素获得前一个兄弟节点（属性）"></a>5、元素获得前一个兄弟节点（属性）</h5><ul><li>previousSibling （空格有影响）</li><li>previousElementSibling（直接获得元素）</li></ul><h5 id="6、获得文本节点"><a href="#6、获得文本节点" class="headerlink" title="6、获得文本节点"></a>6、获得文本节点</h5><ul><li>pn.innerHTML：获得内部节点的所有HTML元素</li><li>pn.innerText：获得内部节点的所有Text文本（过滤标签)</li><li>pn.firstChild.nodeValue：第一个文本节点（也就是文本）</li></ul><h5 id="7、获得其他节点"><a href="#7、获得其他节点" class="headerlink" title="7、获得其他节点"></a>7、获得其他节点</h5><ul><li>body节点：document.body</li><li>html节点：document.documentElement  </li><li>获得所有节点-方法一：document.all =&gt; 是undefined，但是有长度，可以遍历</li><li>获得所有节点-方法二：document.getElementsByName(“*”) =&gt; 不是undefined，有长度，可以遍历</li></ul><h5 id="8、样式选择器"><a href="#8、样式选择器" class="headerlink" title="8、样式选择器"></a>8、样式选择器</h5><ul><li>document.querySelector()<ul><li>如果结果是数组，则只取第一个</li><li>支持IE8</li></ul></li><li>document.querySelectorAll()<ul><li>始终是数组</li><li>支持IE8</li></ul></li></ul><h5 id="8、绑定监听事件"><a href="#8、绑定监听事件" class="headerlink" title="8、绑定监听事件"></a>8、绑定监听事件</h5><pre><code class="hljs js">btn.onclick = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;  alert(<span class="hljs-string">"点击了~"</span>)&#125;</code></pre><h5 id="9、文档的加载"><a href="#9、文档的加载" class="headerlink" title="9、文档的加载"></a>9、文档的加载</h5><ul><li>逐行加载</li><li>如果js放在html头部，会出现没有dom就操作dom错误</li><li>onload 页面加载完成后再执行<pre><code class="hljs js"><span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;  alert(<span class="hljs-string">"hello"</span>)&#125;</code></pre></li></ul><h4 id="二、操作DOM"><a href="#二、操作DOM" class="headerlink" title="二、操作DOM"></a>二、操作DOM</h4><h5 id="1、创建"><a href="#1、创建" class="headerlink" title="1、创建"></a>1、创建</h5><ul><li>元素 document.createElement(“li”)</li><li>创建文本节点 document.createTextNode(“广州”)<h5 id="2、添加"><a href="#2、添加" class="headerlink" title="2、添加"></a>2、添加</h5></li><li>尾部添加：ul.appendChild(li)</li><li>任意插入：在指定子节点前插入新的子节点 city.insertBefore(新节点, 旧节点)</li><li>HTML添加：ul.innerHTML += “<code>&lt;li&gt;广州&lt;/li&gt;</code>“ =&gt; 直接追加HTML也可以<h5 id="3、修改"><a href="#3、修改" class="headerlink" title="3、修改"></a>3、修改</h5></li><li>替换：新节点替换旧节点 city.replaceChild(新节点, 旧节点)</li></ul><h5 id="4、删除"><a href="#4、删除" class="headerlink" title="4、删除"></a>4、删除</h5><ul><li>直接：city.removeChild(bj)</li><li>间接：bj.parentNode.removeChild(bj)<ul><li>方便，不需要提前获取父节点</li><li>缺点，改动太大不建议使用</li></ul></li></ul><h5 id="5、结合使用"><a href="#5、结合使用" class="headerlink" title="5、结合使用"></a>5、结合使用</h5><pre><code class="hljs js"><span class="hljs-keyword">var</span> li = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">"li"</span>)li.innerHTML = <span class="hljs-string">"广州"</span>city.appendChild(li)</code></pre><h5 id="6、样式-gt-内联样式"><a href="#6、样式-gt-内联样式" class="headerlink" title="6、样式 -&gt; 内联样式"></a>6、样式 -&gt; 内联样式</h5><pre><code class="hljs js">box1.style.width = <span class="hljs-string">"300px"</span>box2.style.height = <span class="hljs-string">"300px"</span>box2.style.backgroudColor = <span class="hljs-string">"yellow"</span> <span class="hljs-comment">//改为驼峰</span><span class="hljs-comment">//读取和设置，都是内联样式</span></code></pre><ul><li><p>获得当前样式（IE专属）<br>box1.currentStyle.width</p></li><li><p>获得当前样式（window方法，浏览器通用），如果没有设置值，获得的是真实值，而不是默认值，该方法不支持IE8<br>getComputedStyle(box1, null).width  //参数二为微元素</p></li></ul><p>兼容性方案<br><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getStyle</span>(<span class="hljs-params">obj, name</span>) </span>&#123;  <span class="hljs-keyword">if</span>(<span class="hljs-built_in">window</span>.getComputedStyle) &#123;   <span class="hljs-comment">//如果不加window，依然在这里判断的时候，会查找getComputedStyle方法，所以加window.属性的方式，才是返回undefined</span>    <span class="hljs-comment">//正常浏览器</span>    <span class="hljs-keyword">return</span> getComputedStyle(obj, <span class="hljs-literal">null</span>)[name]  &#125; <span class="hljs-keyword">else</span> &#123;    <span class="hljs-comment">//IE8方式，没有getComputedStyle()</span>    <span class="hljs-keyword">return</span> obj.currentStyle[name]  &#125;&#125;</code></pre></p><h5 id="7、其他属性"><a href="#7、其他属性" class="headerlink" title="7、其他属性"></a>7、其他属性</h5><ul><li>box.clientWidth =&gt; 内容+内边距</li><li>box.offsetWidth =&gt; 内容+内边距+边框</li><li>box.offsetParent =&gt; 返回最近的开启了定位的祖先元素（找不到则为body）</li><li>box.offsetLeft =&gt; 当前元素相对于其定位父元素的水平偏移量</li><li>box.offsetTop =&gt; 当前元素相对于其定位父元素的垂直偏移量</li><li>box.scrollHeight =&gt; 滚动高度</li><li>box.scrollLeft =&gt; 水平滚动条滚动的距离</li></ul><p>//滚动条到底：scrollHeight - scrollTop == clientHeight<br>//监听滚动 box.onscoll = function() {}… </p><h5 id="8、事件对象"><a href="#8、事件对象" class="headerlink" title="8、事件对象"></a>8、事件对象</h5><ul><li>鼠标滚动事件<pre><code class="hljs js">areaDiv.onmousemove = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) </span>&#123;  <span class="hljs-comment">//IE8中event事件不存在，而是存在window中</span>  <span class="hljs-comment">//解决兼容性</span>  event = event || <span class="hljs-built_in">window</span>.event  <span class="hljs-keyword">var</span> x = event.clientX  <span class="hljs-keyword">var</span> y = event.clientY&#125;</code></pre></li></ul><h5 id="9、事件冒泡"><a href="#9、事件冒泡" class="headerlink" title="9、事件冒泡"></a>9、事件冒泡</h5><ul><li>event.cancelBubble = true</li></ul><h5 id="10、事件的委派"><a href="#10、事件的委派" class="headerlink" title="10、事件的委派"></a>10、事件的委派</h5><ul><li>指的是将事件统一绑定给元素的共同祖先元素，这样当后代元素上的事件触发时，使用的是祖先的事件（原理是冒泡）</li><li>然后利用 event.target 获得目标事件，从而实现点击父节点作用子节点。</li></ul><h5 id="11、事件监听"><a href="#11、事件监听" class="headerlink" title="11、事件监听"></a>11、事件监听</h5><p>1、addEventListener(“click”, function(){}, false)</p><ul><li>参数一：事件字符串，不需要on</li><li>参数二：回调函数</li><li>参数三：是否在捕获时触发，一般都为false</li><li>使用同事件监听，可以同时为一个元素的相同事件绑定多个响应函数，当事件被触发时，响应函数会顺序执行</li><li>this 指的是绑定事件<pre><code class="hljs js">btn01.addEventListener(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;alert(<span class="hljs-string">"1"</span>)&#125;, <span class="hljs-literal">false</span>);btn01.addEventListener(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;alert(<span class="hljs-string">"2"</span>)&#125;, <span class="hljs-literal">false</span>);btn01.addEventListener(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;alert(<span class="hljs-string">"3"</span>)&#125;, <span class="hljs-literal">false</span>);</code></pre></li></ul><p>2、IE8及以下使用attachEvent(“onclick”,function() {})</p><ul><li>不同的是，它的执行顺序是倒叙的</li><li>this 指的是window</li></ul><p>3、统一成一个bind函数（兼容性）</p><ul><li>解决不同浏览器兼容性问题</li><li>解决不同的this指向问题</li></ul><pre><code class="hljs js">bind(btn, <span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;  alert(<span class="hljs-keyword">this</span>)&#125;)<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bind</span>(<span class="hljs-params">obj, eventStr, callback</span>) </span>&#123;  <span class="hljs-keyword">if</span> (obj.addEventListener) &#123;    <span class="hljs-comment">//大部分浏览器兼容的方式</span>    obj.addEventListener(eventStr, callback, <span class="hljs-literal">false</span>)  &#125; <span class="hljs-keyword">else</span> &#123;    <span class="hljs-comment">//IE8及以下</span>    <span class="hljs-comment">//this是谁，由调用者决定</span>    <span class="hljs-comment">//解决方案，使用匿名函数，来调用这个回调函数，就可以把默认的的Window替换掉了</span>    obj.attachEvent(<span class="hljs-string">"on"</span>+eventStr, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;      callback.call(obj)    &#125;)  &#125;&#125;</code></pre><p>4、事件的传播</p><ul><li>关于事件的传播，网景公司和微软公司有不同的理解<ul><li>微软公司认为事件应该是由内向外传播，也就是事件的冒泡阶段。</li><li>网景公司认为事件应该由外向内传播。</li></ul></li><li>W3C整合了两种方案，将事件传播分成了三个阶段<ul><li>捕获阶段：在捕获阶段，从最外层的祖先元素，向目标元素进行事件的捕获，但是默认此事<code>不会触发</code>事件。</li><li>目标阶段：事件捕获到目标元素，捕获结束开始在目标事件上触发事件。</li><li>冒泡阶段：事件从目标元素向他的祖先元素传递，依次触发祖先元素上的事件。</li></ul></li><li>如果希望在捕获阶段就触发事件，可以将addEventListener()的第三个参数设置为true，不过一般都是false </li><li>IE8及以下不存在事件的捕获。</li></ul><h5 id="12、元素拖拽"><a href="#12、元素拖拽" class="headerlink" title="12、元素拖拽"></a>12、元素拖拽</h5><ul><li>box1按下事件：box1.onmousedown()</li><li>document绑定移动事件：onmousemove()</li><li>修改box1的坐标</li><li>document绑定事件松开事件，onmouseup()<pre><code class="hljs js">box1.onmousedown = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;  <span class="hljs-comment">//document监听，防止覆盖</span>  <span class="hljs-built_in">document</span>.onmousemove = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">event</span>) </span>&#123;    event = event || <span class="hljs-built_in">window</span>.event;    <span class="hljs-keyword">var</span> left = event.clientX    <span class="hljs-keyword">var</span> top = event.clientY    <span class="hljs-comment">//修改box1的位置</span>    box1.style.left = left + <span class="hljs-string">"px"</span>    box2.style.top = top + <span class="hljs-string">"px"</span>  &#125;;  <span class="hljs-comment">//document绑定一个鼠标松开事件</span>  <span class="hljs-built_in">document</span>.onmouseup = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-built_in">document</span>.onmousemove = <span class="hljs-literal">null</span>    <span class="hljs-built_in">document</span>.onmouseup = <span class="hljs-literal">null</span> <span class="hljs-comment">//自杀掉</span>  &#125;  &#125;</code></pre></li></ul><h5 id="13、滚轮事件"><a href="#13、滚轮事件" class="headerlink" title="13、滚轮事件"></a>13、滚轮事件</h5><pre><code class="hljs js"><span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;  <span class="hljs-comment">/* 当鼠标滚轮向下滚动时，box1变长，向上变短 */</span>  <span class="hljs-keyword">var</span> box1 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"box1"</span>)  <span class="hljs-comment">/* 火狐浏览器不兼容 */</span>  box1.onmousewheel = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    event = event || <span class="hljs-built_in">window</span>.event    <span class="hljs-comment">//判断鼠标滚轮的方向，向上滚120，向下滚-120，我们只看正负不看大小。</span>    <span class="hljs-keyword">if</span> (event.wheelDelta &gt; <span class="hljs-number">0</span> || event.detail &lt; <span class="hljs-number">0</span>) &#123;      box1.style.height = box1.clientHeight - <span class="hljs-number">10</span> + <span class="hljs-string">"px"</span>    &#125;<span class="hljs-keyword">else</span> &#123;      box1.style.height = box1.clientHeight + <span class="hljs-number">10</span> + <span class="hljs-string">"px"</span>    &#125;    <span class="hljs-comment">/*      * 使用addEventListener()方法绑定响应函数，不能使用return false     * 需要event采用取消默认行为      */</span>     event.preventDefault();    <span class="hljs-comment">/* 当滚轮滚动时，如果浏览器有滚动条，滚动条会随之滚动。       这是浏览器的默认行为，如果不希望发生，则可以取消默认行为。     */</span>     <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>  &#125;  <span class="hljs-comment">/* 火狐浏览器需要搭配addEventListener使用 */</span>  bind(box1, <span class="hljs-string">"onmousewheel"</span>, box1.onmousewheel)&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">bind</span>(<span class="hljs-params">obj, eventStr, callback</span>) </span>&#123;  <span class="hljs-keyword">if</span> (obj.addEventListener) &#123;    <span class="hljs-comment">//大部分浏览器兼容的方式</span>    obj.addEventListener(eventStr, callback, <span class="hljs-literal">false</span>)  &#125; <span class="hljs-keyword">else</span> &#123;    <span class="hljs-comment">//IE8及以下</span>    <span class="hljs-comment">//this是谁，由调用者决定</span>    <span class="hljs-comment">//解决方案，使用匿名函数，来调用这个回调函数，就可以把默认的的Window替换掉了</span>    obj.attachEvent(<span class="hljs-string">"on"</span>+eventStr, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;      callback.call(obj)    &#125;)  &#125;&#125;</code></pre><h5 id="5、键盘事件"><a href="#5、键盘事件" class="headerlink" title="5、键盘事件"></a>5、键盘事件</h5><pre><code class="hljs js"><span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;  <span class="hljs-comment">//如果一直按着，则事件会一直被触发</span>  <span class="hljs-comment">//连续触发时，第一次和第二次会有一点点间隔时间，其他时间会非常的快。</span>  <span class="hljs-comment">//为了防止误操作</span>  <span class="hljs-built_in">document</span>.onkeydown = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;    event = event || <span class="hljs-built_in">window</span>.event    <span class="hljs-comment">//可以通过它可以判断哪个按键被按下</span>    <span class="hljs-built_in">console</span>.log(event.keyCode)  <span class="hljs-comment">//按键的编码</span>    <span class="hljs-keyword">if</span> (event.keyCode === <span class="hljs-number">89</span> &amp;&amp; event.ctrlKey) &#123;<span class="hljs-comment">//altKey ctrlKey shiftKey</span>      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"同时按下了"</span>)    &#125;  &#125;  <span class="hljs-built_in">document</span>.onkeyup = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"按键被松开"</span>)  &#125;  <span class="hljs-comment">//特点</span>  input.onkeydown = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"按键被按下了，但是没有内容"</span>);    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>  <span class="hljs-comment">//这个操作可以阻止文本框输入 -&gt; 过滤</span>  &#125;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重温JS（二）</title>
    <link href="/2021/03/27/%E9%87%8D%E6%B8%A9JS%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2021/03/27/%E9%87%8D%E6%B8%A9JS%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h4 id="一、数组"><a href="#一、数组" class="headerlink" title="一、数组"></a>一、数组</h4><p>1、arr.length的值</p><blockquote><p>是根据下标最大那个决定的，如果中间没有元素则为空（,,,,)</p></blockquote><p>2、修改length的值产生的影响</p><blockquote><p>变大，没有值的为空（,,,,)<br>  变小，相当于删除尾部元素</p></blockquote><p>3、构造函数创建数组的细节</p><blockquote><p>//多个参数，则创建的是这些参数的数组<br>var arr = new Array(10,20,30)<br>=&gt; “10,20,30”</p></blockquote><blockquote><p>//一个参数时，创建的是开辟这么大空间的数组<br>var arr = new Array(10)<br>=&gt; “,,,,,,,,,,,,,”</p></blockquote><p>4、数组遍历arr.forEach((value,index,arr) =&gt; {})的三个参数分别是当前项的值，当前项的下标和当前遍历的对象<br><code>IE8一下不兼容</code></p><p>5、常用方法</p><ul><li>arr.push(…x) =&gt; 向尾加元素 =&gt; 返回长度</li><li>arr.pop() =&gt; 向尾删元素 =&gt; 返回被删元素</li><li>arr.unshift(…x) =&gt; 向头加元素 =&gt; 返回长度</li><li>arr.shift() =&gt; 向头删元素 =&gt; 返回长度</li><li>arr.slice(start[,end]) =&gt; 切片，取左不取右，end不写默认为全部，可以为负值 =&gt; 不影响原数组，返回新数组</li><li>arr.splice(start_index, count [,…newElement]) =&gt; 两个参数就是删除，三个参数就是删除后添加，count可为0 =&gt; 返回新数组</li><li>arr.concat(newArr) =&gt; 拼接数组 =&gt; 不会对元数组产生影响</li><li>arr.join(“,”) =&gt; 参数是连接符，默认是逗号 =&gt; 不会对元数组产生影响</li><li>arr.reverse =&gt; 反转 =&gt; 会修改原数组 </li><li>arr.sort() =&gt; 默认Unicode的编码排序<pre><code class="hljs javascript"><span class="hljs-comment">//自定排序规则：根据回调函数的返回值设置</span>arr.sort(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) </span>&#123;  <span class="hljs-comment">//a始终是b的前一个元素，返回值大于1则交换，等于0不交换，小于1不交换</span>  <span class="hljs-comment">//这里a-b为升序</span>  <span class="hljs-keyword">return</span> a - b  &#125;)</code></pre></li></ul><h4 id="二、函数的call和apply方法"><a href="#二、函数的call和apply方法" class="headerlink" title="二、函数的call和apply方法"></a>二、函数的call和apply方法</h4><p>作用：<code>修改函数的this指向</code></p><ul><li>两个都是函数的方法，需要通过函数对象去调用</li><li>当对函数调用call()和apply()都会调用函数执行</li><li>在调用call()和apply()时，可以将一个对象作为参数传递进去，那个这个参数（对象）将成为函数的this</li></ul><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> obj1 = &#123;  <span class="hljs-attr">name</span>: <span class="hljs-string">"我是obj1"</span>&#125;<span class="hljs-keyword">var</span> obj2 = &#123;  <span class="hljs-attr">name</span>: <span class="hljs-string">"我是obj2"</span>&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fun</span>(<span class="hljs-params"></span>) </span>&#123;  <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name)&#125;========================fun() =&gt; <span class="hljs-comment">//打印undefined，因为没有全局变量name</span>fun.call(obj1) =&gt; <span class="hljs-comment">//打印“我是obj1”</span>fun.apply(obj2) =&gt; <span class="hljs-comment">//打印“我是obj2”</span></code></pre><p>区别：</p><ul><li>call()方法可以将实参在对象之后依次传递</li><li>apply()方法需要将实参封装到一个数组中统一传递（也就是只有两个参数位置）<pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fun</span>(<span class="hljs-params">a, b</span>) </span>&#123;  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"a = "</span>,a)  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"b = "</span>,b)  <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name)&#125;<span class="hljs-keyword">var</span> obj = &#123;  <span class="hljs-attr">name</span>: <span class="hljs-string">"我是obj"</span>&#125;fun.call(obj, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>)fun.apply(abj, [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]) =&gt; 会自动解构</code></pre></li></ul><h4 id="三、函数的另一个隐式参数：arguments"><a href="#三、函数的另一个隐式参数：arguments" class="headerlink" title="三、函数的另一个隐式参数：arguments"></a>三、函数的另一个隐式参数：arguments</h4><p>在调用函数时，浏览器每次都会传递两个隐式参数：<br>1、函数的上下文对象this<br>2、封装实参的对象arguments</p><ul><li>arguments是一个<code>类数组</code><ul><li>arguments.length可获得它的长度</li><li>但它不是数组（argumentsinstanceof array =&gt; false)</li></ul></li><li>即使不定义形参，也可用通过arguments来使用实参<ul><li>用法类似数组arguments[0]，arguments[1]</li></ul></li><li>arguments存在一个属性callee，该属性指向当前正在执行的函数<ul><li>arguments.callee == fun</li></ul></li></ul><h4 id="四、new-Date"><a href="#四、new-Date" class="headerlink" title="四、new Date()"></a>四、new Date()</h4><p>1、创建方式<br><pre><code class="hljs javascript"><span class="hljs-comment">//直接new对象</span><span class="hljs-keyword">var</span> d = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>() =&gt; 当前时间<span class="hljs-comment">//指定日期格式：月/日/年(需要4位，2位的话ie可能歧义) 时:分:秒</span><span class="hljs-keyword">var</span> d = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-string">"12/02/2021 11:20:22"</span>) =&gt; 指定时间</code></pre></p><p>2、相关方法<br><pre><code class="hljs js">d.getFullYear() =&gt; 取代getYear，这里返回正常<span class="hljs-number">4</span>位的年份d.getMonth() =&gt; 获得月份（<span class="hljs-number">0</span><span class="hljs-number">-11</span>），需要+<span class="hljs-number">1</span>d.getDate() =&gt; 获得日期是几日d.getDay() =&gt; 获得周几（<span class="hljs-number">0</span><span class="hljs-number">-6</span>）d.getHours() =&gt; <span class="hljs-number">0</span><span class="hljs-number">-23</span>d.getMinutes() =&gt; <span class="hljs-number">0</span><span class="hljs-number">-59</span>d.getSeconds() =&gt; <span class="hljs-number">0</span><span class="hljs-number">-59</span>d.getMiliseconds() =&gt; 获得毫秒 <span class="hljs-number">0</span><span class="hljs-number">-999</span><span class="hljs-comment">//时间戳，计算机底层保存时间就是用时间戳</span>d.getTime() =&gt; 获得从格林威治标准时间的<span class="hljs-number">1970</span><span class="hljs-number">-1</span><span class="hljs-number">-1</span>至今的毫秒数<span class="hljs-comment">//另一种方式直接获取时间戳</span><span class="hljs-built_in">Date</span>.now()</code></pre></p><p>3、关于时间戳的细节<br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> d = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-string">"1/1/1970 0:0:0"</span>)<span class="hljs-keyword">var</span> timestamp = d.getTime()<span class="hljs-built_in">console</span>.log(timestamp) =&gt; <span class="hljs-string">"-28800000"</span>解释：当前系统时间为中国北京时间，位于时区的东八区，刚好比格林威治时间早<span class="hljs-number">8</span>小时</code></pre></p><h4 id="五、基本数据类型的包装类"><a href="#五、基本数据类型的包装类" class="headerlink" title="五、基本数据类型的包装类"></a>五、基本数据类型的包装类</h4><ul><li>基本数据类型变量是无法使用属性和方法的</li><li>但是用它定义属性的时候不会报错，是因为浏览器临时把变量封装成对象然后进行调用对象的方法，但是调用完之后又自动销毁了</li><li>然后使用刚刚定义的属性又会自动装箱封装成一个新的对象来进行读取操作，因为是新对象，所以刚刚定义的属性不存在，所以打印是undefined</li></ul><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> a = <span class="hljs-number">123</span><span class="hljs-comment">//不报错，自动装箱，封装对象并定义该属性，定义完了又销毁了</span>a.name = <span class="hljs-string">"hello"</span><span class="hljs-comment">//不报错，只是在读取的时候，也会自动装箱进行封装对象</span><span class="hljs-comment">//然后读取完了（undefined）了，又销毁了</span><span class="hljs-built_in">console</span>.log(a.name) =&gt; <span class="hljs-literal">undefined</span></code></pre><h4 id="六、字符串详讲"><a href="#六、字符串详讲" class="headerlink" title="六、字符串详讲"></a>六、字符串详讲</h4><p><code>字符串在在底层是以数组的形式保存的</code></p><ul><li>str.charAt(index) =&gt; 指定位置的字符</li><li>str.charCodeAt(index) =&gt; 指定位置的字符的编码（Unicode）</li><li>String.fromCharCode(72) =&gt; “H”</li><li>str.concat(“拼接字符”) =&gt; 同+号</li><li>str.indexOf(“h”[,startIndex]) =&gt; 第一个h的index，没有找到则返回-1</li><li>str.lastIndexOf(“h”[,startIndex]) =&gt; 从后往前找</li><li>str.slice   =&gt; 切片，取左不取右</li><li>str.substring =&gt; 类似切片，也是取左不取右（参数位置会自动交换为正序）</li><li>str.split(“x”)  =&gt; 根据参数拆分数组，支持传入正则对象</li><li>str.toUpperCase() =&gt; 大写</li><li>str.toLowerCase() =&gt; 小写</li></ul><h4 id="七、正则表达式详讲"><a href="#七、正则表达式详讲" class="headerlink" title="七、正则表达式详讲"></a>七、正则表达式详讲</h4><p>1、创建方式：构造函数、字面量<br><pre><code class="hljs js"><span class="hljs-comment">//最简单的正则表达式，构造函数创建正则对象</span><span class="hljs-keyword">var</span> reg = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-string">"ab"</span>, <span class="hljs-string">"i/g"</span>)  <span class="hljs-comment">//第二个参数为匹配模式，i为忽略大小写，g为全局匹配</span>reg.test(<span class="hljs-string">"Abcd"</span>) =&gt; <span class="hljs-literal">true</span></code></pre></p><p>开发中常用的方式为，字面量的方式直接创建</p><pre><code class="hljs js"><span class="hljs-keyword">var</span> reg = <span class="hljs-regexp">/ab/i</span>reg.test(<span class="hljs-string">"abc"</span>) =&gt; <span class="hljs-literal">true</span></code></pre><p>2、基本语法</p><ul><li>“|”、[ ] 表示或关系<ul><li>[abcd] == a|b|c|d</li><li>[A-Z] =&gt; 大写字母</li><li>[a-z] =&gt; 小写字母</li><li>[A-z] =&gt; 忽略大小写的字母</li><li>[0-9] =&gt; 数字<ul><li>/a[bde]c/ =&gt; 检查字母中含有abc或者adc或者aec</li></ul></li></ul></li><li>^ 表示非关系<ul><li><code>[^abc]</code> =&gt; 查找任何不在中括号以内的字符</li></ul></li><li>{} 量词<ul><li>/a{n}/ =&gt; 出现n次a</li><li>/ab{n}/ =&gt; 出现n次b</li><li>/(ab){n}/ =&gt; 出现n次ab</li><li>/ab{m,n}/ =&gt; b出现m到n次即可</li><li>/a{m,}/  =&gt; a出现m次以上</li><li>/ab<em>c/   =&gt; </em>表示0次或多次    =&gt; {0,}</li><li>/ab?c/   =&gt; ?表示0次或1次     =&gt; {0,1}</li><li>/ab+c/   =&gt; +表示至少出现一次 =&gt; {1,}</li></ul></li><li>匹配头尾<ul><li><code>/^abc/</code> =&gt; 只能以a开头</li><li>/abc$/ =&gt; 只能以c结尾</li><li>/^a$/  =&gt;  这个a既是匹配头又是匹配尾 =&gt; ‘a’才是true</li></ul></li><li>通配符 . 点<ul><li>任意字符，除了换行符和结束符</li><li>纯粹匹配.这个字符，需要转义，加反斜杠“\.” ==&gt; 引申“\\”</li><li>在构造函数中，字符串需要两个反斜杠才等同于一个反斜杠 =&gt; new RegExp(“\\.”)才等同于/\./</li></ul></li><li>\w 任意字母、数字、下划线_ &lt;==&gt; [A-z0-9]</li><li>\W w的取反 =&gt; [^A-z0-9]</li><li>\d 任意数字 &lt;==&gt; [0-9]</li><li>\D 非数字  =&gt; [^0-9]</li><li>\s 空格</li><li>\S 除了空格</li><li>\b 单词边界 =&gt; 识别是不是一个单词<ul><li>/\bchild\b/ =&gt; “hello child “</li></ul></li></ul><p>3、搭配字符串的方法使用</p><ul><li>str.split(正则)</li><li>str.search(reg/str) =&gt; 返回第一次出现的下标，没有则返回-1<ul><li>如果传字符串则同理与str.indexOf() </li><li>如果传正则对象，则比较灵活</li><li>只能搜索一个，不能设置全局</li></ul></li><li>str.match(正则) =&gt; 返回数组<ul><li>提取内容</li><li>默认只会匹配第一次，匹配到就结束。可以全局匹配/g，同时可以忽略大小写/ig</li></ul></li><li>str.replace(reg,”替换的内容”)  =&gt; 可以全局替换 /g</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重温JS（一）</title>
    <link href="/2021/03/27/%E9%87%8D%E6%B8%A9JS%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2021/03/27/%E9%87%8D%E6%B8%A9JS%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>js数据类型</p><ul><li>基本数据类型：String、Number、Boolean、Null、Undefined、Symbol(ES6)。</li><li>引用数据类型：Object、Array、Function。</li></ul><h4 id="一、Unicode编码"><a href="#一、Unicode编码" class="headerlink" title="一、Unicode编码"></a>一、Unicode编码</h4><ul><li>js使用 console.log(“\u2620) - 16进制数</li><li>html直接使用 <code>&lt;h1&gt;&amp;#9760;&lt;/h1&gt;</code> (2620-&gt;9760) 10进制数</li></ul><h4 id="二、立即调用函数"><a href="#二、立即调用函数" class="headerlink" title="二、立即调用函数"></a>二、立即调用函数</h4><ul><li>一次性函数</li><li>立即调用<br>(function() {<br>console.log(“立即调用”)<br>})()</li></ul><h4 id="三、浏览器全局对象window"><a href="#三、浏览器全局对象window" class="headerlink" title="三、浏览器全局对象window"></a>三、浏览器全局对象window</h4><ul><li><p>创建的变量作为全局变量都会作为window对象的属性保存</p><pre><code class="hljs js"><span class="hljs-keyword">var</span> a = <span class="hljs-number">10</span><span class="hljs-built_in">console</span>.log(a) &lt;=&gt; <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">window</span>.a)</code></pre></li><li><p>变量不存在前提下使用会报错，对象属性不存在则是undefined</p><pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">window</span>.a) =&gt; <span class="hljs-literal">undefined</span><span class="hljs-built_in">console</span>.log(a) =&gt; 报错</code></pre></li></ul><h4 id="四、创建对象的五种方式"><a href="#四、创建对象的五种方式" class="headerlink" title="四、创建对象的五种方式"></a>四、创建对象的五种方式</h4><ul><li><p>第一种：Object构造函数创建</p><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Person = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Object</span>();Person.name = <span class="hljs-string">'Nike'</span>;Person.age = <span class="hljs-number">29</span>;</code></pre></li><li><p>第二种：使用对象字面量表示法</p><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> Person = &#123;&#125;;<span class="hljs-comment">//相当于var Person = new Object();</span><span class="hljs-keyword">var</span> Person = &#123;  <span class="hljs-attr">name</span>:<span class="hljs-string">'Nike'</span>;  age:<span class="hljs-number">29</span>;  &#125;</code></pre></li><li><p>第三种：使用工厂模式创建对象</p><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createPerson</span>(<span class="hljs-params">name,age,job</span>)</span>&#123;  <span class="hljs-keyword">var</span> o = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Object</span>();  o.name = name;  o.age = age;  o.job = job;  o.sayName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;     alert(<span class="hljs-keyword">this</span>.name);   &#125;;  <span class="hljs-keyword">return</span> o; &#125;<span class="hljs-keyword">var</span> person1 = createPerson(<span class="hljs-string">'Nike'</span>,<span class="hljs-number">29</span>,<span class="hljs-string">'teacher'</span>);<span class="hljs-keyword">var</span> person2 = createPerson(<span class="hljs-string">'Arvin'</span>,<span class="hljs-number">20</span>,<span class="hljs-string">'student'</span>);</code></pre></li><li><p>第四种：使用构造函数创建对象（类）</p><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Person</span>(<span class="hljs-params">name,age,job</span>)</span>&#123;  <span class="hljs-keyword">this</span>.name = name;  <span class="hljs-keyword">this</span>.age = age;  <span class="hljs-keyword">this</span>.job = job;  <span class="hljs-keyword">this</span>.sayName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;    alert(<span class="hljs-keyword">this</span>.name);  &#125;; &#125;<span class="hljs-keyword">var</span> person1 = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">'Nike'</span>,<span class="hljs-number">29</span>,<span class="hljs-string">'teacher'</span>);<span class="hljs-keyword">var</span> person2 = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">'Arvin'</span>,<span class="hljs-number">20</span>,<span class="hljs-string">'student'</span>);</code></pre></li><li><p>第五种：原型创建对象模式</p><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Person</span>(<span class="hljs-params"></span>)</span>&#123;&#125;  Person.prototype.name = <span class="hljs-string">'Nike'</span>;  Person.prototype.age = <span class="hljs-number">20</span>;  Person.prototype.jbo = <span class="hljs-string">'teacher'</span>;  Person.prototype.sayName = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;    alert(<span class="hljs-keyword">this</span>.name);&#125;;<span class="hljs-keyword">var</span> person1 = <span class="hljs-keyword">new</span> Person();person1.sayName();</code></pre></li></ul><h4 id="五、变量-函数的声明提前"><a href="#五、变量-函数的声明提前" class="headerlink" title="五、变量/函数的声明提前"></a>五、变量/函数的声明提前</h4><h5 id="1、变量的声明提前"><a href="#1、变量的声明提前" class="headerlink" title="1、变量的声明提前"></a>1、变量的声明提前</h5><ul><li>先声明后使用的变量，不使用var也不会报错，直接相当于window.a = 10使用</li><li>先使用后声明的变量，如果不使用var，则会报错 x is not undefined</li><li>先使用后声明的变量，如果使用var，则不会报错，变量会在所有代码执行前声明，但是没有被赋值，所以是undefined。<pre><code class="hljs js"><span class="hljs-built_in">console</span>.log(a)a = <span class="hljs-number">123</span>  =======等价于=======<span class="hljs-keyword">var</span> = a<span class="hljs-built_in">console</span>.log(a)a = <span class="hljs-number">123</span></code></pre></li></ul><h5 id="2、函数的声明提前"><a href="#2、函数的声明提前" class="headerlink" title="2、函数的声明提前"></a>2、函数的声明提前</h5><ul><li><p>使用函数声明的方式创建的函数function 函数() {}，会提前被提前创建，函数在任何位置调用都不会报错</p></li><li><p>使用函数表达式的方式创建的函数不会提前声明。相当于函数指向一个变量，但是变量值为undefined，所以提前运行该方法则会报错“undefined is not a function”</p></li></ul><pre><code class="hljs js">fun()<span class="hljs-keyword">var</span> fun() = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"我是使用函数表达式的方式创建的函数，我会报错"</span>)&#125;</code></pre><h4 id="六、this"><a href="#六、this" class="headerlink" title="六、this"></a>六、this</h4><ul><li>解析器在调用函数，每次都会向函数内部传递一个隐含参数</li><li>这个隐含参数就是this，this指向的是一个对象</li><li>我们称之为上下文对象，根据函数的调用方式不同，this会指向不同的对象<ul><li>1、以函数的方式直接调用，this就是window，相当于window调用了该函数</li><li>2、以方法的方式调用，this就是调用方法的那个对象</li><li>3、以类的方式调用时，this就是该类对象<pre><code class="hljs js"><span class="hljs-keyword">var</span> name = <span class="hljs-string">"我的window的name"</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">fun</span>(<span class="hljs-params"></span>) </span>&#123;  <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name)&#125;<span class="hljs-keyword">var</span> obj1 = &#123;  <span class="hljs-attr">name</span>: <span class="hljs-string">'obj1的name'</span>,  <span class="hljs-attr">sayName</span>: fun&#125;<span class="hljs-keyword">var</span> obj1 = &#123;  <span class="hljs-attr">name</span>: <span class="hljs-string">'obj2的name'</span>,  <span class="hljs-attr">sayName</span>: fun&#125;<span class="hljs-built_in">console</span>.log(fun) =&gt; <span class="hljs-string">"我的window的name"</span> <span class="hljs-built_in">console</span>.log(obj1.sayName()) =&gt; <span class="hljs-string">"obj1的name"</span><span class="hljs-built_in">console</span>.log(obj2.sayName()) =&gt; <span class="hljs-string">"obj2的name"</span></code></pre></li></ul></li></ul><h4 id="七、构造函数（类）"><a href="#七、构造函数（类）" class="headerlink" title="七、构造函数（类）"></a>七、构造函数（类）</h4><blockquote><p>执行流程，new后所做的事</p><ul><li>1、立刻创建一个新的对象</li><li>2、将自身设置为函数中的this，this可以引用自身</li><li>3、逐行执行函数中的代码</li><li>4、将新建的对象作为返回值返回</li></ul></blockquote><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Person</span>(<span class="hljs-params">name, age, gender</span>) </span>&#123;  <span class="hljs-keyword">this</span>.name = name  <span class="hljs-keyword">this</span>.age = age  <span class="hljs-keyword">this</span>.gender = gender  <span class="hljs-keyword">this</span>.sayHello = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name)  &#125;&#125;<span class="hljs-keyword">var</span> p = <span class="hljs-keyword">new</span> Person(<span class="hljs-string">'小明'</span>, <span class="hljs-number">10</span>, <span class="hljs-string">'男'</span>)<span class="hljs-built_in">console</span>.log(p <span class="hljs-keyword">instanceof</span> Person)</code></pre><h4 id="八、构造函数（类）中的原型对象"><a href="#八、构造函数（类）中的原型对象" class="headerlink" title="八、构造函数（类）中的原型对象"></a>八、构造函数（类）中的原型对象</h4><pre><code class="hljs js"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Person</span>(<span class="hljs-params"></span>) </span>&#123;&#125;<span class="hljs-keyword">var</span> p1 = <span class="hljs-keyword">new</span> Person()<span class="hljs-keyword">var</span> p2 = <span class="hljs-keyword">new</span> Person()</code></pre><ul><li>我们所创建的每一个函数，解析器都会向函数中添加一个属性prototype（原型对象）</li><li>如果函数作为普通函数调用prototype没有任何作用</li><li>实例调用原型则是：<code>p1.__proto__</code></li><li>当函数以构造函数（类）的方式调用时，它所创建的每一个对象都会隐含该属性（原型对象），并且这<code>原型对象是单例的</code>，任何该类的实例访问的都是同一个原型对象</li></ul><p>作用：可往原型中注入共用的属性/方法<br><pre><code class="hljs js">Person.prototype.a = <span class="hljs-string">'123'</span><span class="hljs-built_in">console</span>.log(p1.a) =&gt; <span class="hljs-string">'123'</span><span class="hljs-built_in">console</span>.log(p2.a) =&gt; <span class="hljs-string">'123'</span></code></pre></p><p>如果：实例中有该属性，则优先使用自己的，只有没有的时候才去原型中找<br><pre><code class="hljs js">p1.a = <span class="hljs-string">'我是自己的a'</span><span class="hljs-built_in">console</span>.log(p1.a) =&gt; <span class="hljs-string">'我是自己的a'</span></code></pre></p><h4 id="九、原型链"><a href="#九、原型链" class="headerlink" title="九、原型链"></a>九、原型链</h4><ul><li>使用in检查对象中是否含有某个属性时，如果对象中没有但是原型中有，也会返回true</li><li>可以使用对象的hasOwnProperty()来检查对象自身中是否含有该属性</li><li>原型到头的判定是直到找到Object对象的原型，又因为Object对象的原型没有原型，如果在Object中依然没有找到，则返回undefined（针对想找的那个属性则是undefined）</li><li>原型链一般两层就没了<pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">MyClass</span>(<span class="hljs-params"></span>) </span>&#123;&#125;<span class="hljs-keyword">var</span> mc = <span class="hljs-keyword">new</span> MyClass();=================================<span class="hljs-built_in">console</span>.log(mc.name) =&gt; <span class="hljs-literal">undefined</span> <span class="hljs-comment">//自身没有原型也没有则为undefined</span>=================================MyClass.prototype.name=<span class="hljs-string">"我是原型中的name"</span><span class="hljs-comment">//使用in检查对象中是否含有某个属性时，如果对象中没有但是原型中有，也会返回true</span><span class="hljs-built_in">console</span>.log(<span class="hljs-string">"name"</span> <span class="hljs-keyword">in</span> mc) =&gt; <span class="hljs-literal">true</span>=================================<span class="hljs-comment">//可以使用对象的hasOwnProperty()来检查对象自身中是否含有该属性</span><span class="hljs-built_in">console</span>.log(mc.hasOwnProperty(<span class="hljs-string">"name"</span>)) =&gt; <span class="hljs-literal">false</span>mc.age = <span class="hljs-number">18</span><span class="hljs-built_in">console</span>.log(mc.hasOwnProperty(<span class="hljs-string">"age"</span>)) =&gt; <span class="hljs-literal">true</span></code></pre></li></ul><p>引出问题：hasOwnProperty()哪来的？自身没有？那是不是在原型里？</p><pre><code class="hljs javascript"><span class="hljs-comment">//自身没有 =&gt; 可能存在原型里？</span><span class="hljs-built_in">console</span>.log(mc.hasOwnProperty(<span class="hljs-string">"hasOwnProperty"</span>)) =&gt; <span class="hljs-literal">false</span><span class="hljs-comment">//原型里还是没有 =&gt; 那原型对象也是对象，会不会在原型的原型里（第二层）？</span><span class="hljs-built_in">console</span>.log(mc.__proto__.hasOwnProperty(<span class="hljs-string">"hasOwnProperty"</span>)) =&gt; <span class="hljs-literal">false</span><span class="hljs-comment">//原型的原型里找着了（第二层）</span><span class="hljs-built_in">console</span>.log(mc.__proto__.__proto__.hasOwnProperty(<span class="hljs-string">"hasOwnProperty"</span>)) =&gt; <span class="hljs-literal">true</span><span class="hljs-comment">//原型到头的判定是直到找到Object对象的原型，又因为Object对象的原型没有原型，如果在object中依然没有找到，则返回undefined（针对想找的那个属性则是undefined）</span>mc.（<span class="hljs-built_in">Object</span>）.（<span class="hljs-built_in">Object</span>的原型）.（<span class="hljs-built_in">Object</span>的原型没有原型）<span class="hljs-built_in">console</span>.log(mc.__proto__.__proto__.__proto__) =&gt; <span class="hljs-literal">null</span></code></pre><p><strong>prototype和<strong>proto</strong>的区别</strong></p><ul><li>prototype是（构造）函数才有的属性</li><li><strong>proto</strong>是每个对象都有的属性</li></ul><blockquote><p>prototype属性，它是函数所独有的，它是从一个函数指向一个对象。它的含义是函数的原型对象，也就是这个函数（其实所有函数都可以作为构造函数）所创建的实例的原型对象; 这个属性是一个指针，指向一个对象，这个对象的用途就是包含所有实例共享的属性和方法（我们把这个对象叫做原型对象）;</p></blockquote><blockquote><p>proto 是原型链查询中实际用到的，它总是指向 prototype，换句话说就是指向构造函数的原型对象，它是对象独有的。注意，为什么Foo构造也有这个属性呢，因为再js的宇宙里万物皆对象，包括函数；</p></blockquote><p>结论：</p><blockquote><p>1、proto 是原型链查询中实际用到的，它总是指向 prototype；</p></blockquote><blockquote><p>2、prototype 是函数所独有的，在定义构造函数时自动创建，它总是被 proto 所指。</p></blockquote><blockquote><p>3、所有对象都有<strong>proto</strong>属性，函数这个特殊对象除了具有<strong>proto</strong>属性，还有特有的原型属性prototype。prototype对象默认有两个属性，constructor属性和<strong>proto</strong>属性。prototype属性可以给函数和对象添加可共享（继承）的方法、属性，而<strong>proto</strong>是查找某函数或对象的原型链方式。constructor，这个属性包含了一个指针，指回原构造函数。</p></blockquote><h4 id="十、垃圾回收机制"><a href="#十、垃圾回收机制" class="headerlink" title="十、垃圾回收机制"></a>十、垃圾回收机制</h4><p>定义：当没有属性或者变量对它进行引用的时候，这个对象就变成了垃圾</p><ul><li>js自己有垃圾回收机制，无法认为操控</li><li>能做的只是将对象设置为null即可</li></ul>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>uni-app基础</title>
    <link href="/2021/03/25/uni-app%E5%9F%BA%E7%A1%80/"/>
    <url>/2021/03/25/uni-app%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h3 id="一、搭建环境"><a href="#一、搭建环境" class="headerlink" title="一、搭建环境"></a>一、搭建环境</h3><ul><li><p>全局安装脚手架 3</p><ul><li>npm install -g @vue/cli</li></ul></li><li><p>创建项目</p><ul><li>vue create -p dcloudio/uni-preset-vue [项目名]</li></ul></li><li><p>启动项目</p><ul><li>微信小程序：npm run dev:mp-weixin</li></ul></li><li><p>微信开发者工具</p><ul><li>在 dist 文件夹中导入项目</li></ul></li></ul><h3 id="二、基础知识"><a href="#二、基础知识" class="headerlink" title="二、基础知识"></a>二、基础知识</h3><h4 id="1、像素单位"><a href="#1、像素单位" class="headerlink" title="1、像素单位"></a>1、像素单位</h4><pre><code class="hljs css">rpx：小程序中的单位 750rpx = 屏幕的宽度vm：h5单位，100vw = 屏幕的宽度vh：h5单位  100vh = 屏幕的高度</code></pre><h4 id="2、使用-sass"><a href="#2、使用-sass" class="headerlink" title="2、使用 sass"></a>2、使用 sass</h4><ul><li>安装依赖：npm install <a href="mailto:sass-loader@8.0.2" target="_blank" rel="noopener">sass-loader@8.0.2</a> node-sass(高版本容易出错)</li><li>vue css 使用：lang=”scss”</li><li>引入阿里巴巴字体 iconfont</li></ul><h4 id="3、基础语法"><a href="#3、基础语法" class="headerlink" title="3、基础语法"></a>3、基础语法</h4><ul><li>v-if || v-show</li><li>v-for=”(item,index) in list” v-key=”index”</li></ul><h4 id="4、data数据"><a href="#4、data数据" class="headerlink" title="4、data数据"></a>4、data数据</h4><pre><code class="hljs js">data() &#123;  <span class="hljs-keyword">return</span> &#123;    <span class="hljs-attr">title</span>: <span class="hljs-string">'Hello'</span>  &#125;&#125;</code></pre><h4 id="5、计算属性"><a href="#5、计算属性" class="headerlink" title="5、计算属性"></a>5、计算属性</h4><pre><code class="hljs js">computed: &#123;  <span class="hljs-comment">//</span>&#125;</code></pre><h4 id="6、方法"><a href="#6、方法" class="headerlink" title="6、方法"></a>6、方法</h4><pre><code class="hljs js">methods: &#123;  <span class="hljs-comment">//</span>&#125;</code></pre><h4 id="7、事件传参"><a href="#7、事件传参" class="headerlink" title="7、事件传参"></a>7、事件传参</h4><ul><li>集成小程序和vue<pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">data-index</span>=<span class="hljs-string">"111"</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"handleClick(1,$event)"</span>&gt;</span>点击<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>handleClick(index, event) &#123;  console.log(index);  console.log(event.currentTarget.dataset.index);&#125;</code></pre></li></ul><h3 id="三、组件化"><a href="#三、组件化" class="headerlink" title="三、组件化"></a>三、组件化</h3><h4 id="1、组件的使用"><a href="#1、组件的使用" class="headerlink" title="1、组件的使用"></a>1、组件的使用</h4><p>和vue一样：定义-&gt;引入-&gt;注册-&gt;使用</p><ul><li>在src目录下新建文件夹components来存放组件</li><li>在components的目录下新建组件 *.vue</li><li>在使用页面进行导入 import imgBorder from “@/components/img-border”;<br>(导入和注册时名称不能有-号)</li><li>注册使用<pre><code class="hljs js">components: &#123;  imgBorder&#125;建议用-号&lt;image-border&gt;<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">image-border</span>&gt;</span></span></code></pre></li></ul><h4 id="2、组件传参"><a href="#2、组件传参" class="headerlink" title="2、组件传参"></a>2、组件传参</h4><ul><li><p>父传子 同VUE</p><pre><code class="hljs js">props: &#123;  <span class="hljs-attr">src</span>: <span class="hljs-built_in">String</span>&#125;</code></pre></li><li><p>子传父：this.$emit 同VUE</p><pre><code class="hljs js">methods: &#123;  handleClick() &#123;    <span class="hljs-keyword">this</span>.$emit(<span class="hljs-string">"toFatherEvent"</span>,参数) 参数直接写  &#125;&#125;</code></pre></li></ul><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul-com</span> @<span class="hljs-attr">toFatherEvent</span>=<span class="hljs-string">"handleClick"</span>/&gt;</span></code></pre><ul><li>兄弟组件通信：兄弟组件注册到uni原型，父组件调用<pre><code class="hljs js"><span class="hljs-comment">//A组件注册监听</span>created() &#123;  uni.$on(<span class="hljs-string">'updateNum'</span>, num =&gt; &#123;    <span class="hljs-keyword">this</span>.num += num  &#125;)&#125;<span class="hljs-comment">//B组件发射</span>created() &#123;  uni.$emit(<span class="hljs-string">'updateNum'</span>,<span class="hljs-number">10</span>)&#125;</code></pre></li></ul><p><code></code></p><h4 id="3、组件的生命周期"><a href="#3、组件的生命周期" class="headerlink" title="3、组件的生命周期"></a>3、组件的生命周期</h4><pre><code class="hljs js">created() &#123; <span class="hljs-comment">// 在这个里面初始化数据</span>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'实例创建完成后被立即调用'</span>)  <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.num)  <span class="hljs-keyword">this</span>.intId = setInterval(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'执行定时器'</span>)  &#125;, <span class="hljs-number">1000</span>)&#125;,mounted() &#123;  <span class="hljs-comment">// 在这个里面操作dom</span>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'挂载已完成'</span>, <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'myview'</span>))&#125;,</code></pre><h3 id="四、全局共享数据（两种方法）"><a href="#四、全局共享数据（两种方法）" class="headerlink" title="四、全局共享数据（两种方法）"></a>四、全局共享数据（两种方法）</h3><h4 id="1、vue原型"><a href="#1、vue原型" class="headerlink" title="1、vue原型"></a>1、vue原型</h4><ul><li>定义main.js<blockquote><p>Vue.prototype.baseUrl = “<a href="http://www.baidu.com&quot;" target="_blank" rel="noopener">www.baidu.com&quot;</a></p></blockquote></li><li>使用<blockquote><p>组件方法 this.baseUrl (this指向为vue的时候)</p></blockquote><h4 id="2、小程序思想"><a href="#2、小程序思想" class="headerlink" title="2、小程序思想"></a>2、小程序思想</h4></li><li><p>定义App.vue</p><pre><code class="hljs js">globalData: &#123;  <span class="hljs-attr">baseUrl</span>: <span class="hljs-string">"www.360.com"</span>&#125;</code></pre></li><li><p>使用</p><pre><code class="hljs js">getApp().globalData.baseUrl</code></pre></li></ul><h3 id="五、插槽（VUE）"><a href="#五、插槽（VUE）" class="headerlink" title="五、插槽（VUE）"></a>五、插槽（VUE）</h3><h3 id="六、常用生命周期"><a href="#六、常用生命周期" class="headerlink" title="六、常用生命周期"></a>六、常用生命周期</h3><ul><li>全局App中使用onLaunch表示应用启动时</li><li>页面中使用onLoad或者onShow表示页面加载完成或者页面展示</li><li>组件使用mounted组件挂载完毕时</li></ul><h3 id="七、条件编译"><a href="#七、条件编译" class="headerlink" title="七、条件编译"></a>七、条件编译</h3><h3 id="八、uni-ui"><a href="#八、uni-ui" class="headerlink" title="八、uni-ui"></a>八、uni-ui</h3><h3 id="九、请求封装到全局"><a href="#九、请求封装到全局" class="headerlink" title="九、请求封装到全局"></a>九、请求封装到全局</h3><ul><li><p>/util/api.js</p><pre><code class="hljs js"><span class="hljs-keyword">const</span> BASE_URL = <span class="hljs-string">'http://localhost:8080'</span><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> myRequest = <span class="hljs-function">(<span class="hljs-params"> options </span>) =&gt;</span> &#123;  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;    uni.request(&#123;      <span class="hljs-attr">url</span>: BASE_URL + options.url,      <span class="hljs-attr">method</span>: options.method || <span class="hljs-string">'GET'</span>,      <span class="hljs-attr">data</span>: options.data || &#123;&#125;,      <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;        <span class="hljs-keyword">if</span> (res.data.status !== <span class="hljs-number">0</span>) &#123;          <span class="hljs-keyword">return</span> uni.showToast(&#123;            <span class="hljs-attr">title</span>: <span class="hljs-string">'获取数据失败'</span>          &#125;)        &#125;        resolve(res)      &#125;,      <span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;        uni.showToast(&#123;          <span class="hljs-attr">title</span>: <span class="hljs-string">'请求接口失败'</span>,        &#125;)        reject(err)      &#125;    &#125;)  &#125;)&#125;</code></pre></li><li><p>注册到main.js里，挂载到原型上</p><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; myRequest &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">'./util/api.js'</span>Vue.prototype.$myRequest = myRequest</code></pre></li><li><p>页面使用</p><pre><code class="hljs js"><span class="hljs-keyword">async</span> getSwiper() &#123;  <span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-keyword">this</span>.$myRequest(&#123;    <span class="hljs-attr">url</span>: <span class="hljs-string">'/api/getlunbo'</span>  &#125;)  <span class="hljs-built_in">console</span>.log(res)&#125;</code></pre></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>uni-app</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序自定义头部胶囊</title>
    <link href="/2021/01/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%B4%E9%83%A8%E8%83%B6%E5%9B%8A/"/>
    <url>/2021/01/19/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%B4%E9%83%A8%E8%83%B6%E5%9B%8A/</url>
    
    <content type="html"><![CDATA[<p>需求：有时候需要自定义微信小程序的头部，而不使用默认的样式。</p><h4 id="1、关闭使用头部信息"><a href="#1、关闭使用头部信息" class="headerlink" title="1、关闭使用头部信息"></a>1、关闭使用头部信息</h4><p>对想要自定义的页面进行设置：xx.json，<br>关闭之后页面内容为铺满屏幕<br><pre><code class="hljs javascript"><span class="hljs-string">"navigationStyle"</span>: <span class="hljs-string">"custom"</span>,<span class="hljs-string">"enablePullDownRefresh"</span>: <span class="hljs-literal">false</span></code></pre></p><h4 id="2、获得屏幕头部信息存到globalData"><a href="#2、获得屏幕头部信息存到globalData" class="headerlink" title="2、获得屏幕头部信息存到globalData"></a>2、获得屏幕头部信息存到globalData</h4><pre><code class="hljs javascript"><span class="hljs-comment">//app.json</span>globalData: &#123;  <span class="hljs-attr">systeminfo</span>: &#123;&#125;, <span class="hljs-comment">// 系统信息</span>  headerBtnPosi: &#123;&#125; <span class="hljs-comment">// 胶囊按钮位置信息</span>&#125;,setHeaderBtn() &#123;  <span class="hljs-comment">// 获取设备信息</span>  wx.getSystemInfo(&#123;    <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;      <span class="hljs-keyword">this</span>.globalData.systeminfo = res    &#125;,  &#125;)  <span class="hljs-comment">// 获得胶囊按钮位置信息</span>  <span class="hljs-keyword">this</span>.globalData.headerBtnPosi = wxgetMenuButtonBoundingClientRect()&#125;,</code></pre><h4 id="3、定义组件"><a href="#3、定义组件" class="headerlink" title="3、定义组件"></a>3、定义组件</h4><p><strong>headerNavBar.js</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> app = getApp();Component(&#123;  <span class="hljs-attr">properties</span>: &#123;    <span class="hljs-attr">navbarData</span>: &#123; <span class="hljs-comment">// 由父页面传递的数据</span>      type: <span class="hljs-built_in">Object</span>,      <span class="hljs-attr">value</span>: &#123;&#125;,      <span class="hljs-attr">observer</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">newVal, oldVal</span>) </span>&#123; &#125;    &#125;  &#125;,  <span class="hljs-attr">data</span>: &#123;    <span class="hljs-attr">haveBack</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 是否有返回按钮，true 有 false 没有 若从分享页进入则为 false</span>    statusBarHeight: <span class="hljs-number">0</span>, <span class="hljs-comment">// 状态栏高度</span>    navbarHeight: <span class="hljs-number">0</span>, <span class="hljs-comment">// 顶部导航栏高度</span>    navbarBtn: &#123; <span class="hljs-comment">// 胶囊位置信息</span>      height: <span class="hljs-number">0</span>,      <span class="hljs-attr">width</span>: <span class="hljs-number">0</span>,      <span class="hljs-attr">top</span>: <span class="hljs-number">0</span>,      <span class="hljs-attr">bottom</span>: <span class="hljs-number">0</span>,      <span class="hljs-attr">right</span>: <span class="hljs-number">0</span>    &#125;  &#125;,  <span class="hljs-comment">// 微信7.0.0支持wx.getMenuButtonBoundingClientRect()获得胶囊按钮高度</span>  attached: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">let</span> statusBarHeight = app.globalData.systeminfo.statusBarHeight <span class="hljs-comment">// 状态栏高度</span>    <span class="hljs-keyword">let</span> headerPosi = app.globalData.headerBtnPosi <span class="hljs-comment">// 胶囊位置信息</span>    <span class="hljs-comment">/**     * wx.getMenuButtonBoundingClientRect() 坐标信息以屏幕左上角为原点     * 菜单按键宽度： 87     * 菜单按键高度： 32     * 菜单按键左边界坐标： 278     * 菜单按键上边界坐标： 26     * 菜单按键右边界坐标： 365     * 菜单按键下边界坐标： 58     */</span>    <span class="hljs-keyword">let</span> btnPosi = &#123; <span class="hljs-comment">// 胶囊实际位置，坐标信息不是左上角原点</span>      height: headerPosi.height,      <span class="hljs-attr">width</span>: headerPosi.width,      <span class="hljs-comment">// 胶囊top - 状态栏高度</span>      top: headerPosi.top - statusBarHeight,      <span class="hljs-comment">// 胶囊bottom - 胶囊height - 状态栏height （现胶囊bottom 为距离导航栏底部的长度）</span>      bottom: headerPosi.bottom - headerPosi.height - statusBarHeight,      <span class="hljs-comment">// 屏幕宽度 - 胶囊right</span>      right: app.globalData.systeminfo.screenWidth - headerPosi.right    &#125;    <span class="hljs-keyword">let</span> haveBack;    <span class="hljs-keyword">if</span> (getCurrentPages().length === <span class="hljs-number">1</span>) &#123; <span class="hljs-comment">// 当只有一个页面时</span>      haveBack = <span class="hljs-literal">false</span>;    &#125; <span class="hljs-keyword">else</span> &#123;      haveBack = <span class="hljs-literal">true</span>;    &#125;    <span class="hljs-keyword">this</span>.setData(&#123;      <span class="hljs-attr">haveBack</span>: haveBack, <span class="hljs-comment">// 获取是否是通过分享进入的小程序</span>      statusBarHeight: statusBarHeight,      <span class="hljs-attr">navbarHeight</span>: headerPosi.bottom + btnPosi.bottom, <span class="hljs-comment">// 原胶囊bottom + 现胶囊bottom</span>      navbarBtn: btnPosi    &#125;)  &#125;,  <span class="hljs-attr">methods</span>: &#123;    <span class="hljs-attr">_goBack</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;      wx.navigateBack(&#123;        <span class="hljs-attr">delta</span>: <span class="hljs-number">1</span>      &#125;);    &#125;,    <span class="hljs-attr">_goHome</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;      wx.switchTab(&#123;        <span class="hljs-attr">url</span>: <span class="hljs-string">'/pages/home/home'</span>,      &#125;);    &#125;  &#125;&#125;)</code></pre></p><p><strong>headerNavBar.wxml</strong><br><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 自定义导航栏 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"navbar-wrap &#123;&#123;navbarData.bgc?'bgc':''&#125;&#125; &#123;&#123;navbarData.float?'float':''&#125;&#125;"</span>  <span class="hljs-attr">style</span>=<span class="hljs-string">'height:&#123;&#123;navbarHeight&#125;&#125;px;padding-top:&#123;&#123;statusBarHeight&#125;&#125;px;'</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"navbar-text"</span>    <span class="hljs-attr">style</span>=<span class="hljs-string">'line-height:&#123;&#123;navbarBtn.height + navbarBtn.top&#125;&#125;px;'</span>&gt;</span>    &#123;&#123;navbarData.title ? navbarData.title : ""&#125;&#125;  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"navbar-icon"</span>    <span class="hljs-attr">wx:if</span>=<span class="hljs-string">'&#123;&#123;navbarData.showCapsule === 1 ? true : false&#125;&#125;'</span>    <span class="hljs-attr">style</span>=<span class="hljs-string">"top:&#123;&#123;navbarBtn.top + statusBarHeight&#125;&#125;px;left:&#123;&#123;navbarBtn.right&#125;&#125;px;height:&#123;&#123;navbarBtn.height&#125;&#125;px;"</span>&gt;</span>       <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">wx:if</span>=<span class="hljs-string">'&#123;&#123;haveBack&#125;&#125;'</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">"_goBack"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"floatL"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/assets/images/icon/navbar_back.png"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:if</span>=<span class="hljs-string">'&#123;&#123;haveBack&#125;&#125;'</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"line"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:if</span>=<span class="hljs-string">'&#123;&#123;haveBack&#125;&#125;'</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"floatL"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">"_goHome"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/assets/images/icon/navbar_home.png"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">image</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-comment">&lt;!-- 手写loading --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:if</span>=<span class="hljs-string">"&#123;&#123;navbarData.showLoading&#125;&#125;"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"navbar-loading &#123;&#123;navbarData.float?'float':''&#125;&#125;"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">'height:&#123;&#123;navbarHeight&#125;&#125;px;line-height:&#123;&#123;navbarHeight&#125;&#125;px;'</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>···<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></code></pre></p><p><strong>headerNavBar.wxss</strong><br><pre><code class="hljs css"><span class="hljs-selector-class">.navbar-wrap</span> &#123;<span class="hljs-attribute">position</span>: fixed;<span class="hljs-attribute">width</span>: <span class="hljs-number">100%</span>;<span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<span class="hljs-attribute">z-index</span>: <span class="hljs-number">9999999</span>;<span class="hljs-attribute">box-sizing</span>: border-box;&#125;<span class="hljs-selector-class">.bgc</span> &#123;<span class="hljs-attribute">background-color</span>: <span class="hljs-number">#B0E028</span>;&#125;<span class="hljs-selector-class">.float</span> &#123;<span class="hljs-attribute">float</span>: left&#125;<span class="hljs-selector-class">.navbar-text</span> &#123;<span class="hljs-attribute">position</span>: relative;<span class="hljs-attribute">top</span>: <span class="hljs-number">6</span>rpx;<span class="hljs-attribute">text-align</span>: center;<span class="hljs-attribute">font-size</span>: <span class="hljs-number">36</span>rpx;<span class="hljs-attribute">color</span>: <span class="hljs-number">#fff</span>;&#125; <span class="hljs-selector-class">.navbar-icon</span> &#123;<span class="hljs-attribute">position</span>: fixed;<span class="hljs-attribute">display</span>: flex;<span class="hljs-attribute">border-radius</span>: <span class="hljs-number">70</span>rpx;<span class="hljs-attribute">border</span>: <span class="hljs-number">0.5px</span> solid <span class="hljs-built_in">rgba</span>(255,255,255, 0.4);<span class="hljs-attribute">box-sizing</span>: border-box;<span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">rgba</span>(0, 0, 0, 0.2);&#125; <span class="hljs-selector-class">.navbar-icon</span> <span class="hljs-selector-tag">image</span> &#123;<span class="hljs-attribute">height</span>: <span class="hljs-number">20px</span>;<span class="hljs-attribute">width</span>: <span class="hljs-number">20px</span>;<span class="hljs-attribute">padding</span>: <span class="hljs-number">5px</span> <span class="hljs-number">10px</span> <span class="hljs-number">10px</span>;<span class="hljs-attribute">display</span>: inline-block;<span class="hljs-attribute">overflow</span>: hidden;&#125; <span class="hljs-selector-class">.navbar-icon</span> <span class="hljs-selector-tag">view</span> &#123;<span class="hljs-attribute">height</span>: <span class="hljs-number">18px</span>;<span class="hljs-attribute">border-left</span>: <span class="hljs-number">0.5px</span> solid <span class="hljs-built_in">rgba</span>(255,255,255, 0.3);<span class="hljs-attribute">margin-top</span>: <span class="hljs-number">6px</span>;&#125; <span class="hljs-selector-class">.navbar-loading</span> &#123;<span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;<span class="hljs-attribute">text-align</span>: center;&#125;<span class="hljs-selector-class">.line</span> &#123;<span class="hljs-attribute">height</span>: <span class="hljs-number">36</span>rpx;<span class="hljs-attribute">width</span>: <span class="hljs-number">1</span>rpx;<span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(255,255,255, 0.4);&#125;</code></pre></p><h4 id="4、使用"><a href="#4、使用" class="headerlink" title="4、使用"></a>4、使用</h4><p>1、对应页面引入组件</p><blockquote><p>“searchbar”: “/components/searchbar/searchbar”</p></blockquote><p>2、页面js定义变量<br><pre><code class="hljs javascript">navbarData: &#123;  <span class="hljs-attr">showCapsule</span>: <span class="hljs-number">1</span>,  <span class="hljs-comment">// 是否显示左上角胶囊按钮 1 显示 0 不显示</span>  title: <span class="hljs-string">'普菲洛云购'</span>, <span class="hljs-comment">// 导航栏 中间的标题</span>  bgc: <span class="hljs-literal">true</span>,  <span class="hljs-attr">showLoading</span>: <span class="hljs-literal">true</span>,  <span class="hljs-attr">float</span>: <span class="hljs-literal">false</span>&#125;,</code></pre></p><p>3、页面wxml引入<br><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">headerNavbar</span> <span class="hljs-attr">navbar-data</span>=<span class="hljs-string">"&#123;&#123;navbarData&#125;&#125;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">headerNavbar</span>&gt;</span></code></pre></p>]]></content>
    
    
    <categories>
      
      <category>浅谈前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序嵌入腾讯地图</title>
    <link href="/2021/01/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B5%8C%E5%85%A5%E8%85%BE%E8%AE%AF%E5%9C%B0%E5%9B%BE/"/>
    <url>/2021/01/12/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%B5%8C%E5%85%A5%E8%85%BE%E8%AE%AF%E5%9C%B0%E5%9B%BE/</url>
    
    <content type="html"><![CDATA[<p>需求：在微信小程序添加地址或者获取用户定位的时候要用到定位功能，获取用户坐标并逆向解析为实际地址</p><h3 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h3><ul><li>1、获取用户定位权限</li><li>2、使用腾讯位置服务提供的插件</li><li>3、拿到结果</li></ul><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><blockquote><p>申请腾讯地图账号：<br>参考 <a href="https://lbs.qq.com/miniProgram/jsSdk/jsSdkGuide/jsSdkOverview" target="_blank" rel="noopener">https://lbs.qq.com/miniProgram/jsSdk/jsSdkGuide/jsSdkOverview</a></p></blockquote><ul><li>1、拿到账号支持的密钥</li><li>2、开通webserviceAPI服务</li><li>3、下载微信小程序JavaScriptSDK</li><li>4、配置安全域名</li></ul><h3 id="使用一、直接解析成地址"><a href="#使用一、直接解析成地址" class="headerlink" title="使用一、直接解析成地址"></a>使用一、直接解析成地址</h3><ul><li>1、导入qqmap-wx-jssdk.js</li></ul><pre><code class="hljs javascript"><span class="hljs-comment">//在要使用服务的页面</span><span class="hljs-keyword">var</span> QQMapWX = <span class="hljs-built_in">require</span>(<span class="hljs-string">'../../untils/qqmap-wx-jssdk.js'</span>);<span class="hljs-keyword">var</span> qqmapsdk;Page(&#123;    <span class="hljs-attr">onLoad</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-comment">// 实例化API核心类</span>        qqmapsdk = <span class="hljs-keyword">new</span> QQMapWX(&#123;            <span class="hljs-attr">key</span>: <span class="hljs-string">'你在腾讯位置服务申请的key'</span>        &#125;);    &#125;,&#125;)</code></pre><ul><li><p>2、获取定位权限</p><pre><code class="hljs javascript">地图选点插件需要小程序提供定位授权才能够正常使用定位功能：<span class="hljs-comment">// app.json</span>&#123;  <span class="hljs-string">"permission"</span>: &#123;    <span class="hljs-string">"scope.userLocation"</span>: &#123;      <span class="hljs-string">"desc"</span>: <span class="hljs-string">"你的位置信息将用于小程序定位"</span>    &#125;  &#125;&#125;getAuthorize () &#123;  wx.authorize(&#123;    <span class="hljs-attr">scope</span>: <span class="hljs-string">'scope.userLocation'</span>,    <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'有定位授权'</span>)      <span class="hljs-comment">//授权成功，此处调用获取定位函数</span>    &#125;,    fail() &#123;      wx.showModal (&#123;        <span class="hljs-attr">cancelColor</span>: <span class="hljs-string">'cancelColor'</span>,        <span class="hljs-attr">title</span>: <span class="hljs-string">'没有授权无法获取位置信息'</span>,        <span class="hljs-attr">content</span>: <span class="hljs-string">'是否前往设置页面手动开启'</span>,        <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;          <span class="hljs-keyword">if</span> (res.confirm) &#123;            wx.openSetting(&#123;              <span class="hljs-attr">withSubscriptions</span>: <span class="hljs-literal">true</span>,            &#125;)          &#125; <span class="hljs-keyword">else</span> &#123;            wx.showToast(&#123;              <span class="hljs-attr">icon</span>: <span class="hljs-string">'none'</span>,              <span class="hljs-attr">title</span>: <span class="hljs-string">'您取消了定位授权'</span>,            &#125;)          &#125;        &#125;,        <span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">e</span>) </span>&#123;          <span class="hljs-built_in">console</span>.log(e)        &#125;      &#125;)    &#125;  &#125;)&#125;,</code></pre></li><li><p>3、直接解析成地址</p><pre><code class="hljs javascript"><span class="hljs-comment">//此函数在用户定位授权成功后调用</span><span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;  wx.getLocation(&#123;    <span class="hljs-attr">type</span>: <span class="hljs-string">'gcj02'</span>,    <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;      qqmapsdk.reverseGeocoder(&#123;        <span class="hljs-attr">location</span>: &#123;          <span class="hljs-attr">latitude</span>: res.latitude,          <span class="hljs-attr">longitude</span>: res.longitude        &#125;,        <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">addressRes</span>) </span>&#123; <span class="hljs-comment">//成功后的回调</span>          <span class="hljs-built_in">console</span>.log(addressRes);          <span class="hljs-built_in">console</span>.log(addressRes.result.address)        &#125;,        <span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">error</span>) </span>&#123;          app.showTips(<span class="hljs-string">"定位获取失败，请手动输入地址"</span>,<span class="hljs-string">"none"</span>, <span class="hljs-number">2000</span>)        &#125;,        <span class="hljs-attr">complete</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">addressRes</span>) </span>&#123;          <span class="hljs-built_in">console</span>.log(addressRes);        &#125;      &#125;)    &#125;  &#125;)&#125;</code></pre></li></ul><h3 id="使用二、地图选址插件的使用"><a href="#使用二、地图选址插件的使用" class="headerlink" title="使用二、地图选址插件的使用"></a>使用二、地图选址插件的使用</h3><blockquote><p>优点：自带选图界面，点击选中后直接返回地址，少去自己写样式的烦恼</p></blockquote><ul><li><p>1、添加插件：登录微信公众号后台选择设置-第三方服务-插件管理，搜索 “腾讯位置服务地图选点” 申请，审核通过后，小程序开发者可在小程序内使用该插件。</p></li><li><p>2、配置插件</p><blockquote><p>参考：<a href="https://mp.weixin.qq.com/wxopen/pluginbasicprofile?action=intro&amp;appid=wx76a9a06e5b4e693e&amp;token=1620811584&amp;lang=zh_CN" target="_blank" rel="noopener">https://mp.weixin.qq.com/wxopen/pluginbasicprofile?action=intro&amp;appid=wx76a9a06e5b4e693e&amp;token=1620811584&amp;lang=zh_CN</a></p></blockquote></li><li><p>3、使用</p></li></ul><pre><code class="hljs javascript">一、引入插件包：地图选点appId： wx76a9a06e5b4e693e<span class="hljs-comment">// app.json</span>&#123;  <span class="hljs-string">"plugins"</span>: &#123;    <span class="hljs-string">"chooseLocation"</span>: &#123;      <span class="hljs-string">"version"</span>: <span class="hljs-string">"1.0.5"</span>,      <span class="hljs-string">"provider"</span>: <span class="hljs-string">"wx76a9a06e5b4e693e"</span>    &#125;  &#125;&#125;二、授权配置：地图选点插件需要小程序提供定位授权才能够正常使用定位功能：<span class="hljs-comment">// app.json</span>&#123;  <span class="hljs-string">"permission"</span>: &#123;    <span class="hljs-string">"scope.userLocation"</span>: &#123;      <span class="hljs-string">"desc"</span>: <span class="hljs-string">"你的位置信息将用于小程序定位"</span>    &#125;  &#125;&#125;三、使用：插件页面调用示例：<span class="hljs-keyword">const</span> chooseLocation = requirePlugin(<span class="hljs-string">'chooseLocation'</span>);Page(&#123;  <span class="hljs-comment">// 从地图选点插件返回后，在页面的onShow生命周期函数中能够调用插件接口，取得选点结果对象</span>  onShow () &#123;    <span class="hljs-keyword">const</span> location = chooseLocation.getLocation(); <span class="hljs-comment">// 如果点击确认选点按钮，则返回选点结果对象，否则返回null</span>    <span class="hljs-built_in">console</span>.log(location)  &#125;,  onUnload () &#123;    <span class="hljs-comment">// 页面卸载时设置插件选点数据为null，防止再次进入页面，geLocation返回的是上次选点结果</span>    chooseLocation.setLocation(<span class="hljs-literal">null</span>);  &#125;,  <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    wx.getLocation(&#123;      <span class="hljs-attr">type</span>: <span class="hljs-string">'gcj02'</span>,      <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;        <span class="hljs-keyword">const</span> key = MAPKEY; <span class="hljs-comment">//使用在腾讯位置服务申请的key</span>        <span class="hljs-keyword">const</span> referer = <span class="hljs-string">'普菲洛云购'</span>; <span class="hljs-comment">//调用插件的app的名称</span>        <span class="hljs-keyword">const</span> location = <span class="hljs-built_in">JSON</span>.stringify(&#123;          <span class="hljs-attr">latitude</span>: res.latitude,          <span class="hljs-attr">longitude</span>: res.longitude        &#125;);        <span class="hljs-keyword">const</span> category = <span class="hljs-string">'生活服务,娱乐休闲'</span>;            wx.navigateTo(&#123;          <span class="hljs-attr">url</span>: <span class="hljs-string">`plugin://chooseLocation/index?key=<span class="hljs-subst">$&#123;key&#125;</span>&amp;referer=$  &#123;referer&#125;&amp;location=<span class="hljs-subst">$&#123;location&#125;</span>&amp;category=<span class="hljs-subst">$&#123;category&#125;</span>`</span>        &#125;);      &#125;    &#125;)  &#125;&#125;)</code></pre>]]></content>
    
    
    <categories>
      
      <category>浅谈前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
      <tag>微信小程序</tag>
      
      <tag>地图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅谈微信小程序组件生命周期</title>
    <link href="/2021/01/08/%E6%B5%85%E8%B0%88%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <url>/2021/01/08/%E6%B5%85%E8%B0%88%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
    
    <content type="html"><![CDATA[<h3 id="组件本身的生命周期"><a href="#组件本身的生命周期" class="headerlink" title="组件本身的生命周期"></a>组件本身的生命周期</h3><p>组件的生命周期，指的是组件自身的一些函数，这些函数在特殊的时间点或遇到一些特殊的框架事件时被自动触发。最重要的生命周期是 <code>created</code> <code>attached</code> <code>detached</code> ，包含一个组件实例生命流程的最主要时间点。</p><h4 id="1、created"><a href="#1、created" class="headerlink" title="1、created"></a>1、created</h4><ul><li>组件实例刚刚被创建好时， created 生命周期被触发。此时，组件数据 this.data 就是在 Component 构造器中定义的数据 data 。 <strong>此时还不能调用 setData</strong> 。 通常情况下，这个生命周期只应该用于给组件 this 添加一些自定义属性字段。</li></ul><h4 id="2、attached"><a href="#2、attached" class="headerlink" title="2、attached"></a>2、attached</h4><ul><li>在组件完全初始化完毕、进入页面节点树后， attached 生命周期被触发。此时， this.data 已被初始化为组件的当前值。这个生命周期很有用，<strong>绝大多数初始化工作可以在这个时机进行</strong>。</li></ul><h4 id="3、detached"><a href="#3、detached" class="headerlink" title="3、detached"></a>3、detached</h4><ul><li>在组件离开页面节点树后， detached 生命周期被触发。退出一个页面时，如果组件还在页面节点树中，则 detached 会被触发。</li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><pre><code class="hljs javascript">Component(&#123;  <span class="hljs-attr">lifetimes</span>: &#123;    <span class="hljs-attr">attached</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;      <span class="hljs-comment">// 在组件实例进入页面节点树时执行</span>    &#125;,  &#125;,&#125;)</code></pre><h3 id="组件所在的页面的生命周期"><a href="#组件所在的页面的生命周期" class="headerlink" title="组件所在的页面的生命周期"></a>组件所在的页面的生命周期</h3><p>还有一些特殊的生命周期，它们并非与组件有很强的关联，但有时组件需要获知，以便组件内部处理。这样的生命周期称为“组件所在页面的生命周期”，在 pageLifetimes 定义段中定义。其中可用的生命周期包括：</p><pre><code class="hljs javascript">Component(&#123;  <span class="hljs-attr">pageLifetimes</span>: &#123;    <span class="hljs-attr">show</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;      <span class="hljs-comment">// 页面被展示</span>    &#125;,    <span class="hljs-attr">hide</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;      <span class="hljs-comment">// 页面被隐藏</span>    &#125;,    <span class="hljs-attr">resize</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">size</span>) </span>&#123;      <span class="hljs-comment">// 页面尺寸变化</span>    &#125;  &#125;&#125;)</code></pre>]]></content>
    
    
    <categories>
      
      <category>浅谈前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序组件observers监听数据变动</title>
    <link href="/2021/01/08/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6observers%E7%9B%91%E5%90%AC%E5%B1%9E%E6%80%A7%E5%8F%98%E5%8A%A8/"/>
    <url>/2021/01/08/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%BB%84%E4%BB%B6observers%E7%9B%91%E5%90%AC%E5%B1%9E%E6%80%A7%E5%8F%98%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="属性监听"><a href="#属性监听" class="headerlink" title="属性监听"></a>属性监听</h3><pre><code class="hljs javascript">properties: &#123;  <span class="hljs-attr">num1</span>: &#123;    <span class="hljs-attr">type</span>: <span class="hljs-built_in">Number</span>,    <span class="hljs-attr">value</span>: <span class="hljs-literal">false</span>  &#125;,  <span class="hljs-attr">num2</span>: &#123;    <span class="hljs-attr">type</span>: <span class="hljs-built_in">Number</span>,    <span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>  &#125;,  <span class="hljs-attr">num3</span>: &#123;    <span class="hljs-attr">type</span>: <span class="hljs-built_in">Number</span>,    <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>  &#125;,  <span class="hljs-attr">num4</span>: &#123;    <span class="hljs-attr">type</span>: <span class="hljs-built_in">Number</span>,    <span class="hljs-attr">value</span>: <span class="hljs-number">0</span>  &#125;,  <span class="hljs-attr">title</span>: &#123;    <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,    <span class="hljs-attr">value</span>: <span class="hljs-string">"我是默认的标题"</span>,    <span class="hljs-attr">observer</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">newValue, oldValue</span>) </span>&#123;  <span class="hljs-comment">//观察者</span>        <span class="hljs-built_in">console</span>.log(newValue, oldValue);    &#125;  &#125;&#125;,<span class="hljs-attr">data</span>: &#123;  <span class="hljs-attr">sum</span>: <span class="hljs-number">0</span>&#125;,<span class="hljs-comment">//可以监听properties和data</span>observers: &#123;  <span class="hljs-comment">//一个新的值</span>  <span class="hljs-string">'num1'</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">newVal</span>) </span>&#123;    <span class="hljs-keyword">this</span>.setData(&#123;      <span class="hljs-attr">sum</span>: sum + newVal    &#125;)  &#125;,  <span class="hljs-comment">//同时监听两个，按顺序</span>  <span class="hljs-string">'num2, num3'</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">num1, num2</span>) </span>&#123;    <span class="hljs-keyword">this</span>.setData(&#123;      <span class="hljs-attr">sum</span>: num + num2    &#125;)  &#125;,  <span class="hljs-comment">//可以获得新的值和老的值</span>  <span class="hljs-string">'num4'</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">newVal, oldVal</span>) </span>&#123;    <span class="hljs-keyword">this</span>.setData(&#123;      <span class="hljs-attr">sum</span>: oldVal + newVal    &#125;)  &#125;  <span class="hljs-comment">//注意：不能同时监听data值和setData，会死循环</span>&#125;,</code></pre>]]></content>
    
    
    <categories>
      
      <category>浅谈前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
      <tag>微信小程序</tag>
      
      <tag>属性监听</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序使用wxParse解析HTML</title>
    <link href="/2021/01/08/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8wxParse%E8%A7%A3%E6%9E%90HTML/"/>
    <url>/2021/01/08/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%BD%BF%E7%94%A8wxParse%E8%A7%A3%E6%9E%90HTML/</url>
    
    <content type="html"><![CDATA[<blockquote><p>需求：微信小程序解析后端请求过来的HTML代码，默认小程序不支持解析HTML</p></blockquote><blockquote><p>结果办法：利用WxParse插件（封装好的模板库）进行替换/解析</p></blockquote><p>下载：<a href="https://github.com/icindy/wxParse" target="_blank" rel="noopener">https://github.com/icindy/wxParse</a></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>1、拷贝：目录下的wxParse文件夹，把他拷贝到我们的项目目录下，如果emoji表情库没有用到，可以不拷贝（这玩意占用内存挺大）　　</p><p>2、引入wxss：在app.wxss全局样式文件或者指定加载的页面样式文件中，需要引入wxParse的样式表</p><blockquote><p>@import “/page/wxParse/wxParse.wxss”;</p></blockquote><p>3、引入wxParse.js：在需要加载html内容的页面对应的js文件里引入wxParse.js</p><blockquote><p>var WxParse = require(‘../../wxParse/wxParse.js’);</p></blockquote><pre><code class="hljs javascript">data: &#123;  <span class="hljs-attr">content</span>: <span class="hljs-string">''</span>    <span class="hljs-comment">//定义一个变量</span>&#125;使用：<span class="hljs-comment">/*** WxParse.wxParse(bindName , type, data, target,imagePadding)* 1.bindName绑定的数据名(必填)* 2.type可以为html或者md(必填)* 3.data为传入的具体数据(必填)* 4.target为Page对象,一般为this(必填)* 5.imagePadding为当图片自适应是左右的单一padding(默认为0,可选)** 1的数据名用于wxml中*/</span>WxParse.wxParse(<span class="hljs-string">'content'</span>, <span class="hljs-string">'html'</span>, <span class="hljs-keyword">this</span>.data.content, <span class="hljs-keyword">this</span>, <span class="hljs-number">0</span>);</code></pre><p>4、wxml中引入页面模板<br><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">import</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../../../../utils/wxParse/wxParse.wxml"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">is</span>=<span class="hljs-string">"wxParse"</span> <span class="hljs-attr">data</span>=<span class="hljs-string">"&#123;&#123;wxParseData:content.nodes&#125;&#125;"</span> /&gt;</span><span class="hljs-comment">&lt;!-- wxParseData:content.nodes中的content就是js里面5个参数中的第1个 --&gt;</span></code></pre></p>]]></content>
    
    
    <categories>
      
      <category>浅谈前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
      <tag>微信小程序</tag>
      
      <tag>wxParse</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用CryptoJS解决微信小程序用户信息解密</title>
    <link href="/2021/01/08/%E4%BD%BF%E7%94%A8CryptoJS%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E8%A7%A3%E5%AF%86/"/>
    <url>/2021/01/08/%E4%BD%BF%E7%94%A8CryptoJS%E8%A7%A3%E5%86%B3%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E8%A7%A3%E5%AF%86/</url>
    
    <content type="html"><![CDATA[<p>前言：正常情况来说，微信小程序前端获取用户手机号是敏感操作，前端需要获得登录态后，把登录态的结果参数配合后端解码后返回解码后的结果。但是也存在纯前端解码的技术，纯前端解码原理就是把解码过程在前端js里面完成。但是不能用在实际开发中，因为请求域名不是合法配置的域名。这里只能用做前端测试用，实际开发还是需要后端请求返回。</p><p>插件下载：<a href="https://github.com/gwjjeff/cryptojs/archive/master.zip" target="_blank" rel="noopener">https://github.com/gwjjeff/cryptojs/archive/master.zip</a></p><blockquote><p>问题描述：<br>wx.getUserInfo(OBJECT) 微信官方的这个获取用户信息的方法，需要对接口返回的加密数据( encryptedData )进行对称解密。</p></blockquote><hr><h3 id="微信官方有提供加密数据解密算法"><a href="#微信官方有提供加密数据解密算法" class="headerlink" title="微信官方有提供加密数据解密算法"></a>微信官方有提供加密数据解密算法</h3><p>接口如果涉及敏感数据（如wx.getUserInfo当中的 openId 和unionId ），接口的明文内容将不包含这些敏感数据。开发者如需要获取敏感数据，需要对接口返回的加密数据( encryptedData )进行对称解密。解密算法如下：</p><blockquote><p>1.对称解密使用的算法为 AES-128-CBC，数据采用PKCS#7填充。<br>2 对称解密的目标密文为 Base64_Decode(encryptedData)。<br>3.对称解密秘钥 aeskey = Base64_Decode(session_key), aeskey 是16字节。<br>4.对称解密算法初始向量 为Base64_Decode(iv)，其中iv由数据接口返回。</p></blockquote><h3 id="纯前端解密使用方法"><a href="#纯前端解密使用方法" class="headerlink" title="纯前端解密使用方法"></a>纯前端解密使用方法</h3><p>1、下载包，将 CryptoJS 的包放入 小程序的 utils 中</p><p>2、封装 RdWXBizDataCrypt.js<br><pre><code class="hljs javascript"><span class="hljs-comment">/** * Created by rd on 2017/5/4. */</span><span class="hljs-comment">// 引入CryptoJS</span><span class="hljs-keyword">var</span> Crypto = <span class="hljs-built_in">require</span>(<span class="hljs-string">'cryptojs/cryptojs.js'</span>).Crypto;<span class="hljs-keyword">var</span> app = getApp(); <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">RdWXBizDataCrypt</span>(<span class="hljs-params">appId, sessionKey</span>) </span>&#123;  <span class="hljs-keyword">this</span>.appId = appId  <span class="hljs-keyword">this</span>.sessionKey = sessionKey&#125; RdWXBizDataCrypt.prototype.decryptData = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">encryptedData, iv</span>) </span>&#123;  <span class="hljs-comment">// base64 decode ：使用 CryptoJS 中 Crypto.util.base64ToBytes()进行 base64解码</span>  <span class="hljs-keyword">var</span> encryptedData = Crypto.util.base64ToBytes(encryptedData)  <span class="hljs-keyword">var</span> key = Crypto.util.base64ToBytes(<span class="hljs-keyword">this</span>.sessionKey);  <span class="hljs-keyword">var</span> iv = Crypto.util.base64ToBytes(iv);   <span class="hljs-comment">// 对称解密使用的算法为 AES-128-CBC，数据采用PKCS#7填充</span>  <span class="hljs-keyword">var</span> mode = <span class="hljs-keyword">new</span> Crypto.mode.CBC(Crypto.pad.pkcs7);  <span class="hljs-keyword">try</span> &#123;    <span class="hljs-comment">// 解密</span>    <span class="hljs-keyword">var</span> bytes = Crypto.AES.decrypt(encryptedData, key, &#123;        <span class="hljs-attr">asBpytes</span>:<span class="hljs-literal">true</span>,        <span class="hljs-attr">iv</span>: iv,        <span class="hljs-attr">mode</span>: mode    &#125;);    <span class="hljs-keyword">var</span> decryptResult = <span class="hljs-built_in">JSON</span>.parse(bytes);  &#125; <span class="hljs-keyword">catch</span> (err) &#123;    <span class="hljs-built_in">console</span>.log(err)  &#125;  <span class="hljs-keyword">if</span> (decryptResult.watermark.appid !== <span class="hljs-keyword">this</span>.appId) &#123;    <span class="hljs-built_in">console</span>.log(err)  &#125;  <span class="hljs-keyword">return</span> decryptResult&#125; <span class="hljs-built_in">module</span>.exports = RdWXBizDataCrypt</code></pre></p><p>3、使用</p><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> &#123; APPID, SECRET &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">'../../../../common/const'</span>;<span class="hljs-keyword">var</span> WXBizDataCrypt = <span class="hljs-built_in">require</span>(<span class="hljs-string">'../../../../utils/RdWXBizDataCrypt.js'</span>);<span class="hljs-comment">//先登录</span>login() &#123;  <span class="hljs-keyword">var</span> that = <span class="hljs-keyword">this</span>;  wx.login(&#123;    success(res) &#123;      <span class="hljs-comment">//拿到登录态的code</span>      <span class="hljs-keyword">var</span> code = res.code      wx.request(&#123;        <span class="hljs-attr">url</span>: <span class="hljs-string">'https://api.weixin.qq.com/sns/jscode2session?appid='</span> + APPID + <span class="hljs-string">'&amp;secret='</span> + SECRET + <span class="hljs-string">'&amp;js_code='</span> + code + <span class="hljs-string">'&amp;grant_type=authorization_code'</span>,        <span class="hljs-attr">method</span>: <span class="hljs-string">"post"</span>,        <span class="hljs-attr">data</span>: &#123; code &#125;,        <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;          that.setData(res.data);        &#125;      &#125;)    &#125;  &#125;)&#125;<span class="hljs-comment">//再获得手机号</span>getPhoneNumber(e) &#123;  <span class="hljs-keyword">var</span> that = <span class="hljs-keyword">this</span>;  <span class="hljs-keyword">if</span> (e.detail.errMsg == <span class="hljs-string">"getPhoneNumber:ok"</span>) &#123;    <span class="hljs-comment">//传入appid和session_key</span>    <span class="hljs-keyword">var</span> pc = <span class="hljs-keyword">new</span> WXBizDataCrypt(APPID, <span class="hljs-keyword">this</span>.data.session_key)    <span class="hljs-keyword">var</span> data = pc.decryptData(e.detail.encryptedData, e.detail.iv)    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'解密后 data: '</span>, data)  &#125;&#125;,</code></pre>]]></content>
    
    
    <categories>
      
      <category>浅谈前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>省市区三级联动area.js</title>
    <link href="/2021/01/08/%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8area.js/"/>
    <url>/2021/01/08/%E7%9C%81%E5%B8%82%E5%8C%BA%E4%B8%89%E7%BA%A7%E8%81%94%E5%8A%A8area.js/</url>
    
    <content type="html"><![CDATA[<h2 id="area-js-代码如下："><a href="#area-js-代码如下：" class="headerlink" title="area.js 代码如下："></a>area.js 代码如下：</h2><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;    <span class="hljs-attr">province_list</span>: &#123;      <span class="hljs-number">110000</span>: <span class="hljs-string">'北京市'</span>,      <span class="hljs-number">120000</span>: <span class="hljs-string">'天津市'</span>,      <span class="hljs-number">130000</span>: <span class="hljs-string">'河北省'</span>,      <span class="hljs-number">140000</span>: <span class="hljs-string">'山西省'</span>,      <span class="hljs-number">150000</span>: <span class="hljs-string">'内蒙古自治区'</span>,      <span class="hljs-number">210000</span>: <span class="hljs-string">'辽宁省'</span>,      <span class="hljs-number">220000</span>: <span class="hljs-string">'吉林省'</span>,      <span class="hljs-number">230000</span>: <span class="hljs-string">'黑龙江省'</span>,      <span class="hljs-number">310000</span>: <span class="hljs-string">'上海市'</span>,      <span class="hljs-number">320000</span>: <span class="hljs-string">'江苏省'</span>,      <span class="hljs-number">330000</span>: <span class="hljs-string">'浙江省'</span>,      <span class="hljs-number">340000</span>: <span class="hljs-string">'安徽省'</span>,      <span class="hljs-number">350000</span>: <span class="hljs-string">'福建省'</span>,      <span class="hljs-number">360000</span>: <span class="hljs-string">'江西省'</span>,      <span class="hljs-number">370000</span>: <span class="hljs-string">'山东省'</span>,      <span class="hljs-number">410000</span>: <span class="hljs-string">'河南省'</span>,      <span class="hljs-number">420000</span>: <span class="hljs-string">'湖北省'</span>,      <span class="hljs-number">430000</span>: <span class="hljs-string">'湖南省'</span>,      <span class="hljs-number">440000</span>: <span class="hljs-string">'广东省'</span>,      <span class="hljs-number">450000</span>: <span class="hljs-string">'广西壮族自治区'</span>,      <span class="hljs-number">460000</span>: <span class="hljs-string">'海南省'</span>,      <span class="hljs-number">500000</span>: <span class="hljs-string">'重庆市'</span>,      <span class="hljs-number">510000</span>: <span class="hljs-string">'四川省'</span>,      <span class="hljs-number">520000</span>: <span class="hljs-string">'贵州省'</span>,      <span class="hljs-number">530000</span>: <span class="hljs-string">'云南省'</span>,      <span class="hljs-number">540000</span>: <span class="hljs-string">'西藏自治区'</span>,      <span class="hljs-number">610000</span>: <span class="hljs-string">'陕西省'</span>,      <span class="hljs-number">620000</span>: <span class="hljs-string">'甘肃省'</span>,      <span class="hljs-number">630000</span>: <span class="hljs-string">'青海省'</span>,      <span class="hljs-number">640000</span>: <span class="hljs-string">'宁夏回族自治区'</span>,      <span class="hljs-number">650000</span>: <span class="hljs-string">'新疆维吾尔自治区'</span>,      <span class="hljs-number">710000</span>: <span class="hljs-string">'台湾省'</span>,      <span class="hljs-number">810000</span>: <span class="hljs-string">'香港特别行政区'</span>,      <span class="hljs-number">820000</span>: <span class="hljs-string">'澳门特别行政区'</span>,      <span class="hljs-number">900000</span>: <span class="hljs-string">'海外'</span>    &#125;,    <span class="hljs-attr">city_list</span>: &#123;      <span class="hljs-number">110100</span>: <span class="hljs-string">'北京市'</span>,      <span class="hljs-number">120100</span>: <span class="hljs-string">'天津市'</span>,      <span class="hljs-number">130100</span>: <span class="hljs-string">'石家庄市'</span>,      <span class="hljs-number">130200</span>: <span class="hljs-string">'唐山市'</span>,      <span class="hljs-number">130300</span>: <span class="hljs-string">'秦皇岛市'</span>,      <span class="hljs-number">130400</span>: <span class="hljs-string">'邯郸市'</span>,      <span class="hljs-number">130500</span>: <span class="hljs-string">'邢台市'</span>,      <span class="hljs-number">130600</span>: <span class="hljs-string">'保定市'</span>,      <span class="hljs-number">130700</span>: <span class="hljs-string">'张家口市'</span>,      <span class="hljs-number">130800</span>: <span class="hljs-string">'承德市'</span>,      <span class="hljs-number">130900</span>: <span class="hljs-string">'沧州市'</span>,      <span class="hljs-number">131000</span>: <span class="hljs-string">'廊坊市'</span>,      <span class="hljs-number">131100</span>: <span class="hljs-string">'衡水市'</span>,      <span class="hljs-number">140100</span>: <span class="hljs-string">'太原市'</span>,      <span class="hljs-number">140200</span>: <span class="hljs-string">'大同市'</span>,      <span class="hljs-number">140300</span>: <span class="hljs-string">'阳泉市'</span>,      <span class="hljs-number">140400</span>: <span class="hljs-string">'长治市'</span>,      <span class="hljs-number">140500</span>: <span class="hljs-string">'晋城市'</span>,      <span class="hljs-number">140600</span>: <span class="hljs-string">'朔州市'</span>,      <span class="hljs-number">140700</span>: <span class="hljs-string">'晋中市'</span>,      <span class="hljs-number">140800</span>: <span class="hljs-string">'运城市'</span>,      <span class="hljs-number">140900</span>: <span class="hljs-string">'忻州市'</span>,      <span class="hljs-number">141000</span>: <span class="hljs-string">'临汾市'</span>,      <span class="hljs-number">141100</span>: <span class="hljs-string">'吕梁市'</span>,      <span class="hljs-number">150100</span>: <span class="hljs-string">'呼和浩特市'</span>,      <span class="hljs-number">150200</span>: <span class="hljs-string">'包头市'</span>,      <span class="hljs-number">150300</span>: <span class="hljs-string">'乌海市'</span>,      <span class="hljs-number">150400</span>: <span class="hljs-string">'赤峰市'</span>,      <span class="hljs-number">150500</span>: <span class="hljs-string">'通辽市'</span>,      <span class="hljs-number">150600</span>: <span class="hljs-string">'鄂尔多斯市'</span>,      <span class="hljs-number">150700</span>: <span class="hljs-string">'呼伦贝尔市'</span>,      <span class="hljs-number">150800</span>: <span class="hljs-string">'巴彦淖尔市'</span>,      <span class="hljs-number">150900</span>: <span class="hljs-string">'乌兰察布市'</span>,      <span class="hljs-number">152200</span>: <span class="hljs-string">'兴安盟'</span>,      <span class="hljs-number">152500</span>: <span class="hljs-string">'锡林郭勒盟'</span>,      <span class="hljs-number">152900</span>: <span class="hljs-string">'阿拉善盟'</span>,      <span class="hljs-number">210100</span>: <span class="hljs-string">'沈阳市'</span>,      <span class="hljs-number">210200</span>: <span class="hljs-string">'大连市'</span>,      <span class="hljs-number">210300</span>: <span class="hljs-string">'鞍山市'</span>,      <span class="hljs-number">210400</span>: <span class="hljs-string">'抚顺市'</span>,      <span class="hljs-number">210500</span>: <span class="hljs-string">'本溪市'</span>,      <span class="hljs-number">210600</span>: <span class="hljs-string">'丹东市'</span>,      <span class="hljs-number">210700</span>: <span class="hljs-string">'锦州市'</span>,      <span class="hljs-number">210800</span>: <span class="hljs-string">'营口市'</span>,      <span class="hljs-number">210900</span>: <span class="hljs-string">'阜新市'</span>,      <span class="hljs-number">211000</span>: <span class="hljs-string">'辽阳市'</span>,      <span class="hljs-number">211100</span>: <span class="hljs-string">'盘锦市'</span>,      <span class="hljs-number">211200</span>: <span class="hljs-string">'铁岭市'</span>,      <span class="hljs-number">211300</span>: <span class="hljs-string">'朝阳市'</span>,      <span class="hljs-number">211400</span>: <span class="hljs-string">'葫芦岛市'</span>,      <span class="hljs-number">220100</span>: <span class="hljs-string">'长春市'</span>,      <span class="hljs-number">220200</span>: <span class="hljs-string">'吉林市'</span>,      <span class="hljs-number">220300</span>: <span class="hljs-string">'四平市'</span>,      <span class="hljs-number">220400</span>: <span class="hljs-string">'辽源市'</span>,      <span class="hljs-number">220500</span>: <span class="hljs-string">'通化市'</span>,      <span class="hljs-number">220600</span>: <span class="hljs-string">'白山市'</span>,      <span class="hljs-number">220700</span>: <span class="hljs-string">'松原市'</span>,      <span class="hljs-number">220800</span>: <span class="hljs-string">'白城市'</span>,      <span class="hljs-number">222400</span>: <span class="hljs-string">'延边朝鲜族自治州'</span>,      <span class="hljs-number">230100</span>: <span class="hljs-string">'哈尔滨市'</span>,      <span class="hljs-number">230200</span>: <span class="hljs-string">'齐齐哈尔市'</span>,      <span class="hljs-number">230300</span>: <span class="hljs-string">'鸡西市'</span>,      <span class="hljs-number">230400</span>: <span class="hljs-string">'鹤岗市'</span>,      <span class="hljs-number">230500</span>: <span class="hljs-string">'双鸭山市'</span>,      <span class="hljs-number">230600</span>: <span class="hljs-string">'大庆市'</span>,      <span class="hljs-number">230700</span>: <span class="hljs-string">'伊春市'</span>,      <span class="hljs-number">230800</span>: <span class="hljs-string">'佳木斯市'</span>,      <span class="hljs-number">230900</span>: <span class="hljs-string">'七台河市'</span>,      <span class="hljs-number">231000</span>: <span class="hljs-string">'牡丹江市'</span>,      <span class="hljs-number">231100</span>: <span class="hljs-string">'黑河市'</span>,      <span class="hljs-number">231200</span>: <span class="hljs-string">'绥化市'</span>,      <span class="hljs-number">232700</span>: <span class="hljs-string">'大兴安岭地区'</span>,      <span class="hljs-number">310100</span>: <span class="hljs-string">'上海市'</span>,      <span class="hljs-number">320100</span>: <span class="hljs-string">'南京市'</span>,      <span class="hljs-number">320200</span>: <span class="hljs-string">'无锡市'</span>,      <span class="hljs-number">320300</span>: <span class="hljs-string">'徐州市'</span>,      <span class="hljs-number">320400</span>: <span class="hljs-string">'常州市'</span>,      <span class="hljs-number">320500</span>: <span class="hljs-string">'苏州市'</span>,      <span class="hljs-number">320600</span>: <span class="hljs-string">'南通市'</span>,      <span class="hljs-number">320700</span>: <span class="hljs-string">'连云港市'</span>,      <span class="hljs-number">320800</span>: <span class="hljs-string">'淮安市'</span>,      <span class="hljs-number">320900</span>: <span class="hljs-string">'盐城市'</span>,      <span class="hljs-number">321000</span>: <span class="hljs-string">'扬州市'</span>,      <span class="hljs-number">321100</span>: <span class="hljs-string">'镇江市'</span>,      <span class="hljs-number">321200</span>: <span class="hljs-string">'泰州市'</span>,      <span class="hljs-number">321300</span>: <span class="hljs-string">'宿迁市'</span>,      <span class="hljs-number">330100</span>: <span class="hljs-string">'杭州市'</span>,      <span class="hljs-number">330200</span>: <span class="hljs-string">'宁波市'</span>,      <span class="hljs-number">330300</span>: <span class="hljs-string">'温州市'</span>,      <span class="hljs-number">330400</span>: <span class="hljs-string">'嘉兴市'</span>,      <span class="hljs-number">330500</span>: <span class="hljs-string">'湖州市'</span>,      <span class="hljs-number">330600</span>: <span class="hljs-string">'绍兴市'</span>,      <span class="hljs-number">330700</span>: <span class="hljs-string">'金华市'</span>,      <span class="hljs-number">330800</span>: <span class="hljs-string">'衢州市'</span>,      <span class="hljs-number">330900</span>: <span class="hljs-string">'舟山市'</span>,      <span class="hljs-number">331000</span>: <span class="hljs-string">'台州市'</span>,      <span class="hljs-number">331100</span>: <span class="hljs-string">'丽水市'</span>,      <span class="hljs-number">340100</span>: <span class="hljs-string">'合肥市'</span>,      <span class="hljs-number">340200</span>: <span class="hljs-string">'芜湖市'</span>,      <span class="hljs-number">340300</span>: <span class="hljs-string">'蚌埠市'</span>,      <span class="hljs-number">340400</span>: <span class="hljs-string">'淮南市'</span>,      <span class="hljs-number">340500</span>: <span class="hljs-string">'马鞍山市'</span>,      <span class="hljs-number">340600</span>: <span class="hljs-string">'淮北市'</span>,      <span class="hljs-number">340700</span>: <span class="hljs-string">'铜陵市'</span>,      <span class="hljs-number">340800</span>: <span class="hljs-string">'安庆市'</span>,      <span class="hljs-number">341000</span>: <span class="hljs-string">'黄山市'</span>,      <span class="hljs-number">341100</span>: <span class="hljs-string">'滁州市'</span>,      <span class="hljs-number">341200</span>: <span class="hljs-string">'阜阳市'</span>,      <span class="hljs-number">341300</span>: <span class="hljs-string">'宿州市'</span>,      <span class="hljs-number">341500</span>: <span class="hljs-string">'六安市'</span>,      <span class="hljs-number">341600</span>: <span class="hljs-string">'亳州市'</span>,      <span class="hljs-number">341700</span>: <span class="hljs-string">'池州市'</span>,      <span class="hljs-number">341800</span>: <span class="hljs-string">'宣城市'</span>,      <span class="hljs-number">350100</span>: <span class="hljs-string">'福州市'</span>,      <span class="hljs-number">350200</span>: <span class="hljs-string">'厦门市'</span>,      <span class="hljs-number">350300</span>: <span class="hljs-string">'莆田市'</span>,      <span class="hljs-number">350400</span>: <span class="hljs-string">'三明市'</span>,      <span class="hljs-number">350500</span>: <span class="hljs-string">'泉州市'</span>,      <span class="hljs-number">350600</span>: <span class="hljs-string">'漳州市'</span>,      <span class="hljs-number">350700</span>: <span class="hljs-string">'南平市'</span>,      <span class="hljs-number">350800</span>: <span class="hljs-string">'龙岩市'</span>,      <span class="hljs-number">350900</span>: <span class="hljs-string">'宁德市'</span>,      <span class="hljs-number">360100</span>: <span class="hljs-string">'南昌市'</span>,      <span class="hljs-number">360200</span>: <span class="hljs-string">'景德镇市'</span>,      <span class="hljs-number">360300</span>: <span class="hljs-string">'萍乡市'</span>,      <span class="hljs-number">360400</span>: <span class="hljs-string">'九江市'</span>,      <span class="hljs-number">360500</span>: <span class="hljs-string">'新余市'</span>,      <span class="hljs-number">360600</span>: <span class="hljs-string">'鹰潭市'</span>,      <span class="hljs-number">360700</span>: <span class="hljs-string">'赣州市'</span>,      <span class="hljs-number">360800</span>: <span class="hljs-string">'吉安市'</span>,      <span class="hljs-number">360900</span>: <span class="hljs-string">'宜春市'</span>,      <span class="hljs-number">361000</span>: <span class="hljs-string">'抚州市'</span>,      <span class="hljs-number">361100</span>: <span class="hljs-string">'上饶市'</span>,      <span class="hljs-number">370100</span>: <span class="hljs-string">'济南市'</span>,      <span class="hljs-number">370200</span>: <span class="hljs-string">'青岛市'</span>,      <span class="hljs-number">370300</span>: <span class="hljs-string">'淄博市'</span>,      <span class="hljs-number">370400</span>: <span class="hljs-string">'枣庄市'</span>,      <span class="hljs-number">370500</span>: <span class="hljs-string">'东营市'</span>,      <span class="hljs-number">370600</span>: <span class="hljs-string">'烟台市'</span>,      <span class="hljs-number">370700</span>: <span class="hljs-string">'潍坊市'</span>,      <span class="hljs-number">370800</span>: <span class="hljs-string">'济宁市'</span>,      <span class="hljs-number">370900</span>: <span class="hljs-string">'泰安市'</span>,      <span class="hljs-number">371000</span>: <span class="hljs-string">'威海市'</span>,      <span class="hljs-number">371100</span>: <span class="hljs-string">'日照市'</span>,      <span class="hljs-number">371300</span>: <span class="hljs-string">'临沂市'</span>,      <span class="hljs-number">371400</span>: <span class="hljs-string">'德州市'</span>,      <span class="hljs-number">371500</span>: <span class="hljs-string">'聊城市'</span>,      <span class="hljs-number">371600</span>: <span class="hljs-string">'滨州市'</span>,      <span class="hljs-number">371700</span>: <span class="hljs-string">'菏泽市'</span>,      <span class="hljs-number">410100</span>: <span class="hljs-string">'郑州市'</span>,      <span class="hljs-number">410200</span>: <span class="hljs-string">'开封市'</span>,      <span class="hljs-number">410300</span>: <span class="hljs-string">'洛阳市'</span>,      <span class="hljs-number">410400</span>: <span class="hljs-string">'平顶山市'</span>,      <span class="hljs-number">410500</span>: <span class="hljs-string">'安阳市'</span>,      <span class="hljs-number">410600</span>: <span class="hljs-string">'鹤壁市'</span>,      <span class="hljs-number">410700</span>: <span class="hljs-string">'新乡市'</span>,      <span class="hljs-number">410800</span>: <span class="hljs-string">'焦作市'</span>,      <span class="hljs-number">410900</span>: <span class="hljs-string">'濮阳市'</span>,      <span class="hljs-number">411000</span>: <span class="hljs-string">'许昌市'</span>,      <span class="hljs-number">411100</span>: <span class="hljs-string">'漯河市'</span>,      <span class="hljs-number">411200</span>: <span class="hljs-string">'三门峡市'</span>,      <span class="hljs-number">411300</span>: <span class="hljs-string">'南阳市'</span>,      <span class="hljs-number">411400</span>: <span class="hljs-string">'商丘市'</span>,      <span class="hljs-number">411500</span>: <span class="hljs-string">'信阳市'</span>,      <span class="hljs-number">411600</span>: <span class="hljs-string">'周口市'</span>,      <span class="hljs-number">411700</span>: <span class="hljs-string">'驻马店市'</span>,      <span class="hljs-number">419000</span>: <span class="hljs-string">'省直辖县'</span>,      <span class="hljs-number">420100</span>: <span class="hljs-string">'武汉市'</span>,      <span class="hljs-number">420200</span>: <span class="hljs-string">'黄石市'</span>,      <span class="hljs-number">420300</span>: <span class="hljs-string">'十堰市'</span>,      <span class="hljs-number">420500</span>: <span class="hljs-string">'宜昌市'</span>,      <span class="hljs-number">420600</span>: <span class="hljs-string">'襄阳市'</span>,      <span class="hljs-number">420700</span>: <span class="hljs-string">'鄂州市'</span>,      <span class="hljs-number">420800</span>: <span class="hljs-string">'荆门市'</span>,      <span class="hljs-number">420900</span>: <span class="hljs-string">'孝感市'</span>,      <span class="hljs-number">421000</span>: <span class="hljs-string">'荆州市'</span>,      <span class="hljs-number">421100</span>: <span class="hljs-string">'黄冈市'</span>,      <span class="hljs-number">421200</span>: <span class="hljs-string">'咸宁市'</span>,      <span class="hljs-number">421300</span>: <span class="hljs-string">'随州市'</span>,      <span class="hljs-number">422800</span>: <span class="hljs-string">'恩施土家族苗族自治州'</span>,      <span class="hljs-number">429000</span>: <span class="hljs-string">'省直辖县'</span>,      <span class="hljs-number">430100</span>: <span class="hljs-string">'长沙市'</span>,      <span class="hljs-number">430200</span>: <span class="hljs-string">'株洲市'</span>,      <span class="hljs-number">430300</span>: <span class="hljs-string">'湘潭市'</span>,      <span class="hljs-number">430400</span>: <span class="hljs-string">'衡阳市'</span>,      <span class="hljs-number">430500</span>: <span class="hljs-string">'邵阳市'</span>,      <span class="hljs-number">430600</span>: <span class="hljs-string">'岳阳市'</span>,      <span class="hljs-number">430700</span>: <span class="hljs-string">'常德市'</span>,      <span class="hljs-number">430800</span>: <span class="hljs-string">'张家界市'</span>,      <span class="hljs-number">430900</span>: <span class="hljs-string">'益阳市'</span>,      <span class="hljs-number">431000</span>: <span class="hljs-string">'郴州市'</span>,      <span class="hljs-number">431100</span>: <span class="hljs-string">'永州市'</span>,      <span class="hljs-number">431200</span>: <span class="hljs-string">'怀化市'</span>,      <span class="hljs-number">431300</span>: <span class="hljs-string">'娄底市'</span>,      <span class="hljs-number">433100</span>: <span class="hljs-string">'湘西土家族苗族自治州'</span>,      <span class="hljs-number">440100</span>: <span class="hljs-string">'广州市'</span>,      <span class="hljs-number">440200</span>: <span class="hljs-string">'韶关市'</span>,      <span class="hljs-number">440300</span>: <span class="hljs-string">'深圳市'</span>,      <span class="hljs-number">440400</span>: <span class="hljs-string">'珠海市'</span>,      <span class="hljs-number">440500</span>: <span class="hljs-string">'汕头市'</span>,      <span class="hljs-number">440600</span>: <span class="hljs-string">'佛山市'</span>,      <span class="hljs-number">440700</span>: <span class="hljs-string">'江门市'</span>,      <span class="hljs-number">440800</span>: <span class="hljs-string">'湛江市'</span>,      <span class="hljs-number">440900</span>: <span class="hljs-string">'茂名市'</span>,      <span class="hljs-number">441200</span>: <span class="hljs-string">'肇庆市'</span>,      <span class="hljs-number">441300</span>: <span class="hljs-string">'惠州市'</span>,      <span class="hljs-number">441400</span>: <span class="hljs-string">'梅州市'</span>,      <span class="hljs-number">441500</span>: <span class="hljs-string">'汕尾市'</span>,      <span class="hljs-number">441600</span>: <span class="hljs-string">'河源市'</span>,      <span class="hljs-number">441700</span>: <span class="hljs-string">'阳江市'</span>,      <span class="hljs-number">441800</span>: <span class="hljs-string">'清远市'</span>,      <span class="hljs-number">441900</span>: <span class="hljs-string">'东莞市'</span>,      <span class="hljs-number">442000</span>: <span class="hljs-string">'中山市'</span>,      <span class="hljs-number">445100</span>: <span class="hljs-string">'潮州市'</span>,      <span class="hljs-number">445200</span>: <span class="hljs-string">'揭阳市'</span>,      <span class="hljs-number">445300</span>: <span class="hljs-string">'云浮市'</span>,      <span class="hljs-number">450100</span>: <span class="hljs-string">'南宁市'</span>,      <span class="hljs-number">450200</span>: <span class="hljs-string">'柳州市'</span>,      <span class="hljs-number">450300</span>: <span class="hljs-string">'桂林市'</span>,      <span class="hljs-number">450400</span>: <span class="hljs-string">'梧州市'</span>,      <span class="hljs-number">450500</span>: <span class="hljs-string">'北海市'</span>,      <span class="hljs-number">450600</span>: <span class="hljs-string">'防城港市'</span>,      <span class="hljs-number">450700</span>: <span class="hljs-string">'钦州市'</span>,      <span class="hljs-number">450800</span>: <span class="hljs-string">'贵港市'</span>,      <span class="hljs-number">450900</span>: <span class="hljs-string">'玉林市'</span>,      <span class="hljs-number">451000</span>: <span class="hljs-string">'百色市'</span>,      <span class="hljs-number">451100</span>: <span class="hljs-string">'贺州市'</span>,      <span class="hljs-number">451200</span>: <span class="hljs-string">'河池市'</span>,      <span class="hljs-number">451300</span>: <span class="hljs-string">'来宾市'</span>,      <span class="hljs-number">451400</span>: <span class="hljs-string">'崇左市'</span>,      <span class="hljs-number">460100</span>: <span class="hljs-string">'海口市'</span>,      <span class="hljs-number">460200</span>: <span class="hljs-string">'三亚市'</span>,      <span class="hljs-number">460300</span>: <span class="hljs-string">'三沙市'</span>,      <span class="hljs-number">460400</span>: <span class="hljs-string">'儋州市'</span>,      <span class="hljs-number">469000</span>: <span class="hljs-string">'省直辖县'</span>,      <span class="hljs-number">500100</span>: <span class="hljs-string">'重庆市'</span>,      <span class="hljs-number">500200</span>: <span class="hljs-string">'县'</span>,      <span class="hljs-number">510100</span>: <span class="hljs-string">'成都市'</span>,      <span class="hljs-number">510300</span>: <span class="hljs-string">'自贡市'</span>,      <span class="hljs-number">510400</span>: <span class="hljs-string">'攀枝花市'</span>,      <span class="hljs-number">510500</span>: <span class="hljs-string">'泸州市'</span>,      <span class="hljs-number">510600</span>: <span class="hljs-string">'德阳市'</span>,      <span class="hljs-number">510700</span>: <span class="hljs-string">'绵阳市'</span>,      <span class="hljs-number">510800</span>: <span class="hljs-string">'广元市'</span>,      <span class="hljs-number">510900</span>: <span class="hljs-string">'遂宁市'</span>,      <span class="hljs-number">511000</span>: <span class="hljs-string">'内江市'</span>,      <span class="hljs-number">511100</span>: <span class="hljs-string">'乐山市'</span>,      <span class="hljs-number">511300</span>: <span class="hljs-string">'南充市'</span>,      <span class="hljs-number">511400</span>: <span class="hljs-string">'眉山市'</span>,      <span class="hljs-number">511500</span>: <span class="hljs-string">'宜宾市'</span>,      <span class="hljs-number">511600</span>: <span class="hljs-string">'广安市'</span>,      <span class="hljs-number">511700</span>: <span class="hljs-string">'达州市'</span>,      <span class="hljs-number">511800</span>: <span class="hljs-string">'雅安市'</span>,      <span class="hljs-number">511900</span>: <span class="hljs-string">'巴中市'</span>,      <span class="hljs-number">512000</span>: <span class="hljs-string">'资阳市'</span>,      <span class="hljs-number">513200</span>: <span class="hljs-string">'阿坝藏族羌族自治州'</span>,      <span class="hljs-number">513300</span>: <span class="hljs-string">'甘孜藏族自治州'</span>,      <span class="hljs-number">513400</span>: <span class="hljs-string">'凉山彝族自治州'</span>,      <span class="hljs-number">520100</span>: <span class="hljs-string">'贵阳市'</span>,      <span class="hljs-number">520200</span>: <span class="hljs-string">'六盘水市'</span>,      <span class="hljs-number">520300</span>: <span class="hljs-string">'遵义市'</span>,      <span class="hljs-number">520400</span>: <span class="hljs-string">'安顺市'</span>,      <span class="hljs-number">520500</span>: <span class="hljs-string">'毕节市'</span>,      <span class="hljs-number">520600</span>: <span class="hljs-string">'铜仁市'</span>,      <span class="hljs-number">522300</span>: <span class="hljs-string">'黔西南布依族苗族自治州'</span>,      <span class="hljs-number">522600</span>: <span class="hljs-string">'黔东南苗族侗族自治州'</span>,      <span class="hljs-number">522700</span>: <span class="hljs-string">'黔南布依族苗族自治州'</span>,      <span class="hljs-number">530100</span>: <span class="hljs-string">'昆明市'</span>,      <span class="hljs-number">530300</span>: <span class="hljs-string">'曲靖市'</span>,      <span class="hljs-number">530400</span>: <span class="hljs-string">'玉溪市'</span>,      <span class="hljs-number">530500</span>: <span class="hljs-string">'保山市'</span>,      <span class="hljs-number">530600</span>: <span class="hljs-string">'昭通市'</span>,      <span class="hljs-number">530700</span>: <span class="hljs-string">'丽江市'</span>,      <span class="hljs-number">530800</span>: <span class="hljs-string">'普洱市'</span>,      <span class="hljs-number">530900</span>: <span class="hljs-string">'临沧市'</span>,      <span class="hljs-number">532300</span>: <span class="hljs-string">'楚雄彝族自治州'</span>,      <span class="hljs-number">532500</span>: <span class="hljs-string">'红河哈尼族彝族自治州'</span>,      <span class="hljs-number">532600</span>: <span class="hljs-string">'文山壮族苗族自治州'</span>,      <span class="hljs-number">532800</span>: <span class="hljs-string">'西双版纳傣族自治州'</span>,      <span class="hljs-number">532900</span>: <span class="hljs-string">'大理白族自治州'</span>,      <span class="hljs-number">533100</span>: <span class="hljs-string">'德宏傣族景颇族自治州'</span>,      <span class="hljs-number">533300</span>: <span class="hljs-string">'怒江傈僳族自治州'</span>,      <span class="hljs-number">533400</span>: <span class="hljs-string">'迪庆藏族自治州'</span>,      <span class="hljs-number">540100</span>: <span class="hljs-string">'拉萨市'</span>,      <span class="hljs-number">540200</span>: <span class="hljs-string">'日喀则市'</span>,      <span class="hljs-number">540300</span>: <span class="hljs-string">'昌都市'</span>,      <span class="hljs-number">540400</span>: <span class="hljs-string">'林芝市'</span>,      <span class="hljs-number">540500</span>: <span class="hljs-string">'山南市'</span>,      <span class="hljs-number">540600</span>: <span class="hljs-string">'那曲市'</span>,      <span class="hljs-number">542500</span>: <span class="hljs-string">'阿里地区'</span>,      <span class="hljs-number">610100</span>: <span class="hljs-string">'西安市'</span>,      <span class="hljs-number">610200</span>: <span class="hljs-string">'铜川市'</span>,      <span class="hljs-number">610300</span>: <span class="hljs-string">'宝鸡市'</span>,      <span class="hljs-number">610400</span>: <span class="hljs-string">'咸阳市'</span>,      <span class="hljs-number">610500</span>: <span class="hljs-string">'渭南市'</span>,      <span class="hljs-number">610600</span>: <span class="hljs-string">'延安市'</span>,      <span class="hljs-number">610700</span>: <span class="hljs-string">'汉中市'</span>,      <span class="hljs-number">610800</span>: <span class="hljs-string">'榆林市'</span>,      <span class="hljs-number">610900</span>: <span class="hljs-string">'安康市'</span>,      <span class="hljs-number">611000</span>: <span class="hljs-string">'商洛市'</span>,      <span class="hljs-number">620100</span>: <span class="hljs-string">'兰州市'</span>,      <span class="hljs-number">620200</span>: <span class="hljs-string">'嘉峪关市'</span>,      <span class="hljs-number">620300</span>: <span class="hljs-string">'金昌市'</span>,      <span class="hljs-number">620400</span>: <span class="hljs-string">'白银市'</span>,      <span class="hljs-number">620500</span>: <span class="hljs-string">'天水市'</span>,      <span class="hljs-number">620600</span>: <span class="hljs-string">'武威市'</span>,      <span class="hljs-number">620700</span>: <span class="hljs-string">'张掖市'</span>,      <span class="hljs-number">620800</span>: <span class="hljs-string">'平凉市'</span>,      <span class="hljs-number">620900</span>: <span class="hljs-string">'酒泉市'</span>,      <span class="hljs-number">621000</span>: <span class="hljs-string">'庆阳市'</span>,      <span class="hljs-number">621100</span>: <span class="hljs-string">'定西市'</span>,      <span class="hljs-number">621200</span>: <span class="hljs-string">'陇南市'</span>,      <span class="hljs-number">622900</span>: <span class="hljs-string">'临夏回族自治州'</span>,      <span class="hljs-number">623000</span>: <span class="hljs-string">'甘南藏族自治州'</span>,      <span class="hljs-number">630100</span>: <span class="hljs-string">'西宁市'</span>,      <span class="hljs-number">630200</span>: <span class="hljs-string">'海东市'</span>,      <span class="hljs-number">632200</span>: <span class="hljs-string">'海北藏族自治州'</span>,      <span class="hljs-number">632300</span>: <span class="hljs-string">'黄南藏族自治州'</span>,      <span class="hljs-number">632500</span>: <span class="hljs-string">'海南藏族自治州'</span>,      <span class="hljs-number">632600</span>: <span class="hljs-string">'果洛藏族自治州'</span>,      <span class="hljs-number">632700</span>: <span class="hljs-string">'玉树藏族自治州'</span>,      <span class="hljs-number">632800</span>: <span class="hljs-string">'海西蒙古族藏族自治州'</span>,      <span class="hljs-number">640100</span>: <span class="hljs-string">'银川市'</span>,      <span class="hljs-number">640200</span>: <span class="hljs-string">'石嘴山市'</span>,      <span class="hljs-number">640300</span>: <span class="hljs-string">'吴忠市'</span>,      <span class="hljs-number">640400</span>: <span class="hljs-string">'固原市'</span>,      <span class="hljs-number">640500</span>: <span class="hljs-string">'中卫市'</span>,      <span class="hljs-number">650100</span>: <span class="hljs-string">'乌鲁木齐市'</span>,      <span class="hljs-number">650200</span>: <span class="hljs-string">'克拉玛依市'</span>,      <span class="hljs-number">650400</span>: <span class="hljs-string">'吐鲁番市'</span>,      <span class="hljs-number">650500</span>: <span class="hljs-string">'哈密市'</span>,      <span class="hljs-number">652300</span>: <span class="hljs-string">'昌吉回族自治州'</span>,      <span class="hljs-number">652700</span>: <span class="hljs-string">'博尔塔拉蒙古自治州'</span>,      <span class="hljs-number">652800</span>: <span class="hljs-string">'巴音郭楞蒙古自治州'</span>,      <span class="hljs-number">652900</span>: <span class="hljs-string">'阿克苏地区'</span>,      <span class="hljs-number">653000</span>: <span class="hljs-string">'克孜勒苏柯尔克孜自治州'</span>,      <span class="hljs-number">653100</span>: <span class="hljs-string">'喀什地区'</span>,      <span class="hljs-number">653200</span>: <span class="hljs-string">'和田地区'</span>,      <span class="hljs-number">654000</span>: <span class="hljs-string">'伊犁哈萨克自治州'</span>,      <span class="hljs-number">654200</span>: <span class="hljs-string">'塔城地区'</span>,      <span class="hljs-number">654300</span>: <span class="hljs-string">'阿勒泰地区'</span>,      <span class="hljs-number">659000</span>: <span class="hljs-string">'自治区直辖县级行政区划'</span>,      <span class="hljs-number">710100</span>: <span class="hljs-string">'台北市'</span>,      <span class="hljs-number">710200</span>: <span class="hljs-string">'高雄市'</span>,      <span class="hljs-number">710300</span>: <span class="hljs-string">'台南市'</span>,      <span class="hljs-number">710400</span>: <span class="hljs-string">'台中市'</span>,      <span class="hljs-number">710500</span>: <span class="hljs-string">'金门县'</span>,      <span class="hljs-number">710600</span>: <span class="hljs-string">'南投县'</span>,      <span class="hljs-number">710700</span>: <span class="hljs-string">'基隆市'</span>,      <span class="hljs-number">710800</span>: <span class="hljs-string">'新竹市'</span>,      <span class="hljs-number">710900</span>: <span class="hljs-string">'嘉义市'</span>,      <span class="hljs-number">711100</span>: <span class="hljs-string">'新北市'</span>,      <span class="hljs-number">711200</span>: <span class="hljs-string">'宜兰县'</span>,      <span class="hljs-number">711300</span>: <span class="hljs-string">'新竹县'</span>,      <span class="hljs-number">711400</span>: <span class="hljs-string">'桃园县'</span>,      <span class="hljs-number">711500</span>: <span class="hljs-string">'苗栗县'</span>,      <span class="hljs-number">711700</span>: <span class="hljs-string">'彰化县'</span>,      <span class="hljs-number">711900</span>: <span class="hljs-string">'嘉义县'</span>,      <span class="hljs-number">712100</span>: <span class="hljs-string">'云林县'</span>,      <span class="hljs-number">712400</span>: <span class="hljs-string">'屏东县'</span>,      <span class="hljs-number">712500</span>: <span class="hljs-string">'台东县'</span>,      <span class="hljs-number">712600</span>: <span class="hljs-string">'花莲县'</span>,      <span class="hljs-number">712700</span>: <span class="hljs-string">'澎湖县'</span>,      <span class="hljs-number">712800</span>: <span class="hljs-string">'连江县'</span>,      <span class="hljs-number">810100</span>: <span class="hljs-string">'香港岛'</span>,      <span class="hljs-number">810200</span>: <span class="hljs-string">'九龙'</span>,      <span class="hljs-number">810300</span>: <span class="hljs-string">'新界'</span>,      <span class="hljs-number">820100</span>: <span class="hljs-string">'澳门半岛'</span>,      <span class="hljs-number">820200</span>: <span class="hljs-string">'离岛'</span>,      <span class="hljs-number">900400</span>: <span class="hljs-string">'阿富汗'</span>,      <span class="hljs-number">900800</span>: <span class="hljs-string">'阿尔巴尼亚'</span>,      <span class="hljs-number">901000</span>: <span class="hljs-string">'南极洲'</span>,      <span class="hljs-number">901200</span>: <span class="hljs-string">'阿尔及利亚'</span>,      <span class="hljs-number">901600</span>: <span class="hljs-string">'美属萨摩亚'</span>,      <span class="hljs-number">902000</span>: <span class="hljs-string">'安道尔'</span>,      <span class="hljs-number">902400</span>: <span class="hljs-string">'安哥拉'</span>,      <span class="hljs-number">902800</span>: <span class="hljs-string">'安提瓜和巴布达'</span>,      <span class="hljs-number">903100</span>: <span class="hljs-string">'阿塞拜疆'</span>,      <span class="hljs-number">903200</span>: <span class="hljs-string">'阿根廷'</span>,      <span class="hljs-number">903600</span>: <span class="hljs-string">'澳大利亚'</span>,      <span class="hljs-number">904000</span>: <span class="hljs-string">'奥地利'</span>,      <span class="hljs-number">904400</span>: <span class="hljs-string">'巴哈马'</span>,      <span class="hljs-number">904800</span>: <span class="hljs-string">'巴林'</span>,      <span class="hljs-number">905000</span>: <span class="hljs-string">'孟加拉'</span>,      <span class="hljs-number">905100</span>: <span class="hljs-string">'亚美尼亚'</span>,      <span class="hljs-number">905200</span>: <span class="hljs-string">'巴巴多斯'</span>,      <span class="hljs-number">905600</span>: <span class="hljs-string">'比利时'</span>,      <span class="hljs-number">906000</span>: <span class="hljs-string">'百慕大'</span>,      <span class="hljs-number">906400</span>: <span class="hljs-string">'不丹'</span>,      <span class="hljs-number">906800</span>: <span class="hljs-string">'玻利维亚'</span>,      <span class="hljs-number">907000</span>: <span class="hljs-string">'波黑'</span>,      <span class="hljs-number">907200</span>: <span class="hljs-string">'博茨瓦纳'</span>,      <span class="hljs-number">907400</span>: <span class="hljs-string">'布韦岛'</span>,      <span class="hljs-number">907600</span>: <span class="hljs-string">'巴西'</span>,      <span class="hljs-number">908400</span>: <span class="hljs-string">'伯利兹'</span>,      <span class="hljs-number">908600</span>: <span class="hljs-string">'英属印度洋领地'</span>,      <span class="hljs-number">909000</span>: <span class="hljs-string">'所罗门群岛'</span>,      <span class="hljs-number">909200</span>: <span class="hljs-string">'英属维尔京群岛'</span>,      <span class="hljs-number">909600</span>: <span class="hljs-string">'文莱'</span>,      <span class="hljs-number">910000</span>: <span class="hljs-string">'保加利亚'</span>,      <span class="hljs-number">910400</span>: <span class="hljs-string">'缅甸'</span>,      <span class="hljs-number">910800</span>: <span class="hljs-string">'布隆迪'</span>,      <span class="hljs-number">911200</span>: <span class="hljs-string">'白俄罗斯'</span>,      <span class="hljs-number">911600</span>: <span class="hljs-string">'柬埔寨'</span>,      <span class="hljs-number">912000</span>: <span class="hljs-string">'喀麦隆'</span>,      <span class="hljs-number">912400</span>: <span class="hljs-string">'加拿大'</span>,      <span class="hljs-number">913200</span>: <span class="hljs-string">'佛得角'</span>,      <span class="hljs-number">913600</span>: <span class="hljs-string">'开曼群岛'</span>,      <span class="hljs-number">914000</span>: <span class="hljs-string">'中非'</span>,      <span class="hljs-number">914400</span>: <span class="hljs-string">'斯里兰卡'</span>,      <span class="hljs-number">914800</span>: <span class="hljs-string">'乍得'</span>,      <span class="hljs-number">915200</span>: <span class="hljs-string">'智利'</span>,      <span class="hljs-number">916200</span>: <span class="hljs-string">'圣诞岛'</span>,      <span class="hljs-number">916600</span>: <span class="hljs-string">'科科斯群岛'</span>,      <span class="hljs-number">917000</span>: <span class="hljs-string">'哥伦比亚'</span>,      <span class="hljs-number">917400</span>: <span class="hljs-string">'科摩罗'</span>,      <span class="hljs-number">917500</span>: <span class="hljs-string">'马约特'</span>,      <span class="hljs-number">917800</span>: <span class="hljs-string">'刚果（布）'</span>,      <span class="hljs-number">918000</span>: <span class="hljs-string">'刚果（金）'</span>,      <span class="hljs-number">918400</span>: <span class="hljs-string">'库克群岛'</span>,      <span class="hljs-number">918800</span>: <span class="hljs-string">'哥斯达黎加'</span>,      <span class="hljs-number">919100</span>: <span class="hljs-string">'克罗地亚'</span>,      <span class="hljs-number">919200</span>: <span class="hljs-string">'古巴'</span>,      <span class="hljs-number">919600</span>: <span class="hljs-string">'塞浦路斯'</span>,      <span class="hljs-number">920300</span>: <span class="hljs-string">'捷克'</span>,      <span class="hljs-number">920400</span>: <span class="hljs-string">'贝宁'</span>,      <span class="hljs-number">920800</span>: <span class="hljs-string">'丹麦'</span>,      <span class="hljs-number">921200</span>: <span class="hljs-string">'多米尼克'</span>,      <span class="hljs-number">921400</span>: <span class="hljs-string">'多米尼加'</span>,      <span class="hljs-number">921800</span>: <span class="hljs-string">'厄瓜多尔'</span>,      <span class="hljs-number">922200</span>: <span class="hljs-string">'萨尔瓦多'</span>,      <span class="hljs-number">922600</span>: <span class="hljs-string">'赤道几内亚'</span>,      <span class="hljs-number">923100</span>: <span class="hljs-string">'埃塞俄比亚'</span>,      <span class="hljs-number">923200</span>: <span class="hljs-string">'厄立特里亚'</span>,      <span class="hljs-number">923300</span>: <span class="hljs-string">'爱沙尼亚'</span>,      <span class="hljs-number">923400</span>: <span class="hljs-string">'法罗群岛'</span>,      <span class="hljs-number">923800</span>: <span class="hljs-string">'马尔维纳斯群岛（ 福克兰）'</span>,      <span class="hljs-number">923900</span>: <span class="hljs-string">'南乔治亚岛和南桑威奇群岛'</span>,      <span class="hljs-number">924200</span>: <span class="hljs-string">'斐济群岛'</span>,      <span class="hljs-number">924600</span>: <span class="hljs-string">'芬兰'</span>,      <span class="hljs-number">924800</span>: <span class="hljs-string">'奥兰群岛'</span>,      <span class="hljs-number">925000</span>: <span class="hljs-string">'法国'</span>,      <span class="hljs-number">925400</span>: <span class="hljs-string">'法属圭亚那'</span>,      <span class="hljs-number">925800</span>: <span class="hljs-string">'法属波利尼西亚'</span>,      <span class="hljs-number">926000</span>: <span class="hljs-string">'法属南部领地'</span>,      <span class="hljs-number">926200</span>: <span class="hljs-string">'吉布提'</span>,      <span class="hljs-number">926600</span>: <span class="hljs-string">'加蓬'</span>,      <span class="hljs-number">926800</span>: <span class="hljs-string">'格鲁吉亚'</span>,      <span class="hljs-number">927000</span>: <span class="hljs-string">'冈比亚'</span>,      <span class="hljs-number">927500</span>: <span class="hljs-string">'巴勒斯坦'</span>,      <span class="hljs-number">927600</span>: <span class="hljs-string">'德国'</span>,      <span class="hljs-number">928800</span>: <span class="hljs-string">'加纳'</span>,      <span class="hljs-number">929200</span>: <span class="hljs-string">'直布罗陀'</span>,      <span class="hljs-number">929600</span>: <span class="hljs-string">'基里巴斯'</span>,      <span class="hljs-number">930000</span>: <span class="hljs-string">'希腊'</span>,      <span class="hljs-number">930400</span>: <span class="hljs-string">'格陵兰'</span>,      <span class="hljs-number">930800</span>: <span class="hljs-string">'格林纳达'</span>,      <span class="hljs-number">931200</span>: <span class="hljs-string">'瓜德罗普'</span>,      <span class="hljs-number">931600</span>: <span class="hljs-string">'关岛'</span>,      <span class="hljs-number">932000</span>: <span class="hljs-string">'危地马拉'</span>,      <span class="hljs-number">932400</span>: <span class="hljs-string">'几内亚'</span>,      <span class="hljs-number">932800</span>: <span class="hljs-string">'圭亚那'</span>,      <span class="hljs-number">933200</span>: <span class="hljs-string">'海地'</span>,      <span class="hljs-number">933400</span>: <span class="hljs-string">'赫德岛和麦克唐纳群岛'</span>,      <span class="hljs-number">933600</span>: <span class="hljs-string">'梵蒂冈'</span>,      <span class="hljs-number">934000</span>: <span class="hljs-string">'洪都拉斯'</span>,      <span class="hljs-number">934800</span>: <span class="hljs-string">'匈牙利'</span>,      <span class="hljs-number">935200</span>: <span class="hljs-string">'冰岛'</span>,      <span class="hljs-number">935600</span>: <span class="hljs-string">'印度'</span>,      <span class="hljs-number">936000</span>: <span class="hljs-string">'印尼'</span>,      <span class="hljs-number">936400</span>: <span class="hljs-string">'伊朗'</span>,      <span class="hljs-number">936800</span>: <span class="hljs-string">'伊拉克'</span>,      <span class="hljs-number">937200</span>: <span class="hljs-string">'爱尔兰'</span>,      <span class="hljs-number">937600</span>: <span class="hljs-string">'以色列'</span>,      <span class="hljs-number">938000</span>: <span class="hljs-string">'意大利'</span>,      <span class="hljs-number">938400</span>: <span class="hljs-string">'科特迪瓦'</span>,      <span class="hljs-number">938800</span>: <span class="hljs-string">'牙买加'</span>,      <span class="hljs-number">939200</span>: <span class="hljs-string">'日本'</span>,      <span class="hljs-number">939800</span>: <span class="hljs-string">'哈萨克斯坦'</span>,      <span class="hljs-number">940000</span>: <span class="hljs-string">'约旦'</span>,      <span class="hljs-number">940400</span>: <span class="hljs-string">'肯尼亚'</span>,      <span class="hljs-number">940800</span>: <span class="hljs-string">'朝鲜 北朝鲜'</span>,      <span class="hljs-number">941000</span>: <span class="hljs-string">'韩国'</span>,      <span class="hljs-number">941400</span>: <span class="hljs-string">'科威特'</span>,      <span class="hljs-number">941700</span>: <span class="hljs-string">'吉尔吉斯斯坦'</span>,      <span class="hljs-number">941800</span>: <span class="hljs-string">'老挝'</span>,      <span class="hljs-number">942200</span>: <span class="hljs-string">'黎巴嫩'</span>,      <span class="hljs-number">942600</span>: <span class="hljs-string">'莱索托'</span>,      <span class="hljs-number">942800</span>: <span class="hljs-string">'拉脱维亚'</span>,      <span class="hljs-number">943000</span>: <span class="hljs-string">'利比里亚'</span>,      <span class="hljs-number">943400</span>: <span class="hljs-string">'利比亚'</span>,      <span class="hljs-number">943800</span>: <span class="hljs-string">'列支敦士登'</span>,      <span class="hljs-number">944000</span>: <span class="hljs-string">'立陶宛'</span>,      <span class="hljs-number">944200</span>: <span class="hljs-string">'卢森堡'</span>,      <span class="hljs-number">945000</span>: <span class="hljs-string">'马达加斯加'</span>,      <span class="hljs-number">945400</span>: <span class="hljs-string">'马拉维'</span>,      <span class="hljs-number">945800</span>: <span class="hljs-string">'马来西亚'</span>,      <span class="hljs-number">946200</span>: <span class="hljs-string">'马尔代夫'</span>,      <span class="hljs-number">946600</span>: <span class="hljs-string">'马里'</span>,      <span class="hljs-number">947000</span>: <span class="hljs-string">'马耳他'</span>,      <span class="hljs-number">947400</span>: <span class="hljs-string">'马提尼克'</span>,      <span class="hljs-number">947800</span>: <span class="hljs-string">'毛里塔尼亚'</span>,      <span class="hljs-number">948000</span>: <span class="hljs-string">'毛里求斯'</span>,      <span class="hljs-number">948400</span>: <span class="hljs-string">'墨西哥'</span>,      <span class="hljs-number">949200</span>: <span class="hljs-string">'摩纳哥'</span>,      <span class="hljs-number">949600</span>: <span class="hljs-string">'蒙古国'</span>,      <span class="hljs-number">949800</span>: <span class="hljs-string">'摩尔多瓦'</span>,      <span class="hljs-number">949900</span>: <span class="hljs-string">'黑山'</span>,      <span class="hljs-number">950000</span>: <span class="hljs-string">'蒙塞拉特岛'</span>,      <span class="hljs-number">950400</span>: <span class="hljs-string">'摩洛哥'</span>,      <span class="hljs-number">950800</span>: <span class="hljs-string">'莫桑比克'</span>,      <span class="hljs-number">951200</span>: <span class="hljs-string">'阿曼'</span>,      <span class="hljs-number">951600</span>: <span class="hljs-string">'纳米比亚'</span>,      <span class="hljs-number">952000</span>: <span class="hljs-string">'瑙鲁'</span>,      <span class="hljs-number">952400</span>: <span class="hljs-string">'尼泊尔'</span>,      <span class="hljs-number">952800</span>: <span class="hljs-string">'荷兰'</span>,      <span class="hljs-number">953300</span>: <span class="hljs-string">'阿鲁巴'</span>,      <span class="hljs-number">953500</span>: <span class="hljs-string">'荷兰加勒比区'</span>,      <span class="hljs-number">954000</span>: <span class="hljs-string">'新喀里多尼亚'</span>,      <span class="hljs-number">954800</span>: <span class="hljs-string">'瓦努阿图'</span>,      <span class="hljs-number">955400</span>: <span class="hljs-string">'新西兰'</span>,      <span class="hljs-number">955800</span>: <span class="hljs-string">'尼加拉瓜'</span>,      <span class="hljs-number">956200</span>: <span class="hljs-string">'尼日尔'</span>,      <span class="hljs-number">956600</span>: <span class="hljs-string">'尼日利亚'</span>,      <span class="hljs-number">957000</span>: <span class="hljs-string">'纽埃'</span>,      <span class="hljs-number">957400</span>: <span class="hljs-string">'诺福克岛'</span>,      <span class="hljs-number">957800</span>: <span class="hljs-string">'挪威'</span>,      <span class="hljs-number">958000</span>: <span class="hljs-string">'北马里亚纳群岛'</span>,      <span class="hljs-number">958100</span>: <span class="hljs-string">'美国本土外小岛屿'</span>,      <span class="hljs-number">958300</span>: <span class="hljs-string">'密克罗尼西亚联邦'</span>,      <span class="hljs-number">958400</span>: <span class="hljs-string">'马绍尔群岛'</span>,      <span class="hljs-number">958500</span>: <span class="hljs-string">'帕劳'</span>,      <span class="hljs-number">958600</span>: <span class="hljs-string">'巴基斯坦'</span>,      <span class="hljs-number">959100</span>: <span class="hljs-string">'巴拿马'</span>,      <span class="hljs-number">959800</span>: <span class="hljs-string">'巴布亚新几内亚'</span>,      <span class="hljs-number">960000</span>: <span class="hljs-string">'巴拉圭'</span>,      <span class="hljs-number">960400</span>: <span class="hljs-string">'秘鲁'</span>,      <span class="hljs-number">960800</span>: <span class="hljs-string">'菲律宾'</span>,      <span class="hljs-number">961200</span>: <span class="hljs-string">'皮特凯恩群岛'</span>,      <span class="hljs-number">961600</span>: <span class="hljs-string">'波兰'</span>,      <span class="hljs-number">962000</span>: <span class="hljs-string">'葡萄牙'</span>,      <span class="hljs-number">962400</span>: <span class="hljs-string">'几内亚比绍'</span>,      <span class="hljs-number">962600</span>: <span class="hljs-string">'东帝汶'</span>,      <span class="hljs-number">963000</span>: <span class="hljs-string">'波多黎各'</span>,      <span class="hljs-number">963400</span>: <span class="hljs-string">'卡塔尔'</span>,      <span class="hljs-number">963800</span>: <span class="hljs-string">'留尼汪'</span>,      <span class="hljs-number">964200</span>: <span class="hljs-string">'罗马尼亚'</span>,      <span class="hljs-number">964300</span>: <span class="hljs-string">'俄罗斯'</span>,      <span class="hljs-number">964600</span>: <span class="hljs-string">'卢旺达'</span>,      <span class="hljs-number">965200</span>: <span class="hljs-string">'圣巴泰勒米岛'</span>,      <span class="hljs-number">965400</span>: <span class="hljs-string">'圣赫勒拿'</span>,      <span class="hljs-number">965900</span>: <span class="hljs-string">'圣基茨和尼维斯'</span>,      <span class="hljs-number">966000</span>: <span class="hljs-string">'安圭拉'</span>,      <span class="hljs-number">966200</span>: <span class="hljs-string">'圣卢西亚'</span>,      <span class="hljs-number">966300</span>: <span class="hljs-string">'法属圣马丁'</span>,      <span class="hljs-number">966600</span>: <span class="hljs-string">'圣皮埃尔和密克隆'</span>,      <span class="hljs-number">967000</span>: <span class="hljs-string">'圣文森特和格林纳丁斯'</span>,      <span class="hljs-number">967400</span>: <span class="hljs-string">'圣马力诺'</span>,      <span class="hljs-number">967800</span>: <span class="hljs-string">'圣多美和普林西比'</span>,      <span class="hljs-number">968200</span>: <span class="hljs-string">'沙特阿拉伯'</span>,      <span class="hljs-number">968600</span>: <span class="hljs-string">'塞内加尔'</span>,      <span class="hljs-number">968800</span>: <span class="hljs-string">'塞尔维亚'</span>,      <span class="hljs-number">969000</span>: <span class="hljs-string">'塞舌尔'</span>,      <span class="hljs-number">969400</span>: <span class="hljs-string">'塞拉利昂'</span>,      <span class="hljs-number">970200</span>: <span class="hljs-string">'新加坡'</span>,      <span class="hljs-number">970300</span>: <span class="hljs-string">'斯洛伐克'</span>,      <span class="hljs-number">970400</span>: <span class="hljs-string">'越南'</span>,      <span class="hljs-number">970500</span>: <span class="hljs-string">'斯洛文尼亚'</span>,      <span class="hljs-number">970600</span>: <span class="hljs-string">'索马里'</span>,      <span class="hljs-number">971000</span>: <span class="hljs-string">'南非'</span>,      <span class="hljs-number">971600</span>: <span class="hljs-string">'津巴布韦'</span>,      <span class="hljs-number">972400</span>: <span class="hljs-string">'西班牙'</span>,      <span class="hljs-number">972800</span>: <span class="hljs-string">'南苏丹'</span>,      <span class="hljs-number">972900</span>: <span class="hljs-string">'苏丹'</span>,      <span class="hljs-number">973200</span>: <span class="hljs-string">'西撒哈拉'</span>,      <span class="hljs-number">974000</span>: <span class="hljs-string">'苏里南'</span>,      <span class="hljs-number">974400</span>: <span class="hljs-string">'斯瓦尔巴群岛和 扬马延岛'</span>,      <span class="hljs-number">974800</span>: <span class="hljs-string">'斯威士兰'</span>,      <span class="hljs-number">975200</span>: <span class="hljs-string">'瑞典'</span>,      <span class="hljs-number">975600</span>: <span class="hljs-string">'瑞士'</span>,      <span class="hljs-number">976000</span>: <span class="hljs-string">'叙利亚'</span>,      <span class="hljs-number">976200</span>: <span class="hljs-string">'塔吉克斯坦'</span>,      <span class="hljs-number">976400</span>: <span class="hljs-string">'泰国'</span>,      <span class="hljs-number">976800</span>: <span class="hljs-string">'多哥'</span>,      <span class="hljs-number">977200</span>: <span class="hljs-string">'托克劳'</span>,      <span class="hljs-number">977600</span>: <span class="hljs-string">'汤加'</span>,      <span class="hljs-number">978000</span>: <span class="hljs-string">'特立尼达和多巴哥'</span>,      <span class="hljs-number">978400</span>: <span class="hljs-string">'阿联酋'</span>,      <span class="hljs-number">978800</span>: <span class="hljs-string">'突尼斯'</span>,      <span class="hljs-number">979200</span>: <span class="hljs-string">'土耳其'</span>,      <span class="hljs-number">979500</span>: <span class="hljs-string">'土库曼斯坦'</span>,      <span class="hljs-number">979600</span>: <span class="hljs-string">'特克斯和凯科斯群岛'</span>,      <span class="hljs-number">979800</span>: <span class="hljs-string">'图瓦卢'</span>,      <span class="hljs-number">980000</span>: <span class="hljs-string">'乌干达'</span>,      <span class="hljs-number">980400</span>: <span class="hljs-string">'乌克兰'</span>,      <span class="hljs-number">980700</span>: <span class="hljs-string">'马其顿'</span>,      <span class="hljs-number">981800</span>: <span class="hljs-string">'埃及'</span>,      <span class="hljs-number">982600</span>: <span class="hljs-string">'英国'</span>,      <span class="hljs-number">983100</span>: <span class="hljs-string">'根西岛'</span>,      <span class="hljs-number">983200</span>: <span class="hljs-string">'泽西岛'</span>,      <span class="hljs-number">983300</span>: <span class="hljs-string">'马恩岛'</span>,      <span class="hljs-number">983400</span>: <span class="hljs-string">'坦桑尼亚'</span>,      <span class="hljs-number">984000</span>: <span class="hljs-string">'美国'</span>,      <span class="hljs-number">985000</span>: <span class="hljs-string">'美属维尔京群岛'</span>,      <span class="hljs-number">985400</span>: <span class="hljs-string">'布基纳法索'</span>,      <span class="hljs-number">985800</span>: <span class="hljs-string">'乌拉圭'</span>,      <span class="hljs-number">986000</span>: <span class="hljs-string">'乌兹别克斯坦'</span>,      <span class="hljs-number">986200</span>: <span class="hljs-string">'委内瑞拉'</span>,      <span class="hljs-number">987600</span>: <span class="hljs-string">'瓦利斯和富图纳'</span>,      <span class="hljs-number">988200</span>: <span class="hljs-string">'萨摩亚'</span>,      <span class="hljs-number">988700</span>: <span class="hljs-string">'也门'</span>,      <span class="hljs-number">989400</span>: <span class="hljs-string">'赞比亚'</span>    &#125;,    <span class="hljs-attr">county_list</span>: &#123;      <span class="hljs-number">110101</span>: <span class="hljs-string">'东城区'</span>,      <span class="hljs-number">110102</span>: <span class="hljs-string">'西城区'</span>,      <span class="hljs-number">110105</span>: <span class="hljs-string">'朝阳区'</span>,      <span class="hljs-number">110106</span>: <span class="hljs-string">'丰台区'</span>,      <span class="hljs-number">110107</span>: <span class="hljs-string">'石景山区'</span>,      <span class="hljs-number">110108</span>: <span class="hljs-string">'海淀区'</span>,      <span class="hljs-number">110109</span>: <span class="hljs-string">'门头沟区'</span>,      <span class="hljs-number">110111</span>: <span class="hljs-string">'房山区'</span>,      <span class="hljs-number">110112</span>: <span class="hljs-string">'通州区'</span>,      <span class="hljs-number">110113</span>: <span class="hljs-string">'顺义区'</span>,      <span class="hljs-number">110114</span>: <span class="hljs-string">'昌平区'</span>,      <span class="hljs-number">110115</span>: <span class="hljs-string">'大兴区'</span>,      <span class="hljs-number">110116</span>: <span class="hljs-string">'怀柔区'</span>,      <span class="hljs-number">110117</span>: <span class="hljs-string">'平谷区'</span>,      <span class="hljs-number">110118</span>: <span class="hljs-string">'密云区'</span>,      <span class="hljs-number">110119</span>: <span class="hljs-string">'延庆区'</span>,      <span class="hljs-number">120101</span>: <span class="hljs-string">'和平区'</span>,      <span class="hljs-number">120102</span>: <span class="hljs-string">'河东区'</span>,      <span class="hljs-number">120103</span>: <span class="hljs-string">'河西区'</span>,      <span class="hljs-number">120104</span>: <span class="hljs-string">'南开区'</span>,      <span class="hljs-number">120105</span>: <span class="hljs-string">'河北区'</span>,      <span class="hljs-number">120106</span>: <span class="hljs-string">'红桥区'</span>,      <span class="hljs-number">120110</span>: <span class="hljs-string">'东丽区'</span>,      <span class="hljs-number">120111</span>: <span class="hljs-string">'西青区'</span>,      <span class="hljs-number">120112</span>: <span class="hljs-string">'津南区'</span>,      <span class="hljs-number">120113</span>: <span class="hljs-string">'北辰区'</span>,      <span class="hljs-number">120114</span>: <span class="hljs-string">'武清区'</span>,      <span class="hljs-number">120115</span>: <span class="hljs-string">'宝坻区'</span>,      <span class="hljs-number">120116</span>: <span class="hljs-string">'滨海新区'</span>,      <span class="hljs-number">120117</span>: <span class="hljs-string">'宁河区'</span>,      <span class="hljs-number">120118</span>: <span class="hljs-string">'静海区'</span>,      <span class="hljs-number">120119</span>: <span class="hljs-string">'蓟州区'</span>,      <span class="hljs-number">130102</span>: <span class="hljs-string">'长安区'</span>,      <span class="hljs-number">130104</span>: <span class="hljs-string">'桥西区'</span>,      <span class="hljs-number">130105</span>: <span class="hljs-string">'新华区'</span>,      <span class="hljs-number">130107</span>: <span class="hljs-string">'井陉矿区'</span>,      <span class="hljs-number">130108</span>: <span class="hljs-string">'裕华区'</span>,      <span class="hljs-number">130109</span>: <span class="hljs-string">'藁城区'</span>,      <span class="hljs-number">130110</span>: <span class="hljs-string">'鹿泉区'</span>,      <span class="hljs-number">130111</span>: <span class="hljs-string">'栾城区'</span>,      <span class="hljs-number">130121</span>: <span class="hljs-string">'井陉县'</span>,      <span class="hljs-number">130123</span>: <span class="hljs-string">'正定县'</span>,      <span class="hljs-number">130125</span>: <span class="hljs-string">'行唐县'</span>,      <span class="hljs-number">130126</span>: <span class="hljs-string">'灵寿县'</span>,      <span class="hljs-number">130127</span>: <span class="hljs-string">'高邑县'</span>,      <span class="hljs-number">130128</span>: <span class="hljs-string">'深泽县'</span>,      <span class="hljs-number">130129</span>: <span class="hljs-string">'赞皇县'</span>,      <span class="hljs-number">130130</span>: <span class="hljs-string">'无极县'</span>,      <span class="hljs-number">130131</span>: <span class="hljs-string">'平山县'</span>,      <span class="hljs-number">130132</span>: <span class="hljs-string">'元氏县'</span>,      <span class="hljs-number">130133</span>: <span class="hljs-string">'赵县'</span>,      <span class="hljs-number">130181</span>: <span class="hljs-string">'辛集市'</span>,      <span class="hljs-number">130183</span>: <span class="hljs-string">'晋州市'</span>,      <span class="hljs-number">130184</span>: <span class="hljs-string">'新乐市'</span>,      <span class="hljs-number">130202</span>: <span class="hljs-string">'路南区'</span>,      <span class="hljs-number">130203</span>: <span class="hljs-string">'路北区'</span>,      <span class="hljs-number">130204</span>: <span class="hljs-string">'古冶区'</span>,      <span class="hljs-number">130205</span>: <span class="hljs-string">'开平区'</span>,      <span class="hljs-number">130207</span>: <span class="hljs-string">'丰南区'</span>,      <span class="hljs-number">130208</span>: <span class="hljs-string">'丰润区'</span>,      <span class="hljs-number">130209</span>: <span class="hljs-string">'曹妃甸区'</span>,      <span class="hljs-number">130224</span>: <span class="hljs-string">'滦南县'</span>,      <span class="hljs-number">130225</span>: <span class="hljs-string">'乐亭县'</span>,      <span class="hljs-number">130227</span>: <span class="hljs-string">'迁西县'</span>,      <span class="hljs-number">130229</span>: <span class="hljs-string">'玉田县'</span>,      <span class="hljs-number">130281</span>: <span class="hljs-string">'遵化市'</span>,      <span class="hljs-number">130283</span>: <span class="hljs-string">'迁安市'</span>,      <span class="hljs-number">130284</span>: <span class="hljs-string">'滦州市'</span>,      <span class="hljs-number">130302</span>: <span class="hljs-string">'海港区'</span>,      <span class="hljs-number">130303</span>: <span class="hljs-string">'山海关区'</span>,      <span class="hljs-number">130304</span>: <span class="hljs-string">'北戴河区'</span>,      <span class="hljs-number">130306</span>: <span class="hljs-string">'抚宁区'</span>,      <span class="hljs-number">130321</span>: <span class="hljs-string">'青龙满族自治县'</span>,      <span class="hljs-number">130322</span>: <span class="hljs-string">'昌黎县'</span>,      <span class="hljs-number">130324</span>: <span class="hljs-string">'卢龙县'</span>,      <span class="hljs-number">130390</span>: <span class="hljs-string">'经济技术开发区'</span>,      <span class="hljs-number">130402</span>: <span class="hljs-string">'邯山区'</span>,      <span class="hljs-number">130403</span>: <span class="hljs-string">'丛台区'</span>,      <span class="hljs-number">130404</span>: <span class="hljs-string">'复兴区'</span>,      <span class="hljs-number">130406</span>: <span class="hljs-string">'峰峰矿区'</span>,      <span class="hljs-number">130407</span>: <span class="hljs-string">'肥乡区'</span>,      <span class="hljs-number">130408</span>: <span class="hljs-string">'永年区'</span>,      <span class="hljs-number">130423</span>: <span class="hljs-string">'临漳县'</span>,      <span class="hljs-number">130424</span>: <span class="hljs-string">'成安县'</span>,      <span class="hljs-number">130425</span>: <span class="hljs-string">'大名县'</span>,      <span class="hljs-number">130426</span>: <span class="hljs-string">'涉县'</span>,      <span class="hljs-number">130427</span>: <span class="hljs-string">'磁县'</span>,      <span class="hljs-number">130430</span>: <span class="hljs-string">'邱县'</span>,      <span class="hljs-number">130431</span>: <span class="hljs-string">'鸡泽县'</span>,      <span class="hljs-number">130432</span>: <span class="hljs-string">'广平县'</span>,      <span class="hljs-number">130433</span>: <span class="hljs-string">'馆陶县'</span>,      <span class="hljs-number">130434</span>: <span class="hljs-string">'魏县'</span>,      <span class="hljs-number">130435</span>: <span class="hljs-string">'曲周县'</span>,      <span class="hljs-number">130481</span>: <span class="hljs-string">'武安市'</span>,      <span class="hljs-number">130502</span>: <span class="hljs-string">'桥东区'</span>,      <span class="hljs-number">130503</span>: <span class="hljs-string">'桥西区'</span>,      <span class="hljs-number">130521</span>: <span class="hljs-string">'邢台县'</span>,      <span class="hljs-number">130522</span>: <span class="hljs-string">'临城县'</span>,      <span class="hljs-number">130523</span>: <span class="hljs-string">'内丘县'</span>,      <span class="hljs-number">130524</span>: <span class="hljs-string">'柏乡县'</span>,      <span class="hljs-number">130525</span>: <span class="hljs-string">'隆尧县'</span>,      <span class="hljs-number">130526</span>: <span class="hljs-string">'任县'</span>,      <span class="hljs-number">130527</span>: <span class="hljs-string">'南和县'</span>,      <span class="hljs-number">130528</span>: <span class="hljs-string">'宁晋县'</span>,      <span class="hljs-number">130529</span>: <span class="hljs-string">'巨鹿县'</span>,      <span class="hljs-number">130530</span>: <span class="hljs-string">'新河县'</span>,      <span class="hljs-number">130531</span>: <span class="hljs-string">'广宗县'</span>,      <span class="hljs-number">130532</span>: <span class="hljs-string">'平乡县'</span>,      <span class="hljs-number">130533</span>: <span class="hljs-string">'威县'</span>,      <span class="hljs-number">130534</span>: <span class="hljs-string">'清河县'</span>,      <span class="hljs-number">130535</span>: <span class="hljs-string">'临西县'</span>,      <span class="hljs-number">130581</span>: <span class="hljs-string">'南宫市'</span>,      <span class="hljs-number">130582</span>: <span class="hljs-string">'沙河市'</span>,      <span class="hljs-number">130602</span>: <span class="hljs-string">'竞秀区'</span>,      <span class="hljs-number">130606</span>: <span class="hljs-string">'莲池区'</span>,      <span class="hljs-number">130607</span>: <span class="hljs-string">'满城区'</span>,      <span class="hljs-number">130608</span>: <span class="hljs-string">'清苑区'</span>,      <span class="hljs-number">130609</span>: <span class="hljs-string">'徐水区'</span>,      <span class="hljs-number">130623</span>: <span class="hljs-string">'涞水县'</span>,      <span class="hljs-number">130624</span>: <span class="hljs-string">'阜平县'</span>,      <span class="hljs-number">130626</span>: <span class="hljs-string">'定兴县'</span>,      <span class="hljs-number">130627</span>: <span class="hljs-string">'唐县'</span>,      <span class="hljs-number">130628</span>: <span class="hljs-string">'高阳县'</span>,      <span class="hljs-number">130629</span>: <span class="hljs-string">'容城县'</span>,      <span class="hljs-number">130630</span>: <span class="hljs-string">'涞源县'</span>,      <span class="hljs-number">130631</span>: <span class="hljs-string">'望都县'</span>,      <span class="hljs-number">130632</span>: <span class="hljs-string">'安新县'</span>,      <span class="hljs-number">130633</span>: <span class="hljs-string">'易县'</span>,      <span class="hljs-number">130634</span>: <span class="hljs-string">'曲阳县'</span>,      <span class="hljs-number">130635</span>: <span class="hljs-string">'蠡县'</span>,      <span class="hljs-number">130636</span>: <span class="hljs-string">'顺平县'</span>,      <span class="hljs-number">130637</span>: <span class="hljs-string">'博野县'</span>,      <span class="hljs-number">130638</span>: <span class="hljs-string">'雄县'</span>,      <span class="hljs-number">130681</span>: <span class="hljs-string">'涿州市'</span>,      <span class="hljs-number">130682</span>: <span class="hljs-string">'定州市'</span>,      <span class="hljs-number">130683</span>: <span class="hljs-string">'安国市'</span>,      <span class="hljs-number">130684</span>: <span class="hljs-string">'高碑店市'</span>,      <span class="hljs-number">130702</span>: <span class="hljs-string">'桥东区'</span>,      <span class="hljs-number">130703</span>: <span class="hljs-string">'桥西区'</span>,      <span class="hljs-number">130705</span>: <span class="hljs-string">'宣化区'</span>,      <span class="hljs-number">130706</span>: <span class="hljs-string">'下花园区'</span>,      <span class="hljs-number">130708</span>: <span class="hljs-string">'万全区'</span>,      <span class="hljs-number">130709</span>: <span class="hljs-string">'崇礼区'</span>,      <span class="hljs-number">130722</span>: <span class="hljs-string">'张北县'</span>,      <span class="hljs-number">130723</span>: <span class="hljs-string">'康保县'</span>,      <span class="hljs-number">130724</span>: <span class="hljs-string">'沽源县'</span>,      <span class="hljs-number">130725</span>: <span class="hljs-string">'尚义县'</span>,      <span class="hljs-number">130726</span>: <span class="hljs-string">'蔚县'</span>,      <span class="hljs-number">130727</span>: <span class="hljs-string">'阳原县'</span>,      <span class="hljs-number">130728</span>: <span class="hljs-string">'怀安县'</span>,      <span class="hljs-number">130730</span>: <span class="hljs-string">'怀来县'</span>,      <span class="hljs-number">130731</span>: <span class="hljs-string">'涿鹿县'</span>,      <span class="hljs-number">130732</span>: <span class="hljs-string">'赤城县'</span>,      <span class="hljs-number">130802</span>: <span class="hljs-string">'双桥区'</span>,      <span class="hljs-number">130803</span>: <span class="hljs-string">'双滦区'</span>,      <span class="hljs-number">130804</span>: <span class="hljs-string">'鹰手营子矿区'</span>,      <span class="hljs-number">130821</span>: <span class="hljs-string">'承德县'</span>,      <span class="hljs-number">130822</span>: <span class="hljs-string">'兴隆县'</span>,      <span class="hljs-number">130824</span>: <span class="hljs-string">'滦平县'</span>,      <span class="hljs-number">130825</span>: <span class="hljs-string">'隆化县'</span>,      <span class="hljs-number">130826</span>: <span class="hljs-string">'丰宁满族自治县'</span>,      <span class="hljs-number">130827</span>: <span class="hljs-string">'宽城满族自治县'</span>,      <span class="hljs-number">130828</span>: <span class="hljs-string">'围场满族蒙古族自治县'</span>,      <span class="hljs-number">130881</span>: <span class="hljs-string">'平泉市'</span>,      <span class="hljs-number">130902</span>: <span class="hljs-string">'新华区'</span>,      <span class="hljs-number">130903</span>: <span class="hljs-string">'运河区'</span>,      <span class="hljs-number">130921</span>: <span class="hljs-string">'沧县'</span>,      <span class="hljs-number">130922</span>: <span class="hljs-string">'青县'</span>,      <span class="hljs-number">130923</span>: <span class="hljs-string">'东光县'</span>,      <span class="hljs-number">130924</span>: <span class="hljs-string">'海兴县'</span>,      <span class="hljs-number">130925</span>: <span class="hljs-string">'盐山县'</span>,      <span class="hljs-number">130926</span>: <span class="hljs-string">'肃宁县'</span>,      <span class="hljs-number">130927</span>: <span class="hljs-string">'南皮县'</span>,      <span class="hljs-number">130928</span>: <span class="hljs-string">'吴桥县'</span>,      <span class="hljs-number">130929</span>: <span class="hljs-string">'献县'</span>,      <span class="hljs-number">130930</span>: <span class="hljs-string">'孟村回族自治县'</span>,      <span class="hljs-number">130981</span>: <span class="hljs-string">'泊头市'</span>,      <span class="hljs-number">130982</span>: <span class="hljs-string">'任丘市'</span>,      <span class="hljs-number">130983</span>: <span class="hljs-string">'黄骅市'</span>,      <span class="hljs-number">130984</span>: <span class="hljs-string">'河间市'</span>,      <span class="hljs-number">131002</span>: <span class="hljs-string">'安次区'</span>,      <span class="hljs-number">131003</span>: <span class="hljs-string">'广阳区'</span>,      <span class="hljs-number">131022</span>: <span class="hljs-string">'固安县'</span>,      <span class="hljs-number">131023</span>: <span class="hljs-string">'永清县'</span>,      <span class="hljs-number">131024</span>: <span class="hljs-string">'香河县'</span>,      <span class="hljs-number">131025</span>: <span class="hljs-string">'大城县'</span>,      <span class="hljs-number">131026</span>: <span class="hljs-string">'文安县'</span>,      <span class="hljs-number">131028</span>: <span class="hljs-string">'大厂回族自治县'</span>,      <span class="hljs-number">131081</span>: <span class="hljs-string">'霸州市'</span>,      <span class="hljs-number">131082</span>: <span class="hljs-string">'三河市'</span>,      <span class="hljs-number">131090</span>: <span class="hljs-string">'开发区'</span>,      <span class="hljs-number">131102</span>: <span class="hljs-string">'桃城区'</span>,      <span class="hljs-number">131103</span>: <span class="hljs-string">'冀州区'</span>,      <span class="hljs-number">131121</span>: <span class="hljs-string">'枣强县'</span>,      <span class="hljs-number">131122</span>: <span class="hljs-string">'武邑县'</span>,      <span class="hljs-number">131123</span>: <span class="hljs-string">'武强县'</span>,      <span class="hljs-number">131124</span>: <span class="hljs-string">'饶阳县'</span>,      <span class="hljs-number">131125</span>: <span class="hljs-string">'安平县'</span>,      <span class="hljs-number">131126</span>: <span class="hljs-string">'故城县'</span>,      <span class="hljs-number">131127</span>: <span class="hljs-string">'景县'</span>,      <span class="hljs-number">131128</span>: <span class="hljs-string">'阜城县'</span>,      <span class="hljs-number">131182</span>: <span class="hljs-string">'深州市'</span>,      <span class="hljs-number">140105</span>: <span class="hljs-string">'小店区'</span>,      <span class="hljs-number">140106</span>: <span class="hljs-string">'迎泽区'</span>,      <span class="hljs-number">140107</span>: <span class="hljs-string">'杏花岭区'</span>,      <span class="hljs-number">140108</span>: <span class="hljs-string">'尖草坪区'</span>,      <span class="hljs-number">140109</span>: <span class="hljs-string">'万柏林区'</span>,      <span class="hljs-number">140110</span>: <span class="hljs-string">'晋源区'</span>,      <span class="hljs-number">140121</span>: <span class="hljs-string">'清徐县'</span>,      <span class="hljs-number">140122</span>: <span class="hljs-string">'阳曲县'</span>,      <span class="hljs-number">140123</span>: <span class="hljs-string">'娄烦县'</span>,      <span class="hljs-number">140181</span>: <span class="hljs-string">'古交市'</span>,      <span class="hljs-number">140212</span>: <span class="hljs-string">'新荣区'</span>,      <span class="hljs-number">140213</span>: <span class="hljs-string">'平城区'</span>,      <span class="hljs-number">140214</span>: <span class="hljs-string">'云冈区'</span>,      <span class="hljs-number">140215</span>: <span class="hljs-string">'云州区'</span>,      <span class="hljs-number">140221</span>: <span class="hljs-string">'阳高县'</span>,      <span class="hljs-number">140222</span>: <span class="hljs-string">'天镇县'</span>,      <span class="hljs-number">140223</span>: <span class="hljs-string">'广灵县'</span>,      <span class="hljs-number">140224</span>: <span class="hljs-string">'灵丘县'</span>,      <span class="hljs-number">140225</span>: <span class="hljs-string">'浑源县'</span>,      <span class="hljs-number">140226</span>: <span class="hljs-string">'左云县'</span>,      <span class="hljs-number">140302</span>: <span class="hljs-string">'城区'</span>,      <span class="hljs-number">140303</span>: <span class="hljs-string">'矿区'</span>,      <span class="hljs-number">140311</span>: <span class="hljs-string">'郊区'</span>,      <span class="hljs-number">140321</span>: <span class="hljs-string">'平定县'</span>,      <span class="hljs-number">140322</span>: <span class="hljs-string">'盂县'</span>,      <span class="hljs-number">140403</span>: <span class="hljs-string">'潞州区'</span>,      <span class="hljs-number">140404</span>: <span class="hljs-string">'上党区'</span>,      <span class="hljs-number">140405</span>: <span class="hljs-string">'屯留区'</span>,      <span class="hljs-number">140406</span>: <span class="hljs-string">'潞城区'</span>,      <span class="hljs-number">140423</span>: <span class="hljs-string">'襄垣县'</span>,      <span class="hljs-number">140425</span>: <span class="hljs-string">'平顺县'</span>,      <span class="hljs-number">140426</span>: <span class="hljs-string">'黎城县'</span>,      <span class="hljs-number">140427</span>: <span class="hljs-string">'壶关县'</span>,      <span class="hljs-number">140428</span>: <span class="hljs-string">'长子县'</span>,      <span class="hljs-number">140429</span>: <span class="hljs-string">'武乡县'</span>,      <span class="hljs-number">140430</span>: <span class="hljs-string">'沁县'</span>,      <span class="hljs-number">140431</span>: <span class="hljs-string">'沁源县'</span>,      <span class="hljs-number">140502</span>: <span class="hljs-string">'城区'</span>,      <span class="hljs-number">140521</span>: <span class="hljs-string">'沁水县'</span>,      <span class="hljs-number">140522</span>: <span class="hljs-string">'阳城县'</span>,      <span class="hljs-number">140524</span>: <span class="hljs-string">'陵川县'</span>,      <span class="hljs-number">140525</span>: <span class="hljs-string">'泽州县'</span>,      <span class="hljs-number">140581</span>: <span class="hljs-string">'高平市'</span>,      <span class="hljs-number">140602</span>: <span class="hljs-string">'朔城区'</span>,      <span class="hljs-number">140603</span>: <span class="hljs-string">'平鲁区'</span>,      <span class="hljs-number">140621</span>: <span class="hljs-string">'山阴县'</span>,      <span class="hljs-number">140622</span>: <span class="hljs-string">'应县'</span>,      <span class="hljs-number">140623</span>: <span class="hljs-string">'右玉县'</span>,      <span class="hljs-number">140681</span>: <span class="hljs-string">'怀仁市'</span>,      <span class="hljs-number">140702</span>: <span class="hljs-string">'榆次区'</span>,      <span class="hljs-number">140721</span>: <span class="hljs-string">'榆社县'</span>,      <span class="hljs-number">140722</span>: <span class="hljs-string">'左权县'</span>,      <span class="hljs-number">140723</span>: <span class="hljs-string">'和顺县'</span>,      <span class="hljs-number">140724</span>: <span class="hljs-string">'昔阳县'</span>,      <span class="hljs-number">140725</span>: <span class="hljs-string">'寿阳县'</span>,      <span class="hljs-number">140726</span>: <span class="hljs-string">'太谷县'</span>,      <span class="hljs-number">140727</span>: <span class="hljs-string">'祁县'</span>,      <span class="hljs-number">140728</span>: <span class="hljs-string">'平遥县'</span>,      <span class="hljs-number">140729</span>: <span class="hljs-string">'灵石县'</span>,      <span class="hljs-number">140781</span>: <span class="hljs-string">'介休市'</span>,      <span class="hljs-number">140802</span>: <span class="hljs-string">'盐湖区'</span>,      <span class="hljs-number">140821</span>: <span class="hljs-string">'临猗县'</span>,      <span class="hljs-number">140822</span>: <span class="hljs-string">'万荣县'</span>,      <span class="hljs-number">140823</span>: <span class="hljs-string">'闻喜县'</span>,      <span class="hljs-number">140824</span>: <span class="hljs-string">'稷山县'</span>,      <span class="hljs-number">140825</span>: <span class="hljs-string">'新绛县'</span>,      <span class="hljs-number">140826</span>: <span class="hljs-string">'绛县'</span>,      <span class="hljs-number">140827</span>: <span class="hljs-string">'垣曲县'</span>,      <span class="hljs-number">140828</span>: <span class="hljs-string">'夏县'</span>,      <span class="hljs-number">140829</span>: <span class="hljs-string">'平陆县'</span>,      <span class="hljs-number">140830</span>: <span class="hljs-string">'芮城县'</span>,      <span class="hljs-number">140881</span>: <span class="hljs-string">'永济市'</span>,      <span class="hljs-number">140882</span>: <span class="hljs-string">'河津市'</span>,      <span class="hljs-number">140902</span>: <span class="hljs-string">'忻府区'</span>,      <span class="hljs-number">140921</span>: <span class="hljs-string">'定襄县'</span>,      <span class="hljs-number">140922</span>: <span class="hljs-string">'五台县'</span>,      <span class="hljs-number">140923</span>: <span class="hljs-string">'代县'</span>,      <span class="hljs-number">140924</span>: <span class="hljs-string">'繁峙县'</span>,      <span class="hljs-number">140925</span>: <span class="hljs-string">'宁武县'</span>,      <span class="hljs-number">140926</span>: <span class="hljs-string">'静乐县'</span>,      <span class="hljs-number">140927</span>: <span class="hljs-string">'神池县'</span>,      <span class="hljs-number">140928</span>: <span class="hljs-string">'五寨县'</span>,      <span class="hljs-number">140929</span>: <span class="hljs-string">'岢岚县'</span>,      <span class="hljs-number">140930</span>: <span class="hljs-string">'河曲县'</span>,      <span class="hljs-number">140931</span>: <span class="hljs-string">'保德县'</span>,      <span class="hljs-number">140932</span>: <span class="hljs-string">'偏关县'</span>,      <span class="hljs-number">140981</span>: <span class="hljs-string">'原平市'</span>,      <span class="hljs-number">141002</span>: <span class="hljs-string">'尧都区'</span>,      <span class="hljs-number">141021</span>: <span class="hljs-string">'曲沃县'</span>,      <span class="hljs-number">141022</span>: <span class="hljs-string">'翼城县'</span>,      <span class="hljs-number">141023</span>: <span class="hljs-string">'襄汾县'</span>,      <span class="hljs-number">141024</span>: <span class="hljs-string">'洪洞县'</span>,      <span class="hljs-number">141025</span>: <span class="hljs-string">'古县'</span>,      <span class="hljs-number">141026</span>: <span class="hljs-string">'安泽县'</span>,      <span class="hljs-number">141027</span>: <span class="hljs-string">'浮山县'</span>,      <span class="hljs-number">141028</span>: <span class="hljs-string">'吉县'</span>,      <span class="hljs-number">141029</span>: <span class="hljs-string">'乡宁县'</span>,      <span class="hljs-number">141030</span>: <span class="hljs-string">'大宁县'</span>,      <span class="hljs-number">141031</span>: <span class="hljs-string">'隰县'</span>,      <span class="hljs-number">141032</span>: <span class="hljs-string">'永和县'</span>,      <span class="hljs-number">141033</span>: <span class="hljs-string">'蒲县'</span>,      <span class="hljs-number">141034</span>: <span class="hljs-string">'汾西县'</span>,      <span class="hljs-number">141081</span>: <span class="hljs-string">'侯马市'</span>,      <span class="hljs-number">141082</span>: <span class="hljs-string">'霍州市'</span>,      <span class="hljs-number">141102</span>: <span class="hljs-string">'离石区'</span>,      <span class="hljs-number">141121</span>: <span class="hljs-string">'文水县'</span>,      <span class="hljs-number">141122</span>: <span class="hljs-string">'交城县'</span>,      <span class="hljs-number">141123</span>: <span class="hljs-string">'兴县'</span>,      <span class="hljs-number">141124</span>: <span class="hljs-string">'临县'</span>,      <span class="hljs-number">141125</span>: <span class="hljs-string">'柳林县'</span>,      <span class="hljs-number">141126</span>: <span class="hljs-string">'石楼县'</span>,      <span class="hljs-number">141127</span>: <span class="hljs-string">'岚县'</span>,      <span class="hljs-number">141128</span>: <span class="hljs-string">'方山县'</span>,      <span class="hljs-number">141129</span>: <span class="hljs-string">'中阳县'</span>,      <span class="hljs-number">141130</span>: <span class="hljs-string">'交口县'</span>,      <span class="hljs-number">141181</span>: <span class="hljs-string">'孝义市'</span>,      <span class="hljs-number">141182</span>: <span class="hljs-string">'汾阳市'</span>,      <span class="hljs-number">150102</span>: <span class="hljs-string">'新城区'</span>,      <span class="hljs-number">150103</span>: <span class="hljs-string">'回民区'</span>,      <span class="hljs-number">150104</span>: <span class="hljs-string">'玉泉区'</span>,      <span class="hljs-number">150105</span>: <span class="hljs-string">'赛罕区'</span>,      <span class="hljs-number">150121</span>: <span class="hljs-string">'土默特左旗'</span>,      <span class="hljs-number">150122</span>: <span class="hljs-string">'托克托县'</span>,      <span class="hljs-number">150123</span>: <span class="hljs-string">'和林格尔县'</span>,      <span class="hljs-number">150124</span>: <span class="hljs-string">'清水河县'</span>,      <span class="hljs-number">150125</span>: <span class="hljs-string">'武川县'</span>,      <span class="hljs-number">150202</span>: <span class="hljs-string">'东河区'</span>,      <span class="hljs-number">150203</span>: <span class="hljs-string">'昆都仑区'</span>,      <span class="hljs-number">150204</span>: <span class="hljs-string">'青山区'</span>,      <span class="hljs-number">150205</span>: <span class="hljs-string">'石拐区'</span>,      <span class="hljs-number">150206</span>: <span class="hljs-string">'白云鄂博矿区'</span>,      <span class="hljs-number">150207</span>: <span class="hljs-string">'九原区'</span>,      <span class="hljs-number">150221</span>: <span class="hljs-string">'土默特右旗'</span>,      <span class="hljs-number">150222</span>: <span class="hljs-string">'固阳县'</span>,      <span class="hljs-number">150223</span>: <span class="hljs-string">'达尔罕茂明安联合旗'</span>,      <span class="hljs-number">150302</span>: <span class="hljs-string">'海勃湾区'</span>,      <span class="hljs-number">150303</span>: <span class="hljs-string">'海南区'</span>,      <span class="hljs-number">150304</span>: <span class="hljs-string">'乌达区'</span>,      <span class="hljs-number">150402</span>: <span class="hljs-string">'红山区'</span>,      <span class="hljs-number">150403</span>: <span class="hljs-string">'元宝山区'</span>,      <span class="hljs-number">150404</span>: <span class="hljs-string">'松山区'</span>,      <span class="hljs-number">150421</span>: <span class="hljs-string">'阿鲁科尔沁旗'</span>,      <span class="hljs-number">150422</span>: <span class="hljs-string">'巴林左旗'</span>,      <span class="hljs-number">150423</span>: <span class="hljs-string">'巴林右旗'</span>,      <span class="hljs-number">150424</span>: <span class="hljs-string">'林西县'</span>,      <span class="hljs-number">150425</span>: <span class="hljs-string">'克什克腾旗'</span>,      <span class="hljs-number">150426</span>: <span class="hljs-string">'翁牛特旗'</span>,      <span class="hljs-number">150428</span>: <span class="hljs-string">'喀喇沁旗'</span>,      <span class="hljs-number">150429</span>: <span class="hljs-string">'宁城县'</span>,      <span class="hljs-number">150430</span>: <span class="hljs-string">'敖汉旗'</span>,      <span class="hljs-number">150502</span>: <span class="hljs-string">'科尔沁区'</span>,      <span class="hljs-number">150521</span>: <span class="hljs-string">'科尔沁左翼中旗'</span>,      <span class="hljs-number">150522</span>: <span class="hljs-string">'科尔沁左翼后旗'</span>,      <span class="hljs-number">150523</span>: <span class="hljs-string">'开鲁县'</span>,      <span class="hljs-number">150524</span>: <span class="hljs-string">'库伦旗'</span>,      <span class="hljs-number">150525</span>: <span class="hljs-string">'奈曼旗'</span>,      <span class="hljs-number">150526</span>: <span class="hljs-string">'扎鲁特旗'</span>,      <span class="hljs-number">150581</span>: <span class="hljs-string">'霍林郭勒市'</span>,      <span class="hljs-number">150602</span>: <span class="hljs-string">'东胜区'</span>,      <span class="hljs-number">150603</span>: <span class="hljs-string">'康巴什区'</span>,      <span class="hljs-number">150621</span>: <span class="hljs-string">'达拉特旗'</span>,      <span class="hljs-number">150622</span>: <span class="hljs-string">'准格尔旗'</span>,      <span class="hljs-number">150623</span>: <span class="hljs-string">'鄂托克前旗'</span>,      <span class="hljs-number">150624</span>: <span class="hljs-string">'鄂托克旗'</span>,      <span class="hljs-number">150625</span>: <span class="hljs-string">'杭锦旗'</span>,      <span class="hljs-number">150626</span>: <span class="hljs-string">'乌审旗'</span>,      <span class="hljs-number">150627</span>: <span class="hljs-string">'伊金霍洛旗'</span>,      <span class="hljs-number">150702</span>: <span class="hljs-string">'海拉尔区'</span>,      <span class="hljs-number">150703</span>: <span class="hljs-string">'扎赉诺尔区'</span>,      <span class="hljs-number">150721</span>: <span class="hljs-string">'阿荣旗'</span>,      <span class="hljs-number">150722</span>: <span class="hljs-string">'莫力达瓦达斡尔族自治旗'</span>,      <span class="hljs-number">150723</span>: <span class="hljs-string">'鄂伦春自治旗'</span>,      <span class="hljs-number">150724</span>: <span class="hljs-string">'鄂温克族自治旗'</span>,      <span class="hljs-number">150725</span>: <span class="hljs-string">'陈巴尔虎旗'</span>,      <span class="hljs-number">150726</span>: <span class="hljs-string">'新巴尔虎左旗'</span>,      <span class="hljs-number">150727</span>: <span class="hljs-string">'新巴尔虎右旗'</span>,      <span class="hljs-number">150781</span>: <span class="hljs-string">'满洲里市'</span>,      <span class="hljs-number">150782</span>: <span class="hljs-string">'牙克石市'</span>,      <span class="hljs-number">150783</span>: <span class="hljs-string">'扎兰屯市'</span>,      <span class="hljs-number">150784</span>: <span class="hljs-string">'额尔古纳市'</span>,      <span class="hljs-number">150785</span>: <span class="hljs-string">'根河市'</span>,      <span class="hljs-number">150802</span>: <span class="hljs-string">'临河区'</span>,      <span class="hljs-number">150821</span>: <span class="hljs-string">'五原县'</span>,      <span class="hljs-number">150822</span>: <span class="hljs-string">'磴口县'</span>,      <span class="hljs-number">150823</span>: <span class="hljs-string">'乌拉特前旗'</span>,      <span class="hljs-number">150824</span>: <span class="hljs-string">'乌拉特中旗'</span>,      <span class="hljs-number">150825</span>: <span class="hljs-string">'乌拉特后旗'</span>,      <span class="hljs-number">150826</span>: <span class="hljs-string">'杭锦后旗'</span>,      <span class="hljs-number">150902</span>: <span class="hljs-string">'集宁区'</span>,      <span class="hljs-number">150921</span>: <span class="hljs-string">'卓资县'</span>,      <span class="hljs-number">150922</span>: <span class="hljs-string">'化德县'</span>,      <span class="hljs-number">150923</span>: <span class="hljs-string">'商都县'</span>,      <span class="hljs-number">150924</span>: <span class="hljs-string">'兴和县'</span>,      <span class="hljs-number">150925</span>: <span class="hljs-string">'凉城县'</span>,      <span class="hljs-number">150926</span>: <span class="hljs-string">'察哈尔右翼前旗'</span>,      <span class="hljs-number">150927</span>: <span class="hljs-string">'察哈尔右翼中旗'</span>,      <span class="hljs-number">150928</span>: <span class="hljs-string">'察哈尔右翼后旗'</span>,      <span class="hljs-number">150929</span>: <span class="hljs-string">'四子王旗'</span>,      <span class="hljs-number">150981</span>: <span class="hljs-string">'丰镇市'</span>,      <span class="hljs-number">152201</span>: <span class="hljs-string">'乌兰浩特市'</span>,      <span class="hljs-number">152202</span>: <span class="hljs-string">'阿尔山市'</span>,      <span class="hljs-number">152221</span>: <span class="hljs-string">'科尔沁右翼前旗'</span>,      <span class="hljs-number">152222</span>: <span class="hljs-string">'科尔沁右翼中旗'</span>,      <span class="hljs-number">152223</span>: <span class="hljs-string">'扎赉特旗'</span>,      <span class="hljs-number">152224</span>: <span class="hljs-string">'突泉县'</span>,      <span class="hljs-number">152501</span>: <span class="hljs-string">'二连浩特市'</span>,      <span class="hljs-number">152502</span>: <span class="hljs-string">'锡林浩特市'</span>,      <span class="hljs-number">152522</span>: <span class="hljs-string">'阿巴嘎旗'</span>,      <span class="hljs-number">152523</span>: <span class="hljs-string">'苏尼特左旗'</span>,      <span class="hljs-number">152524</span>: <span class="hljs-string">'苏尼特右旗'</span>,      <span class="hljs-number">152525</span>: <span class="hljs-string">'东乌珠穆沁旗'</span>,      <span class="hljs-number">152526</span>: <span class="hljs-string">'西乌珠穆沁旗'</span>,      <span class="hljs-number">152527</span>: <span class="hljs-string">'太仆寺旗'</span>,      <span class="hljs-number">152528</span>: <span class="hljs-string">'镶黄旗'</span>,      <span class="hljs-number">152529</span>: <span class="hljs-string">'正镶白旗'</span>,      <span class="hljs-number">152530</span>: <span class="hljs-string">'正蓝旗'</span>,      <span class="hljs-number">152531</span>: <span class="hljs-string">'多伦县'</span>,      <span class="hljs-number">152921</span>: <span class="hljs-string">'阿拉善左旗'</span>,      <span class="hljs-number">152922</span>: <span class="hljs-string">'阿拉善右旗'</span>,      <span class="hljs-number">152923</span>: <span class="hljs-string">'额济纳旗'</span>,      <span class="hljs-number">210102</span>: <span class="hljs-string">'和平区'</span>,      <span class="hljs-number">210103</span>: <span class="hljs-string">'沈河区'</span>,      <span class="hljs-number">210104</span>: <span class="hljs-string">'大东区'</span>,      <span class="hljs-number">210105</span>: <span class="hljs-string">'皇姑区'</span>,      <span class="hljs-number">210106</span>: <span class="hljs-string">'铁西区'</span>,      <span class="hljs-number">210111</span>: <span class="hljs-string">'苏家屯区'</span>,      <span class="hljs-number">210112</span>: <span class="hljs-string">'浑南区'</span>,      <span class="hljs-number">210113</span>: <span class="hljs-string">'沈北新区'</span>,      <span class="hljs-number">210114</span>: <span class="hljs-string">'于洪区'</span>,      <span class="hljs-number">210115</span>: <span class="hljs-string">'辽中区'</span>,      <span class="hljs-number">210123</span>: <span class="hljs-string">'康平县'</span>,      <span class="hljs-number">210124</span>: <span class="hljs-string">'法库县'</span>,      <span class="hljs-number">210181</span>: <span class="hljs-string">'新民市'</span>,      <span class="hljs-number">210190</span>: <span class="hljs-string">'经济技术开发区'</span>,      <span class="hljs-number">210202</span>: <span class="hljs-string">'中山区'</span>,      <span class="hljs-number">210203</span>: <span class="hljs-string">'西岗区'</span>,      <span class="hljs-number">210204</span>: <span class="hljs-string">'沙河口区'</span>,      <span class="hljs-number">210211</span>: <span class="hljs-string">'甘井子区'</span>,      <span class="hljs-number">210212</span>: <span class="hljs-string">'旅顺口区'</span>,      <span class="hljs-number">210213</span>: <span class="hljs-string">'金州区'</span>,      <span class="hljs-number">210214</span>: <span class="hljs-string">'普兰店区'</span>,      <span class="hljs-number">210224</span>: <span class="hljs-string">'长海县'</span>,      <span class="hljs-number">210281</span>: <span class="hljs-string">'瓦房店市'</span>,      <span class="hljs-number">210283</span>: <span class="hljs-string">'庄河市'</span>,      <span class="hljs-number">210302</span>: <span class="hljs-string">'铁东区'</span>,      <span class="hljs-number">210303</span>: <span class="hljs-string">'铁西区'</span>,      <span class="hljs-number">210304</span>: <span class="hljs-string">'立山区'</span>,      <span class="hljs-number">210311</span>: <span class="hljs-string">'千山区'</span>,      <span class="hljs-number">210321</span>: <span class="hljs-string">'台安县'</span>,      <span class="hljs-number">210323</span>: <span class="hljs-string">'岫岩满族自治县'</span>,      <span class="hljs-number">210381</span>: <span class="hljs-string">'海城市'</span>,      <span class="hljs-number">210390</span>: <span class="hljs-string">'高新区'</span>,      <span class="hljs-number">210402</span>: <span class="hljs-string">'新抚区'</span>,      <span class="hljs-number">210403</span>: <span class="hljs-string">'东洲区'</span>,      <span class="hljs-number">210404</span>: <span class="hljs-string">'望花区'</span>,      <span class="hljs-number">210411</span>: <span class="hljs-string">'顺城区'</span>,      <span class="hljs-number">210421</span>: <span class="hljs-string">'抚顺县'</span>,      <span class="hljs-number">210422</span>: <span class="hljs-string">'新宾满族自治县'</span>,      <span class="hljs-number">210423</span>: <span class="hljs-string">'清原满族自治县'</span>,      <span class="hljs-number">210502</span>: <span class="hljs-string">'平山区'</span>,      <span class="hljs-number">210503</span>: <span class="hljs-string">'溪湖区'</span>,      <span class="hljs-number">210504</span>: <span class="hljs-string">'明山区'</span>,      <span class="hljs-number">210505</span>: <span class="hljs-string">'南芬区'</span>,      <span class="hljs-number">210521</span>: <span class="hljs-string">'本溪满族自治县'</span>,      <span class="hljs-number">210522</span>: <span class="hljs-string">'桓仁满族自治县'</span>,      <span class="hljs-number">210602</span>: <span class="hljs-string">'元宝区'</span>,      <span class="hljs-number">210603</span>: <span class="hljs-string">'振兴区'</span>,      <span class="hljs-number">210604</span>: <span class="hljs-string">'振安区'</span>,      <span class="hljs-number">210624</span>: <span class="hljs-string">'宽甸满族自治县'</span>,      <span class="hljs-number">210681</span>: <span class="hljs-string">'东港市'</span>,      <span class="hljs-number">210682</span>: <span class="hljs-string">'凤城市'</span>,      <span class="hljs-number">210702</span>: <span class="hljs-string">'古塔区'</span>,      <span class="hljs-number">210703</span>: <span class="hljs-string">'凌河区'</span>,      <span class="hljs-number">210711</span>: <span class="hljs-string">'太和区'</span>,      <span class="hljs-number">210726</span>: <span class="hljs-string">'黑山县'</span>,      <span class="hljs-number">210727</span>: <span class="hljs-string">'义县'</span>,      <span class="hljs-number">210781</span>: <span class="hljs-string">'凌海市'</span>,      <span class="hljs-number">210782</span>: <span class="hljs-string">'北镇市'</span>,      <span class="hljs-number">210793</span>: <span class="hljs-string">'经济技术开发区'</span>,      <span class="hljs-number">210802</span>: <span class="hljs-string">'站前区'</span>,      <span class="hljs-number">210803</span>: <span class="hljs-string">'西市区'</span>,      <span class="hljs-number">210804</span>: <span class="hljs-string">'鲅鱼圈区'</span>,      <span class="hljs-number">210811</span>: <span class="hljs-string">'老边区'</span>,      <span class="hljs-number">210881</span>: <span class="hljs-string">'盖州市'</span>,      <span class="hljs-number">210882</span>: <span class="hljs-string">'大石桥市'</span>,      <span class="hljs-number">210902</span>: <span class="hljs-string">'海州区'</span>,      <span class="hljs-number">210903</span>: <span class="hljs-string">'新邱区'</span>,      <span class="hljs-number">210904</span>: <span class="hljs-string">'太平区'</span>,      <span class="hljs-number">210905</span>: <span class="hljs-string">'清河门区'</span>,      <span class="hljs-number">210911</span>: <span class="hljs-string">'细河区'</span>,      <span class="hljs-number">210921</span>: <span class="hljs-string">'阜新蒙古族自治县'</span>,      <span class="hljs-number">210922</span>: <span class="hljs-string">'彰武县'</span>,      <span class="hljs-number">211002</span>: <span class="hljs-string">'白塔区'</span>,      <span class="hljs-number">211003</span>: <span class="hljs-string">'文圣区'</span>,      <span class="hljs-number">211004</span>: <span class="hljs-string">'宏伟区'</span>,      <span class="hljs-number">211005</span>: <span class="hljs-string">'弓长岭区'</span>,      <span class="hljs-number">211011</span>: <span class="hljs-string">'太子河区'</span>,      <span class="hljs-number">211021</span>: <span class="hljs-string">'辽阳县'</span>,      <span class="hljs-number">211081</span>: <span class="hljs-string">'灯塔市'</span>,      <span class="hljs-number">211102</span>: <span class="hljs-string">'双台子区'</span>,      <span class="hljs-number">211103</span>: <span class="hljs-string">'兴隆台区'</span>,      <span class="hljs-number">211104</span>: <span class="hljs-string">'大洼区'</span>,      <span class="hljs-number">211122</span>: <span class="hljs-string">'盘山县'</span>,      <span class="hljs-number">211202</span>: <span class="hljs-string">'银州区'</span>,      <span class="hljs-number">211204</span>: <span class="hljs-string">'清河区'</span>,      <span class="hljs-number">211221</span>: <span class="hljs-string">'铁岭县'</span>,      <span class="hljs-number">211223</span>: <span class="hljs-string">'西丰县'</span>,      <span class="hljs-number">211224</span>: <span class="hljs-string">'昌图县'</span>,      <span class="hljs-number">211281</span>: <span class="hljs-string">'调兵山市'</span>,      <span class="hljs-number">211282</span>: <span class="hljs-string">'开原市'</span>,      <span class="hljs-number">211302</span>: <span class="hljs-string">'双塔区'</span>,      <span class="hljs-number">211303</span>: <span class="hljs-string">'龙城区'</span>,      <span class="hljs-number">211321</span>: <span class="hljs-string">'朝阳县'</span>,      <span class="hljs-number">211322</span>: <span class="hljs-string">'建平县'</span>,      <span class="hljs-number">211324</span>: <span class="hljs-string">'喀喇沁左翼蒙古族自治县'</span>,      <span class="hljs-number">211381</span>: <span class="hljs-string">'北票市'</span>,      <span class="hljs-number">211382</span>: <span class="hljs-string">'凌源市'</span>,      <span class="hljs-number">211402</span>: <span class="hljs-string">'连山区'</span>,      <span class="hljs-number">211403</span>: <span class="hljs-string">'龙港区'</span>,      <span class="hljs-number">211404</span>: <span class="hljs-string">'南票区'</span>,      <span class="hljs-number">211421</span>: <span class="hljs-string">'绥中县'</span>,      <span class="hljs-number">211422</span>: <span class="hljs-string">'建昌县'</span>,      <span class="hljs-number">211481</span>: <span class="hljs-string">'兴城市'</span>,      <span class="hljs-number">220102</span>: <span class="hljs-string">'南关区'</span>,      <span class="hljs-number">220103</span>: <span class="hljs-string">'宽城区'</span>,      <span class="hljs-number">220104</span>: <span class="hljs-string">'朝阳区'</span>,      <span class="hljs-number">220105</span>: <span class="hljs-string">'二道区'</span>,      <span class="hljs-number">220106</span>: <span class="hljs-string">'绿园区'</span>,      <span class="hljs-number">220112</span>: <span class="hljs-string">'双阳区'</span>,      <span class="hljs-number">220113</span>: <span class="hljs-string">'九台区'</span>,      <span class="hljs-number">220122</span>: <span class="hljs-string">'农安县'</span>,      <span class="hljs-number">220182</span>: <span class="hljs-string">'榆树市'</span>,      <span class="hljs-number">220183</span>: <span class="hljs-string">'德惠市'</span>,      <span class="hljs-number">220192</span>: <span class="hljs-string">'经济技术开发区'</span>,      <span class="hljs-number">220202</span>: <span class="hljs-string">'昌邑区'</span>,      <span class="hljs-number">220203</span>: <span class="hljs-string">'龙潭区'</span>,      <span class="hljs-number">220204</span>: <span class="hljs-string">'船营区'</span>,      <span class="hljs-number">220211</span>: <span class="hljs-string">'丰满区'</span>,      <span class="hljs-number">220221</span>: <span class="hljs-string">'永吉县'</span>,      <span class="hljs-number">220281</span>: <span class="hljs-string">'蛟河市'</span>,      <span class="hljs-number">220282</span>: <span class="hljs-string">'桦甸市'</span>,      <span class="hljs-number">220283</span>: <span class="hljs-string">'舒兰市'</span>,      <span class="hljs-number">220284</span>: <span class="hljs-string">'磐石市'</span>,      <span class="hljs-number">220302</span>: <span class="hljs-string">'铁西区'</span>,      <span class="hljs-number">220303</span>: <span class="hljs-string">'铁东区'</span>,      <span class="hljs-number">220322</span>: <span class="hljs-string">'梨树县'</span>,      <span class="hljs-number">220323</span>: <span class="hljs-string">'伊通满族自治县'</span>,      <span class="hljs-number">220381</span>: <span class="hljs-string">'公主岭市'</span>,      <span class="hljs-number">220382</span>: <span class="hljs-string">'双辽市'</span>,      <span class="hljs-number">220402</span>: <span class="hljs-string">'龙山区'</span>,      <span class="hljs-number">220403</span>: <span class="hljs-string">'西安区'</span>,      <span class="hljs-number">220421</span>: <span class="hljs-string">'东丰县'</span>,      <span class="hljs-number">220422</span>: <span class="hljs-string">'东辽县'</span>,      <span class="hljs-number">220502</span>: <span class="hljs-string">'东昌区'</span>,      <span class="hljs-number">220503</span>: <span class="hljs-string">'二道江区'</span>,      <span class="hljs-number">220521</span>: <span class="hljs-string">'通化县'</span>,      <span class="hljs-number">220523</span>: <span class="hljs-string">'辉南县'</span>,      <span class="hljs-number">220524</span>: <span class="hljs-string">'柳河县'</span>,      <span class="hljs-number">220581</span>: <span class="hljs-string">'梅河口市'</span>,      <span class="hljs-number">220582</span>: <span class="hljs-string">'集安市'</span>,      <span class="hljs-number">220602</span>: <span class="hljs-string">'浑江区'</span>,      <span class="hljs-number">220605</span>: <span class="hljs-string">'江源区'</span>,      <span class="hljs-number">220621</span>: <span class="hljs-string">'抚松县'</span>,      <span class="hljs-number">220622</span>: <span class="hljs-string">'靖宇县'</span>,      <span class="hljs-number">220623</span>: <span class="hljs-string">'长白朝鲜族自治县'</span>,      <span class="hljs-number">220681</span>: <span class="hljs-string">'临江市'</span>,      <span class="hljs-number">220702</span>: <span class="hljs-string">'宁江区'</span>,      <span class="hljs-number">220721</span>: <span class="hljs-string">'前郭尔罗斯蒙古族自治县'</span>,      <span class="hljs-number">220722</span>: <span class="hljs-string">'长岭县'</span>,      <span class="hljs-number">220723</span>: <span class="hljs-string">'乾安县'</span>,      <span class="hljs-number">220781</span>: <span class="hljs-string">'扶余市'</span>,      <span class="hljs-number">220802</span>: <span class="hljs-string">'洮北区'</span>,      <span class="hljs-number">220821</span>: <span class="hljs-string">'镇赉县'</span>,      <span class="hljs-number">220822</span>: <span class="hljs-string">'通榆县'</span>,      <span class="hljs-number">220881</span>: <span class="hljs-string">'洮南市'</span>,      <span class="hljs-number">220882</span>: <span class="hljs-string">'大安市'</span>,      <span class="hljs-number">222401</span>: <span class="hljs-string">'延吉市'</span>,      <span class="hljs-number">222402</span>: <span class="hljs-string">'图们市'</span>,      <span class="hljs-number">222403</span>: <span class="hljs-string">'敦化市'</span>,      <span class="hljs-number">222404</span>: <span class="hljs-string">'珲春市'</span>,      <span class="hljs-number">222405</span>: <span class="hljs-string">'龙井市'</span>,      <span class="hljs-number">222406</span>: <span class="hljs-string">'和龙市'</span>,      <span class="hljs-number">222424</span>: <span class="hljs-string">'汪清县'</span>,      <span class="hljs-number">222426</span>: <span class="hljs-string">'安图县'</span>,      <span class="hljs-number">230102</span>: <span class="hljs-string">'道里区'</span>,      <span class="hljs-number">230103</span>: <span class="hljs-string">'南岗区'</span>,      <span class="hljs-number">230104</span>: <span class="hljs-string">'道外区'</span>,      <span class="hljs-number">230108</span>: <span class="hljs-string">'平房区'</span>,      <span class="hljs-number">230109</span>: <span class="hljs-string">'松北区'</span>,      <span class="hljs-number">230110</span>: <span class="hljs-string">'香坊区'</span>,      <span class="hljs-number">230111</span>: <span class="hljs-string">'呼兰区'</span>,      <span class="hljs-number">230112</span>: <span class="hljs-string">'阿城区'</span>,      <span class="hljs-number">230113</span>: <span class="hljs-string">'双城区'</span>,      <span class="hljs-number">230123</span>: <span class="hljs-string">'依兰县'</span>,      <span class="hljs-number">230124</span>: <span class="hljs-string">'方正县'</span>,      <span class="hljs-number">230125</span>: <span class="hljs-string">'宾县'</span>,      <span class="hljs-number">230126</span>: <span class="hljs-string">'巴彦县'</span>,      <span class="hljs-number">230127</span>: <span class="hljs-string">'木兰县'</span>,      <span class="hljs-number">230128</span>: <span class="hljs-string">'通河县'</span>,      <span class="hljs-number">230129</span>: <span class="hljs-string">'延寿县'</span>,      <span class="hljs-number">230183</span>: <span class="hljs-string">'尚志市'</span>,      <span class="hljs-number">230184</span>: <span class="hljs-string">'五常市'</span>,      <span class="hljs-number">230202</span>: <span class="hljs-string">'龙沙区'</span>,      <span class="hljs-number">230203</span>: <span class="hljs-string">'建华区'</span>,      <span class="hljs-number">230204</span>: <span class="hljs-string">'铁锋区'</span>,      <span class="hljs-number">230205</span>: <span class="hljs-string">'昂昂溪区'</span>,      <span class="hljs-number">230206</span>: <span class="hljs-string">'富拉尔基区'</span>,      <span class="hljs-number">230207</span>: <span class="hljs-string">'碾子山区'</span>,      <span class="hljs-number">230208</span>: <span class="hljs-string">'梅里斯达斡尔族区'</span>,      <span class="hljs-number">230221</span>: <span class="hljs-string">'龙江县'</span>,      <span class="hljs-number">230223</span>: <span class="hljs-string">'依安县'</span>,      <span class="hljs-number">230224</span>: <span class="hljs-string">'泰来县'</span>,      <span class="hljs-number">230225</span>: <span class="hljs-string">'甘南县'</span>,      <span class="hljs-number">230227</span>: <span class="hljs-string">'富裕县'</span>,      <span class="hljs-number">230229</span>: <span class="hljs-string">'克山县'</span>,      <span class="hljs-number">230230</span>: <span class="hljs-string">'克东县'</span>,      <span class="hljs-number">230231</span>: <span class="hljs-string">'拜泉县'</span>,      <span class="hljs-number">230281</span>: <span class="hljs-string">'讷河市'</span>,      <span class="hljs-number">230302</span>: <span class="hljs-string">'鸡冠区'</span>,      <span class="hljs-number">230303</span>: <span class="hljs-string">'恒山区'</span>,      <span class="hljs-number">230304</span>: <span class="hljs-string">'滴道区'</span>,      <span class="hljs-number">230305</span>: <span class="hljs-string">'梨树区'</span>,      <span class="hljs-number">230306</span>: <span class="hljs-string">'城子河区'</span>,      <span class="hljs-number">230307</span>: <span class="hljs-string">'麻山区'</span>,      <span class="hljs-number">230321</span>: <span class="hljs-string">'鸡东县'</span>,      <span class="hljs-number">230381</span>: <span class="hljs-string">'虎林市'</span>,      <span class="hljs-number">230382</span>: <span class="hljs-string">'密山市'</span>,      <span class="hljs-number">230402</span>: <span class="hljs-string">'向阳区'</span>,      <span class="hljs-number">230403</span>: <span class="hljs-string">'工农区'</span>,      <span class="hljs-number">230404</span>: <span class="hljs-string">'南山区'</span>,      <span class="hljs-number">230405</span>: <span class="hljs-string">'兴安区'</span>,      <span class="hljs-number">230406</span>: <span class="hljs-string">'东山区'</span>,      <span class="hljs-number">230407</span>: <span class="hljs-string">'兴山区'</span>,      <span class="hljs-number">230421</span>: <span class="hljs-string">'萝北县'</span>,      <span class="hljs-number">230422</span>: <span class="hljs-string">'绥滨县'</span>,      <span class="hljs-number">230502</span>: <span class="hljs-string">'尖山区'</span>,      <span class="hljs-number">230503</span>: <span class="hljs-string">'岭东区'</span>,      <span class="hljs-number">230505</span>: <span class="hljs-string">'四方台区'</span>,      <span class="hljs-number">230506</span>: <span class="hljs-string">'宝山区'</span>,      <span class="hljs-number">230521</span>: <span class="hljs-string">'集贤县'</span>,      <span class="hljs-number">230522</span>: <span class="hljs-string">'友谊县'</span>,      <span class="hljs-number">230523</span>: <span class="hljs-string">'宝清县'</span>,      <span class="hljs-number">230524</span>: <span class="hljs-string">'饶河县'</span>,      <span class="hljs-number">230602</span>: <span class="hljs-string">'萨尔图区'</span>,      <span class="hljs-number">230603</span>: <span class="hljs-string">'龙凤区'</span>,      <span class="hljs-number">230604</span>: <span class="hljs-string">'让胡路区'</span>,      <span class="hljs-number">230605</span>: <span class="hljs-string">'红岗区'</span>,      <span class="hljs-number">230606</span>: <span class="hljs-string">'大同区'</span>,      <span class="hljs-number">230621</span>: <span class="hljs-string">'肇州县'</span>,      <span class="hljs-number">230622</span>: <span class="hljs-string">'肇源县'</span>,      <span class="hljs-number">230623</span>: <span class="hljs-string">'林甸县'</span>,      <span class="hljs-number">230624</span>: <span class="hljs-string">'杜尔伯特蒙古族自治县'</span>,      <span class="hljs-number">230702</span>: <span class="hljs-string">'伊春区'</span>,      <span class="hljs-number">230703</span>: <span class="hljs-string">'南岔区'</span>,      <span class="hljs-number">230704</span>: <span class="hljs-string">'友好区'</span>,      <span class="hljs-number">230705</span>: <span class="hljs-string">'西林区'</span>,      <span class="hljs-number">230706</span>: <span class="hljs-string">'翠峦区'</span>,      <span class="hljs-number">230707</span>: <span class="hljs-string">'新青区'</span>,      <span class="hljs-number">230708</span>: <span class="hljs-string">'美溪区'</span>,      <span class="hljs-number">230709</span>: <span class="hljs-string">'金山屯区'</span>,      <span class="hljs-number">230710</span>: <span class="hljs-string">'五营区'</span>,      <span class="hljs-number">230711</span>: <span class="hljs-string">'乌马河区'</span>,      <span class="hljs-number">230712</span>: <span class="hljs-string">'汤旺河区'</span>,      <span class="hljs-number">230713</span>: <span class="hljs-string">'带岭区'</span>,      <span class="hljs-number">230714</span>: <span class="hljs-string">'乌伊岭区'</span>,      <span class="hljs-number">230715</span>: <span class="hljs-string">'红星区'</span>,      <span class="hljs-number">230716</span>: <span class="hljs-string">'上甘岭区'</span>,      <span class="hljs-number">230722</span>: <span class="hljs-string">'嘉荫县'</span>,      <span class="hljs-number">230781</span>: <span class="hljs-string">'铁力市'</span>,      <span class="hljs-number">230803</span>: <span class="hljs-string">'向阳区'</span>,      <span class="hljs-number">230804</span>: <span class="hljs-string">'前进区'</span>,      <span class="hljs-number">230805</span>: <span class="hljs-string">'东风区'</span>,      <span class="hljs-number">230811</span>: <span class="hljs-string">'郊区'</span>,      <span class="hljs-number">230822</span>: <span class="hljs-string">'桦南县'</span>,      <span class="hljs-number">230826</span>: <span class="hljs-string">'桦川县'</span>,      <span class="hljs-number">230828</span>: <span class="hljs-string">'汤原县'</span>,      <span class="hljs-number">230881</span>: <span class="hljs-string">'同江市'</span>,      <span class="hljs-number">230882</span>: <span class="hljs-string">'富锦市'</span>,      <span class="hljs-number">230883</span>: <span class="hljs-string">'抚远市'</span>,      <span class="hljs-number">230902</span>: <span class="hljs-string">'新兴区'</span>,      <span class="hljs-number">230903</span>: <span class="hljs-string">'桃山区'</span>,      <span class="hljs-number">230904</span>: <span class="hljs-string">'茄子河区'</span>,      <span class="hljs-number">230921</span>: <span class="hljs-string">'勃利县'</span>,      <span class="hljs-number">231002</span>: <span class="hljs-string">'东安区'</span>,      <span class="hljs-number">231003</span>: <span class="hljs-string">'阳明区'</span>,      <span class="hljs-number">231004</span>: <span class="hljs-string">'爱民区'</span>,      <span class="hljs-number">231005</span>: <span class="hljs-string">'西安区'</span>,      <span class="hljs-number">231025</span>: <span class="hljs-string">'林口县'</span>,      <span class="hljs-number">231081</span>: <span class="hljs-string">'绥芬河市'</span>,      <span class="hljs-number">231083</span>: <span class="hljs-string">'海林市'</span>,      <span class="hljs-number">231084</span>: <span class="hljs-string">'宁安市'</span>,      <span class="hljs-number">231085</span>: <span class="hljs-string">'穆棱市'</span>,      <span class="hljs-number">231086</span>: <span class="hljs-string">'东宁市'</span>,      <span class="hljs-number">231102</span>: <span class="hljs-string">'爱辉区'</span>,      <span class="hljs-number">231121</span>: <span class="hljs-string">'嫩江县'</span>,      <span class="hljs-number">231123</span>: <span class="hljs-string">'逊克县'</span>,      <span class="hljs-number">231124</span>: <span class="hljs-string">'孙吴县'</span>,      <span class="hljs-number">231181</span>: <span class="hljs-string">'北安市'</span>,      <span class="hljs-number">231182</span>: <span class="hljs-string">'五大连池市'</span>,      <span class="hljs-number">231202</span>: <span class="hljs-string">'北林区'</span>,      <span class="hljs-number">231221</span>: <span class="hljs-string">'望奎县'</span>,      <span class="hljs-number">231222</span>: <span class="hljs-string">'兰西县'</span>,      <span class="hljs-number">231223</span>: <span class="hljs-string">'青冈县'</span>,      <span class="hljs-number">231224</span>: <span class="hljs-string">'庆安县'</span>,      <span class="hljs-number">231225</span>: <span class="hljs-string">'明水县'</span>,      <span class="hljs-number">231226</span>: <span class="hljs-string">'绥棱县'</span>,      <span class="hljs-number">231281</span>: <span class="hljs-string">'安达市'</span>,      <span class="hljs-number">231282</span>: <span class="hljs-string">'肇东市'</span>,      <span class="hljs-number">231283</span>: <span class="hljs-string">'海伦市'</span>,      <span class="hljs-number">232701</span>: <span class="hljs-string">'漠河市'</span>,      <span class="hljs-number">232721</span>: <span class="hljs-string">'呼玛县'</span>,      <span class="hljs-number">232722</span>: <span class="hljs-string">'塔河县'</span>,      <span class="hljs-number">232790</span>: <span class="hljs-string">'松岭区'</span>,      <span class="hljs-number">232791</span>: <span class="hljs-string">'呼中区'</span>,      <span class="hljs-number">232792</span>: <span class="hljs-string">'加格达奇区'</span>,      <span class="hljs-number">232793</span>: <span class="hljs-string">'新林区'</span>,      <span class="hljs-number">310101</span>: <span class="hljs-string">'黄浦区'</span>,      <span class="hljs-number">310104</span>: <span class="hljs-string">'徐汇区'</span>,      <span class="hljs-number">310105</span>: <span class="hljs-string">'长宁区'</span>,      <span class="hljs-number">310106</span>: <span class="hljs-string">'静安区'</span>,      <span class="hljs-number">310107</span>: <span class="hljs-string">'普陀区'</span>,      <span class="hljs-number">310109</span>: <span class="hljs-string">'虹口区'</span>,      <span class="hljs-number">310110</span>: <span class="hljs-string">'杨浦区'</span>,      <span class="hljs-number">310112</span>: <span class="hljs-string">'闵行区'</span>,      <span class="hljs-number">310113</span>: <span class="hljs-string">'宝山区'</span>,      <span class="hljs-number">310114</span>: <span class="hljs-string">'嘉定区'</span>,      <span class="hljs-number">310115</span>: <span class="hljs-string">'浦东新区'</span>,      <span class="hljs-number">310116</span>: <span class="hljs-string">'金山区'</span>,      <span class="hljs-number">310117</span>: <span class="hljs-string">'松江区'</span>,      <span class="hljs-number">310118</span>: <span class="hljs-string">'青浦区'</span>,      <span class="hljs-number">310120</span>: <span class="hljs-string">'奉贤区'</span>,      <span class="hljs-number">310151</span>: <span class="hljs-string">'崇明区'</span>,      <span class="hljs-number">320102</span>: <span class="hljs-string">'玄武区'</span>,      <span class="hljs-number">320104</span>: <span class="hljs-string">'秦淮区'</span>,      <span class="hljs-number">320105</span>: <span class="hljs-string">'建邺区'</span>,      <span class="hljs-number">320106</span>: <span class="hljs-string">'鼓楼区'</span>,      <span class="hljs-number">320111</span>: <span class="hljs-string">'浦口区'</span>,      <span class="hljs-number">320113</span>: <span class="hljs-string">'栖霞区'</span>,      <span class="hljs-number">320114</span>: <span class="hljs-string">'雨花台区'</span>,      <span class="hljs-number">320115</span>: <span class="hljs-string">'江宁区'</span>,      <span class="hljs-number">320116</span>: <span class="hljs-string">'六合区'</span>,      <span class="hljs-number">320117</span>: <span class="hljs-string">'溧水区'</span>,      <span class="hljs-number">320118</span>: <span class="hljs-string">'高淳区'</span>,      <span class="hljs-number">320205</span>: <span class="hljs-string">'锡山区'</span>,      <span class="hljs-number">320206</span>: <span class="hljs-string">'惠山区'</span>,      <span class="hljs-number">320211</span>: <span class="hljs-string">'滨湖区'</span>,      <span class="hljs-number">320213</span>: <span class="hljs-string">'梁溪区'</span>,      <span class="hljs-number">320214</span>: <span class="hljs-string">'新吴区'</span>,      <span class="hljs-number">320281</span>: <span class="hljs-string">'江阴市'</span>,      <span class="hljs-number">320282</span>: <span class="hljs-string">'宜兴市'</span>,      <span class="hljs-number">320302</span>: <span class="hljs-string">'鼓楼区'</span>,      <span class="hljs-number">320303</span>: <span class="hljs-string">'云龙区'</span>,      <span class="hljs-number">320305</span>: <span class="hljs-string">'贾汪区'</span>,      <span class="hljs-number">320311</span>: <span class="hljs-string">'泉山区'</span>,      <span class="hljs-number">320312</span>: <span class="hljs-string">'铜山区'</span>,      <span class="hljs-number">320321</span>: <span class="hljs-string">'丰县'</span>,      <span class="hljs-number">320322</span>: <span class="hljs-string">'沛县'</span>,      <span class="hljs-number">320324</span>: <span class="hljs-string">'睢宁县'</span>,      <span class="hljs-number">320381</span>: <span class="hljs-string">'新沂市'</span>,      <span class="hljs-number">320382</span>: <span class="hljs-string">'邳州市'</span>,      <span class="hljs-number">320391</span>: <span class="hljs-string">'工业园区'</span>,      <span class="hljs-number">320402</span>: <span class="hljs-string">'天宁区'</span>,      <span class="hljs-number">320404</span>: <span class="hljs-string">'钟楼区'</span>,      <span class="hljs-number">320411</span>: <span class="hljs-string">'新北区'</span>,      <span class="hljs-number">320412</span>: <span class="hljs-string">'武进区'</span>,      <span class="hljs-number">320413</span>: <span class="hljs-string">'金坛区'</span>,      <span class="hljs-number">320481</span>: <span class="hljs-string">'溧阳市'</span>,      <span class="hljs-number">320505</span>: <span class="hljs-string">'虎丘区'</span>,      <span class="hljs-number">320506</span>: <span class="hljs-string">'吴中区'</span>,      <span class="hljs-number">320507</span>: <span class="hljs-string">'相城区'</span>,      <span class="hljs-number">320508</span>: <span class="hljs-string">'姑苏区'</span>,      <span class="hljs-number">320509</span>: <span class="hljs-string">'吴江区'</span>,      <span class="hljs-number">320581</span>: <span class="hljs-string">'常熟市'</span>,      <span class="hljs-number">320582</span>: <span class="hljs-string">'张家港市'</span>,      <span class="hljs-number">320583</span>: <span class="hljs-string">'昆山市'</span>,      <span class="hljs-number">320585</span>: <span class="hljs-string">'太仓市'</span>,      <span class="hljs-number">320590</span>: <span class="hljs-string">'工业园区'</span>,      <span class="hljs-number">320591</span>: <span class="hljs-string">'高新区'</span>,      <span class="hljs-number">320602</span>: <span class="hljs-string">'崇川区'</span>,      <span class="hljs-number">320611</span>: <span class="hljs-string">'港闸区'</span>,      <span class="hljs-number">320612</span>: <span class="hljs-string">'通州区'</span>,      <span class="hljs-number">320623</span>: <span class="hljs-string">'如东县'</span>,      <span class="hljs-number">320681</span>: <span class="hljs-string">'启东市'</span>,      <span class="hljs-number">320682</span>: <span class="hljs-string">'如皋市'</span>,      <span class="hljs-number">320684</span>: <span class="hljs-string">'海门市'</span>,      <span class="hljs-number">320685</span>: <span class="hljs-string">'海安市'</span>,      <span class="hljs-number">320691</span>: <span class="hljs-string">'高新区'</span>,      <span class="hljs-number">320703</span>: <span class="hljs-string">'连云区'</span>,      <span class="hljs-number">320706</span>: <span class="hljs-string">'海州区'</span>,      <span class="hljs-number">320707</span>: <span class="hljs-string">'赣榆区'</span>,      <span class="hljs-number">320722</span>: <span class="hljs-string">'东海县'</span>,      <span class="hljs-number">320723</span>: <span class="hljs-string">'灌云县'</span>,      <span class="hljs-number">320724</span>: <span class="hljs-string">'灌南县'</span>,      <span class="hljs-number">320803</span>: <span class="hljs-string">'淮安区'</span>,      <span class="hljs-number">320804</span>: <span class="hljs-string">'淮阴区'</span>,      <span class="hljs-number">320812</span>: <span class="hljs-string">'清江浦区'</span>,      <span class="hljs-number">320813</span>: <span class="hljs-string">'洪泽区'</span>,      <span class="hljs-number">320826</span>: <span class="hljs-string">'涟水县'</span>,      <span class="hljs-number">320830</span>: <span class="hljs-string">'盱眙县'</span>,      <span class="hljs-number">320831</span>: <span class="hljs-string">'金湖县'</span>,      <span class="hljs-number">320890</span>: <span class="hljs-string">'经济开发区'</span>,      <span class="hljs-number">320902</span>: <span class="hljs-string">'亭湖区'</span>,      <span class="hljs-number">320903</span>: <span class="hljs-string">'盐都区'</span>,      <span class="hljs-number">320904</span>: <span class="hljs-string">'大丰区'</span>,      <span class="hljs-number">320921</span>: <span class="hljs-string">'响水县'</span>,      <span class="hljs-number">320922</span>: <span class="hljs-string">'滨海县'</span>,      <span class="hljs-number">320923</span>: <span class="hljs-string">'阜宁县'</span>,      <span class="hljs-number">320924</span>: <span class="hljs-string">'射阳县'</span>,      <span class="hljs-number">320925</span>: <span class="hljs-string">'建湖县'</span>,      <span class="hljs-number">320981</span>: <span class="hljs-string">'东台市'</span>,      <span class="hljs-number">321002</span>: <span class="hljs-string">'广陵区'</span>,      <span class="hljs-number">321003</span>: <span class="hljs-string">'邗江区'</span>,      <span class="hljs-number">321012</span>: <span class="hljs-string">'江都区'</span>,      <span class="hljs-number">321023</span>: <span class="hljs-string">'宝应县'</span>,      <span class="hljs-number">321081</span>: <span class="hljs-string">'仪征市'</span>,      <span class="hljs-number">321084</span>: <span class="hljs-string">'高邮市'</span>,      <span class="hljs-number">321090</span>: <span class="hljs-string">'经济开发区'</span>,      <span class="hljs-number">321102</span>: <span class="hljs-string">'京口区'</span>,      <span class="hljs-number">321111</span>: <span class="hljs-string">'润州区'</span>,      <span class="hljs-number">321112</span>: <span class="hljs-string">'丹徒区'</span>,      <span class="hljs-number">321181</span>: <span class="hljs-string">'丹阳市'</span>,      <span class="hljs-number">321182</span>: <span class="hljs-string">'扬中市'</span>,      <span class="hljs-number">321183</span>: <span class="hljs-string">'句容市'</span>,      <span class="hljs-number">321202</span>: <span class="hljs-string">'海陵区'</span>,      <span class="hljs-number">321203</span>: <span class="hljs-string">'高港区'</span>,      <span class="hljs-number">321204</span>: <span class="hljs-string">'姜堰区'</span>,      <span class="hljs-number">321281</span>: <span class="hljs-string">'兴化市'</span>,      <span class="hljs-number">321282</span>: <span class="hljs-string">'靖江市'</span>,      <span class="hljs-number">321283</span>: <span class="hljs-string">'泰兴市'</span>,      <span class="hljs-number">321302</span>: <span class="hljs-string">'宿城区'</span>,      <span class="hljs-number">321311</span>: <span class="hljs-string">'宿豫区'</span>,      <span class="hljs-number">321322</span>: <span class="hljs-string">'沭阳县'</span>,      <span class="hljs-number">321323</span>: <span class="hljs-string">'泗阳县'</span>,      <span class="hljs-number">321324</span>: <span class="hljs-string">'泗洪县'</span>,      <span class="hljs-number">330102</span>: <span class="hljs-string">'上城区'</span>,      <span class="hljs-number">330103</span>: <span class="hljs-string">'下城区'</span>,      <span class="hljs-number">330104</span>: <span class="hljs-string">'江干区'</span>,      <span class="hljs-number">330105</span>: <span class="hljs-string">'拱墅区'</span>,      <span class="hljs-number">330106</span>: <span class="hljs-string">'西湖区'</span>,      <span class="hljs-number">330108</span>: <span class="hljs-string">'滨江区'</span>,      <span class="hljs-number">330109</span>: <span class="hljs-string">'萧山区'</span>,      <span class="hljs-number">330110</span>: <span class="hljs-string">'余杭区'</span>,      <span class="hljs-number">330111</span>: <span class="hljs-string">'富阳区'</span>,      <span class="hljs-number">330112</span>: <span class="hljs-string">'临安区'</span>,      <span class="hljs-number">330122</span>: <span class="hljs-string">'桐庐县'</span>,      <span class="hljs-number">330127</span>: <span class="hljs-string">'淳安县'</span>,      <span class="hljs-number">330182</span>: <span class="hljs-string">'建德市'</span>,      <span class="hljs-number">330203</span>: <span class="hljs-string">'海曙区'</span>,      <span class="hljs-number">330205</span>: <span class="hljs-string">'江北区'</span>,      <span class="hljs-number">330206</span>: <span class="hljs-string">'北仑区'</span>,      <span class="hljs-number">330211</span>: <span class="hljs-string">'镇海区'</span>,      <span class="hljs-number">330212</span>: <span class="hljs-string">'鄞州区'</span>,      <span class="hljs-number">330213</span>: <span class="hljs-string">'奉化区'</span>,      <span class="hljs-number">330225</span>: <span class="hljs-string">'象山县'</span>,      <span class="hljs-number">330226</span>: <span class="hljs-string">'宁海县'</span>,      <span class="hljs-number">330281</span>: <span class="hljs-string">'余姚市'</span>,      <span class="hljs-number">330282</span>: <span class="hljs-string">'慈溪市'</span>,      <span class="hljs-number">330302</span>: <span class="hljs-string">'鹿城区'</span>,      <span class="hljs-number">330303</span>: <span class="hljs-string">'龙湾区'</span>,      <span class="hljs-number">330304</span>: <span class="hljs-string">'瓯海区'</span>,      <span class="hljs-number">330305</span>: <span class="hljs-string">'洞头区'</span>,      <span class="hljs-number">330324</span>: <span class="hljs-string">'永嘉县'</span>,      <span class="hljs-number">330326</span>: <span class="hljs-string">'平阳县'</span>,      <span class="hljs-number">330327</span>: <span class="hljs-string">'苍南县'</span>,      <span class="hljs-number">330328</span>: <span class="hljs-string">'文成县'</span>,      <span class="hljs-number">330329</span>: <span class="hljs-string">'泰顺县'</span>,      <span class="hljs-number">330381</span>: <span class="hljs-string">'瑞安市'</span>,      <span class="hljs-number">330382</span>: <span class="hljs-string">'乐清市'</span>,      <span class="hljs-number">330402</span>: <span class="hljs-string">'南湖区'</span>,      <span class="hljs-number">330411</span>: <span class="hljs-string">'秀洲区'</span>,      <span class="hljs-number">330421</span>: <span class="hljs-string">'嘉善县'</span>,      <span class="hljs-number">330424</span>: <span class="hljs-string">'海盐县'</span>,      <span class="hljs-number">330481</span>: <span class="hljs-string">'海宁市'</span>,      <span class="hljs-number">330482</span>: <span class="hljs-string">'平湖市'</span>,      <span class="hljs-number">330483</span>: <span class="hljs-string">'桐乡市'</span>,      <span class="hljs-number">330502</span>: <span class="hljs-string">'吴兴区'</span>,      <span class="hljs-number">330503</span>: <span class="hljs-string">'南浔区'</span>,      <span class="hljs-number">330521</span>: <span class="hljs-string">'德清县'</span>,      <span class="hljs-number">330522</span>: <span class="hljs-string">'长兴县'</span>,      <span class="hljs-number">330523</span>: <span class="hljs-string">'安吉县'</span>,      <span class="hljs-number">330602</span>: <span class="hljs-string">'越城区'</span>,      <span class="hljs-number">330603</span>: <span class="hljs-string">'柯桥区'</span>,      <span class="hljs-number">330604</span>: <span class="hljs-string">'上虞区'</span>,      <span class="hljs-number">330624</span>: <span class="hljs-string">'新昌县'</span>,      <span class="hljs-number">330681</span>: <span class="hljs-string">'诸暨市'</span>,      <span class="hljs-number">330683</span>: <span class="hljs-string">'嵊州市'</span>,      <span class="hljs-number">330702</span>: <span class="hljs-string">'婺城区'</span>,      <span class="hljs-number">330703</span>: <span class="hljs-string">'金东区'</span>,      <span class="hljs-number">330723</span>: <span class="hljs-string">'武义县'</span>,      <span class="hljs-number">330726</span>: <span class="hljs-string">'浦江县'</span>,      <span class="hljs-number">330727</span>: <span class="hljs-string">'磐安县'</span>,      <span class="hljs-number">330781</span>: <span class="hljs-string">'兰溪市'</span>,      <span class="hljs-number">330782</span>: <span class="hljs-string">'义乌市'</span>,      <span class="hljs-number">330783</span>: <span class="hljs-string">'东阳市'</span>,      <span class="hljs-number">330784</span>: <span class="hljs-string">'永康市'</span>,      <span class="hljs-number">330802</span>: <span class="hljs-string">'柯城区'</span>,      <span class="hljs-number">330803</span>: <span class="hljs-string">'衢江区'</span>,      <span class="hljs-number">330822</span>: <span class="hljs-string">'常山县'</span>,      <span class="hljs-number">330824</span>: <span class="hljs-string">'开化县'</span>,      <span class="hljs-number">330825</span>: <span class="hljs-string">'龙游县'</span>,      <span class="hljs-number">330881</span>: <span class="hljs-string">'江山市'</span>,      <span class="hljs-number">330902</span>: <span class="hljs-string">'定海区'</span>,      <span class="hljs-number">330903</span>: <span class="hljs-string">'普陀区'</span>,      <span class="hljs-number">330921</span>: <span class="hljs-string">'岱山县'</span>,      <span class="hljs-number">330922</span>: <span class="hljs-string">'嵊泗县'</span>,      <span class="hljs-number">331002</span>: <span class="hljs-string">'椒江区'</span>,      <span class="hljs-number">331003</span>: <span class="hljs-string">'黄岩区'</span>,      <span class="hljs-number">331004</span>: <span class="hljs-string">'路桥区'</span>,      <span class="hljs-number">331022</span>: <span class="hljs-string">'三门县'</span>,      <span class="hljs-number">331023</span>: <span class="hljs-string">'天台县'</span>,      <span class="hljs-number">331024</span>: <span class="hljs-string">'仙居县'</span>,      <span class="hljs-number">331081</span>: <span class="hljs-string">'温岭市'</span>,      <span class="hljs-number">331082</span>: <span class="hljs-string">'临海市'</span>,      <span class="hljs-number">331083</span>: <span class="hljs-string">'玉环市'</span>,      <span class="hljs-number">331102</span>: <span class="hljs-string">'莲都区'</span>,      <span class="hljs-number">331121</span>: <span class="hljs-string">'青田县'</span>,      <span class="hljs-number">331122</span>: <span class="hljs-string">'缙云县'</span>,      <span class="hljs-number">331123</span>: <span class="hljs-string">'遂昌县'</span>,      <span class="hljs-number">331124</span>: <span class="hljs-string">'松阳县'</span>,      <span class="hljs-number">331125</span>: <span class="hljs-string">'云和县'</span>,      <span class="hljs-number">331126</span>: <span class="hljs-string">'庆元县'</span>,      <span class="hljs-number">331127</span>: <span class="hljs-string">'景宁畲族自治县'</span>,      <span class="hljs-number">331181</span>: <span class="hljs-string">'龙泉市'</span>,      <span class="hljs-number">340102</span>: <span class="hljs-string">'瑶海区'</span>,      <span class="hljs-number">340103</span>: <span class="hljs-string">'庐阳区'</span>,      <span class="hljs-number">340104</span>: <span class="hljs-string">'蜀山区'</span>,      <span class="hljs-number">340111</span>: <span class="hljs-string">'包河区'</span>,      <span class="hljs-number">340121</span>: <span class="hljs-string">'长丰县'</span>,      <span class="hljs-number">340122</span>: <span class="hljs-string">'肥东县'</span>,      <span class="hljs-number">340123</span>: <span class="hljs-string">'肥西县'</span>,      <span class="hljs-number">340124</span>: <span class="hljs-string">'庐江县'</span>,      <span class="hljs-number">340181</span>: <span class="hljs-string">'巢湖市'</span>,      <span class="hljs-number">340190</span>: <span class="hljs-string">'高新技术开发区'</span>,      <span class="hljs-number">340191</span>: <span class="hljs-string">'经济技术开发区'</span>,      <span class="hljs-number">340202</span>: <span class="hljs-string">'镜湖区'</span>,      <span class="hljs-number">340203</span>: <span class="hljs-string">'弋江区'</span>,      <span class="hljs-number">340207</span>: <span class="hljs-string">'鸠江区'</span>,      <span class="hljs-number">340208</span>: <span class="hljs-string">'三山区'</span>,      <span class="hljs-number">340221</span>: <span class="hljs-string">'芜湖县'</span>,      <span class="hljs-number">340222</span>: <span class="hljs-string">'繁昌县'</span>,      <span class="hljs-number">340223</span>: <span class="hljs-string">'南陵县'</span>,      <span class="hljs-number">340225</span>: <span class="hljs-string">'无为县'</span>,      <span class="hljs-number">340302</span>: <span class="hljs-string">'龙子湖区'</span>,      <span class="hljs-number">340303</span>: <span class="hljs-string">'蚌山区'</span>,      <span class="hljs-number">340304</span>: <span class="hljs-string">'禹会区'</span>,      <span class="hljs-number">340311</span>: <span class="hljs-string">'淮上区'</span>,      <span class="hljs-number">340321</span>: <span class="hljs-string">'怀远县'</span>,      <span class="hljs-number">340322</span>: <span class="hljs-string">'五河县'</span>,      <span class="hljs-number">340323</span>: <span class="hljs-string">'固镇县'</span>,      <span class="hljs-number">340402</span>: <span class="hljs-string">'大通区'</span>,      <span class="hljs-number">340403</span>: <span class="hljs-string">'田家庵区'</span>,      <span class="hljs-number">340404</span>: <span class="hljs-string">'谢家集区'</span>,      <span class="hljs-number">340405</span>: <span class="hljs-string">'八公山区'</span>,      <span class="hljs-number">340406</span>: <span class="hljs-string">'潘集区'</span>,      <span class="hljs-number">340421</span>: <span class="hljs-string">'凤台县'</span>,      <span class="hljs-number">340422</span>: <span class="hljs-string">'寿县'</span>,      <span class="hljs-number">340503</span>: <span class="hljs-string">'花山区'</span>,      <span class="hljs-number">340504</span>: <span class="hljs-string">'雨山区'</span>,      <span class="hljs-number">340506</span>: <span class="hljs-string">'博望区'</span>,      <span class="hljs-number">340521</span>: <span class="hljs-string">'当涂县'</span>,      <span class="hljs-number">340522</span>: <span class="hljs-string">'含山县'</span>,      <span class="hljs-number">340523</span>: <span class="hljs-string">'和县'</span>,      <span class="hljs-number">340602</span>: <span class="hljs-string">'杜集区'</span>,      <span class="hljs-number">340603</span>: <span class="hljs-string">'相山区'</span>,      <span class="hljs-number">340604</span>: <span class="hljs-string">'烈山区'</span>,      <span class="hljs-number">340621</span>: <span class="hljs-string">'濉溪县'</span>,      <span class="hljs-number">340705</span>: <span class="hljs-string">'铜官区'</span>,      <span class="hljs-number">340706</span>: <span class="hljs-string">'义安区'</span>,      <span class="hljs-number">340711</span>: <span class="hljs-string">'郊区'</span>,      <span class="hljs-number">340722</span>: <span class="hljs-string">'枞阳县'</span>,      <span class="hljs-number">340802</span>: <span class="hljs-string">'迎江区'</span>,      <span class="hljs-number">340803</span>: <span class="hljs-string">'大观区'</span>,      <span class="hljs-number">340811</span>: <span class="hljs-string">'宜秀区'</span>,      <span class="hljs-number">340822</span>: <span class="hljs-string">'怀宁县'</span>,      <span class="hljs-number">340824</span>: <span class="hljs-string">'潜山县'</span>,      <span class="hljs-number">340825</span>: <span class="hljs-string">'太湖县'</span>,      <span class="hljs-number">340826</span>: <span class="hljs-string">'宿松县'</span>,      <span class="hljs-number">340827</span>: <span class="hljs-string">'望江县'</span>,      <span class="hljs-number">340828</span>: <span class="hljs-string">'岳西县'</span>,      <span class="hljs-number">340881</span>: <span class="hljs-string">'桐城市'</span>,      <span class="hljs-number">341002</span>: <span class="hljs-string">'屯溪区'</span>,      <span class="hljs-number">341003</span>: <span class="hljs-string">'黄山区'</span>,      <span class="hljs-number">341004</span>: <span class="hljs-string">'徽州区'</span>,      <span class="hljs-number">341021</span>: <span class="hljs-string">'歙县'</span>,      <span class="hljs-number">341022</span>: <span class="hljs-string">'休宁县'</span>,      <span class="hljs-number">341023</span>: <span class="hljs-string">'黟县'</span>,      <span class="hljs-number">341024</span>: <span class="hljs-string">'祁门县'</span>,      <span class="hljs-number">341102</span>: <span class="hljs-string">'琅琊区'</span>,      <span class="hljs-number">341103</span>: <span class="hljs-string">'南谯区'</span>,      <span class="hljs-number">341122</span>: <span class="hljs-string">'来安县'</span>,      <span class="hljs-number">341124</span>: <span class="hljs-string">'全椒县'</span>,      <span class="hljs-number">341125</span>: <span class="hljs-string">'定远县'</span>,      <span class="hljs-number">341126</span>: <span class="hljs-string">'凤阳县'</span>,      <span class="hljs-number">341181</span>: <span class="hljs-string">'天长市'</span>,      <span class="hljs-number">341182</span>: <span class="hljs-string">'明光市'</span>,      <span class="hljs-number">341202</span>: <span class="hljs-string">'颍州区'</span>,      <span class="hljs-number">341203</span>: <span class="hljs-string">'颍东区'</span>,      <span class="hljs-number">341204</span>: <span class="hljs-string">'颍泉区'</span>,      <span class="hljs-number">341221</span>: <span class="hljs-string">'临泉县'</span>,      <span class="hljs-number">341222</span>: <span class="hljs-string">'太和县'</span>,      <span class="hljs-number">341225</span>: <span class="hljs-string">'阜南县'</span>,      <span class="hljs-number">341226</span>: <span class="hljs-string">'颍上县'</span>,      <span class="hljs-number">341282</span>: <span class="hljs-string">'界首市'</span>,      <span class="hljs-number">341302</span>: <span class="hljs-string">'埇桥区'</span>,      <span class="hljs-number">341321</span>: <span class="hljs-string">'砀山县'</span>,      <span class="hljs-number">341322</span>: <span class="hljs-string">'萧县'</span>,      <span class="hljs-number">341323</span>: <span class="hljs-string">'灵璧县'</span>,      <span class="hljs-number">341324</span>: <span class="hljs-string">'泗县'</span>,      <span class="hljs-number">341390</span>: <span class="hljs-string">'经济开发区'</span>,      <span class="hljs-number">341502</span>: <span class="hljs-string">'金安区'</span>,      <span class="hljs-number">341503</span>: <span class="hljs-string">'裕安区'</span>,      <span class="hljs-number">341504</span>: <span class="hljs-string">'叶集区'</span>,      <span class="hljs-number">341522</span>: <span class="hljs-string">'霍邱县'</span>,      <span class="hljs-number">341523</span>: <span class="hljs-string">'舒城县'</span>,      <span class="hljs-number">341524</span>: <span class="hljs-string">'金寨县'</span>,      <span class="hljs-number">341525</span>: <span class="hljs-string">'霍山县'</span>,      <span class="hljs-number">341602</span>: <span class="hljs-string">'谯城区'</span>,      <span class="hljs-number">341621</span>: <span class="hljs-string">'涡阳县'</span>,      <span class="hljs-number">341622</span>: <span class="hljs-string">'蒙城县'</span>,      <span class="hljs-number">341623</span>: <span class="hljs-string">'利辛县'</span>,      <span class="hljs-number">341702</span>: <span class="hljs-string">'贵池区'</span>,      <span class="hljs-number">341721</span>: <span class="hljs-string">'东至县'</span>,      <span class="hljs-number">341722</span>: <span class="hljs-string">'石台县'</span>,      <span class="hljs-number">341723</span>: <span class="hljs-string">'青阳县'</span>,      <span class="hljs-number">341802</span>: <span class="hljs-string">'宣州区'</span>,      <span class="hljs-number">341821</span>: <span class="hljs-string">'郎溪县'</span>,      <span class="hljs-number">341822</span>: <span class="hljs-string">'广德县'</span>,      <span class="hljs-number">341823</span>: <span class="hljs-string">'泾县'</span>,      <span class="hljs-number">341824</span>: <span class="hljs-string">'绩溪县'</span>,      <span class="hljs-number">341825</span>: <span class="hljs-string">'旌德县'</span>,      <span class="hljs-number">341881</span>: <span class="hljs-string">'宁国市'</span>,      <span class="hljs-number">350102</span>: <span class="hljs-string">'鼓楼区'</span>,      <span class="hljs-number">350103</span>: <span class="hljs-string">'台江区'</span>,      <span class="hljs-number">350104</span>: <span class="hljs-string">'仓山区'</span>,      <span class="hljs-number">350105</span>: <span class="hljs-string">'马尾区'</span>,      <span class="hljs-number">350111</span>: <span class="hljs-string">'晋安区'</span>,      <span class="hljs-number">350112</span>: <span class="hljs-string">'长乐区'</span>,      <span class="hljs-number">350121</span>: <span class="hljs-string">'闽侯县'</span>,      <span class="hljs-number">350122</span>: <span class="hljs-string">'连江县'</span>,      <span class="hljs-number">350123</span>: <span class="hljs-string">'罗源县'</span>,      <span class="hljs-number">350124</span>: <span class="hljs-string">'闽清县'</span>,      <span class="hljs-number">350125</span>: <span class="hljs-string">'永泰县'</span>,      <span class="hljs-number">350128</span>: <span class="hljs-string">'平潭县'</span>,      <span class="hljs-number">350181</span>: <span class="hljs-string">'福清市'</span>,      <span class="hljs-number">350203</span>: <span class="hljs-string">'思明区'</span>,      <span class="hljs-number">350205</span>: <span class="hljs-string">'海沧区'</span>,      <span class="hljs-number">350206</span>: <span class="hljs-string">'湖里区'</span>,      <span class="hljs-number">350211</span>: <span class="hljs-string">'集美区'</span>,      <span class="hljs-number">350212</span>: <span class="hljs-string">'同安区'</span>,      <span class="hljs-number">350213</span>: <span class="hljs-string">'翔安区'</span>,      <span class="hljs-number">350302</span>: <span class="hljs-string">'城厢区'</span>,      <span class="hljs-number">350303</span>: <span class="hljs-string">'涵江区'</span>,      <span class="hljs-number">350304</span>: <span class="hljs-string">'荔城区'</span>,      <span class="hljs-number">350305</span>: <span class="hljs-string">'秀屿区'</span>,      <span class="hljs-number">350322</span>: <span class="hljs-string">'仙游县'</span>,      <span class="hljs-number">350402</span>: <span class="hljs-string">'梅列区'</span>,      <span class="hljs-number">350403</span>: <span class="hljs-string">'三元区'</span>,      <span class="hljs-number">350421</span>: <span class="hljs-string">'明溪县'</span>,      <span class="hljs-number">350423</span>: <span class="hljs-string">'清流县'</span>,      <span class="hljs-number">350424</span>: <span class="hljs-string">'宁化县'</span>,      <span class="hljs-number">350425</span>: <span class="hljs-string">'大田县'</span>,      <span class="hljs-number">350426</span>: <span class="hljs-string">'尤溪县'</span>,      <span class="hljs-number">350427</span>: <span class="hljs-string">'沙县'</span>,      <span class="hljs-number">350428</span>: <span class="hljs-string">'将乐县'</span>,      <span class="hljs-number">350429</span>: <span class="hljs-string">'泰宁县'</span>,      <span class="hljs-number">350430</span>: <span class="hljs-string">'建宁县'</span>,      <span class="hljs-number">350481</span>: <span class="hljs-string">'永安市'</span>,      <span class="hljs-number">350502</span>: <span class="hljs-string">'鲤城区'</span>,      <span class="hljs-number">350503</span>: <span class="hljs-string">'丰泽区'</span>,      <span class="hljs-number">350504</span>: <span class="hljs-string">'洛江区'</span>,      <span class="hljs-number">350505</span>: <span class="hljs-string">'泉港区'</span>,      <span class="hljs-number">350521</span>: <span class="hljs-string">'惠安县'</span>,      <span class="hljs-number">350524</span>: <span class="hljs-string">'安溪县'</span>,      <span class="hljs-number">350525</span>: <span class="hljs-string">'永春县'</span>,      <span class="hljs-number">350526</span>: <span class="hljs-string">'德化县'</span>,      <span class="hljs-number">350527</span>: <span class="hljs-string">'金门县'</span>,      <span class="hljs-number">350581</span>: <span class="hljs-string">'石狮市'</span>,      <span class="hljs-number">350582</span>: <span class="hljs-string">'晋江市'</span>,      <span class="hljs-number">350583</span>: <span class="hljs-string">'南安市'</span>,      <span class="hljs-number">350602</span>: <span class="hljs-string">'芗城区'</span>,      <span class="hljs-number">350603</span>: <span class="hljs-string">'龙文区'</span>,      <span class="hljs-number">350622</span>: <span class="hljs-string">'云霄县'</span>,      <span class="hljs-number">350623</span>: <span class="hljs-string">'漳浦县'</span>,      <span class="hljs-number">350624</span>: <span class="hljs-string">'诏安县'</span>,      <span class="hljs-number">350625</span>: <span class="hljs-string">'长泰县'</span>,      <span class="hljs-number">350626</span>: <span class="hljs-string">'东山县'</span>,      <span class="hljs-number">350627</span>: <span class="hljs-string">'南靖县'</span>,      <span class="hljs-number">350628</span>: <span class="hljs-string">'平和县'</span>,      <span class="hljs-number">350629</span>: <span class="hljs-string">'华安县'</span>,      <span class="hljs-number">350681</span>: <span class="hljs-string">'龙海市'</span>,      <span class="hljs-number">350702</span>: <span class="hljs-string">'延平区'</span>,      <span class="hljs-number">350703</span>: <span class="hljs-string">'建阳区'</span>,      <span class="hljs-number">350721</span>: <span class="hljs-string">'顺昌县'</span>,      <span class="hljs-number">350722</span>: <span class="hljs-string">'浦城县'</span>,      <span class="hljs-number">350723</span>: <span class="hljs-string">'光泽县'</span>,      <span class="hljs-number">350724</span>: <span class="hljs-string">'松溪县'</span>,      <span class="hljs-number">350725</span>: <span class="hljs-string">'政和县'</span>,      <span class="hljs-number">350781</span>: <span class="hljs-string">'邵武市'</span>,      <span class="hljs-number">350782</span>: <span class="hljs-string">'武夷山市'</span>,      <span class="hljs-number">350783</span>: <span class="hljs-string">'建瓯市'</span>,      <span class="hljs-number">350802</span>: <span class="hljs-string">'新罗区'</span>,      <span class="hljs-number">350803</span>: <span class="hljs-string">'永定区'</span>,      <span class="hljs-number">350821</span>: <span class="hljs-string">'长汀县'</span>,      <span class="hljs-number">350823</span>: <span class="hljs-string">'上杭县'</span>,      <span class="hljs-number">350824</span>: <span class="hljs-string">'武平县'</span>,      <span class="hljs-number">350825</span>: <span class="hljs-string">'连城县'</span>,      <span class="hljs-number">350881</span>: <span class="hljs-string">'漳平市'</span>,      <span class="hljs-number">350902</span>: <span class="hljs-string">'蕉城区'</span>,      <span class="hljs-number">350921</span>: <span class="hljs-string">'霞浦县'</span>,      <span class="hljs-number">350922</span>: <span class="hljs-string">'古田县'</span>,      <span class="hljs-number">350923</span>: <span class="hljs-string">'屏南县'</span>,      <span class="hljs-number">350924</span>: <span class="hljs-string">'寿宁县'</span>,      <span class="hljs-number">350925</span>: <span class="hljs-string">'周宁县'</span>,      <span class="hljs-number">350926</span>: <span class="hljs-string">'柘荣县'</span>,      <span class="hljs-number">350981</span>: <span class="hljs-string">'福安市'</span>,      <span class="hljs-number">350982</span>: <span class="hljs-string">'福鼎市'</span>,      <span class="hljs-number">360102</span>: <span class="hljs-string">'东湖区'</span>,      <span class="hljs-number">360103</span>: <span class="hljs-string">'西湖区'</span>,      <span class="hljs-number">360104</span>: <span class="hljs-string">'青云谱区'</span>,      <span class="hljs-number">360105</span>: <span class="hljs-string">'湾里区'</span>,      <span class="hljs-number">360111</span>: <span class="hljs-string">'青山湖区'</span>,      <span class="hljs-number">360112</span>: <span class="hljs-string">'新建区'</span>,      <span class="hljs-number">360121</span>: <span class="hljs-string">'南昌县'</span>,      <span class="hljs-number">360123</span>: <span class="hljs-string">'安义县'</span>,      <span class="hljs-number">360124</span>: <span class="hljs-string">'进贤县'</span>,      <span class="hljs-number">360190</span>: <span class="hljs-string">'经济技术开发区'</span>,      <span class="hljs-number">360192</span>: <span class="hljs-string">'高新区'</span>,      <span class="hljs-number">360202</span>: <span class="hljs-string">'昌江区'</span>,      <span class="hljs-number">360203</span>: <span class="hljs-string">'珠山区'</span>,      <span class="hljs-number">360222</span>: <span class="hljs-string">'浮梁县'</span>,      <span class="hljs-number">360281</span>: <span class="hljs-string">'乐平市'</span>,      <span class="hljs-number">360302</span>: <span class="hljs-string">'安源区'</span>,      <span class="hljs-number">360313</span>: <span class="hljs-string">'湘东区'</span>,      <span class="hljs-number">360321</span>: <span class="hljs-string">'莲花县'</span>,      <span class="hljs-number">360322</span>: <span class="hljs-string">'上栗县'</span>,      <span class="hljs-number">360323</span>: <span class="hljs-string">'芦溪县'</span>,      <span class="hljs-number">360402</span>: <span class="hljs-string">'濂溪区'</span>,      <span class="hljs-number">360403</span>: <span class="hljs-string">'浔阳区'</span>,      <span class="hljs-number">360404</span>: <span class="hljs-string">'柴桑区'</span>,      <span class="hljs-number">360423</span>: <span class="hljs-string">'武宁县'</span>,      <span class="hljs-number">360424</span>: <span class="hljs-string">'修水县'</span>,      <span class="hljs-number">360425</span>: <span class="hljs-string">'永修县'</span>,      <span class="hljs-number">360426</span>: <span class="hljs-string">'德安县'</span>,      <span class="hljs-number">360428</span>: <span class="hljs-string">'都昌县'</span>,      <span class="hljs-number">360429</span>: <span class="hljs-string">'湖口县'</span>,      <span class="hljs-number">360430</span>: <span class="hljs-string">'彭泽县'</span>,      <span class="hljs-number">360481</span>: <span class="hljs-string">'瑞昌市'</span>,      <span class="hljs-number">360482</span>: <span class="hljs-string">'共青城市'</span>,      <span class="hljs-number">360483</span>: <span class="hljs-string">'庐山市'</span>,      <span class="hljs-number">360490</span>: <span class="hljs-string">'经济技术开发区'</span>,      <span class="hljs-number">360502</span>: <span class="hljs-string">'渝水区'</span>,      <span class="hljs-number">360521</span>: <span class="hljs-string">'分宜县'</span>,      <span class="hljs-number">360602</span>: <span class="hljs-string">'月湖区'</span>,      <span class="hljs-number">360603</span>: <span class="hljs-string">'余江区'</span>,      <span class="hljs-number">360681</span>: <span class="hljs-string">'贵溪市'</span>,      <span class="hljs-number">360702</span>: <span class="hljs-string">'章贡区'</span>,      <span class="hljs-number">360703</span>: <span class="hljs-string">'南康区'</span>,      <span class="hljs-number">360704</span>: <span class="hljs-string">'赣县区'</span>,      <span class="hljs-number">360722</span>: <span class="hljs-string">'信丰县'</span>,      <span class="hljs-number">360723</span>: <span class="hljs-string">'大余县'</span>,      <span class="hljs-number">360724</span>: <span class="hljs-string">'上犹县'</span>,      <span class="hljs-number">360725</span>: <span class="hljs-string">'崇义县'</span>,      <span class="hljs-number">360726</span>: <span class="hljs-string">'安远县'</span>,      <span class="hljs-number">360727</span>: <span class="hljs-string">'龙南县'</span>,      <span class="hljs-number">360728</span>: <span class="hljs-string">'定南县'</span>,      <span class="hljs-number">360729</span>: <span class="hljs-string">'全南县'</span>,      <span class="hljs-number">360730</span>: <span class="hljs-string">'宁都县'</span>,      <span class="hljs-number">360731</span>: <span class="hljs-string">'于都县'</span>,      <span class="hljs-number">360732</span>: <span class="hljs-string">'兴国县'</span>,      <span class="hljs-number">360733</span>: <span class="hljs-string">'会昌县'</span>,      <span class="hljs-number">360734</span>: <span class="hljs-string">'寻乌县'</span>,      <span class="hljs-number">360735</span>: <span class="hljs-string">'石城县'</span>,      <span class="hljs-number">360781</span>: <span class="hljs-string">'瑞金市'</span>,      <span class="hljs-number">360802</span>: <span class="hljs-string">'吉州区'</span>,      <span class="hljs-number">360803</span>: <span class="hljs-string">'青原区'</span>,      <span class="hljs-number">360821</span>: <span class="hljs-string">'吉安县'</span>,      <span class="hljs-number">360822</span>: <span class="hljs-string">'吉水县'</span>,      <span class="hljs-number">360823</span>: <span class="hljs-string">'峡江县'</span>,      <span class="hljs-number">360824</span>: <span class="hljs-string">'新干县'</span>,      <span class="hljs-number">360825</span>: <span class="hljs-string">'永丰县'</span>,      <span class="hljs-number">360826</span>: <span class="hljs-string">'泰和县'</span>,      <span class="hljs-number">360827</span>: <span class="hljs-string">'遂川县'</span>,      <span class="hljs-number">360828</span>: <span class="hljs-string">'万安县'</span>,      <span class="hljs-number">360829</span>: <span class="hljs-string">'安福县'</span>,      <span class="hljs-number">360830</span>: <span class="hljs-string">'永新县'</span>,      <span class="hljs-number">360881</span>: <span class="hljs-string">'井冈山市'</span>,      <span class="hljs-number">360902</span>: <span class="hljs-string">'袁州区'</span>,      <span class="hljs-number">360921</span>: <span class="hljs-string">'奉新县'</span>,      <span class="hljs-number">360922</span>: <span class="hljs-string">'万载县'</span>,      <span class="hljs-number">360923</span>: <span class="hljs-string">'上高县'</span>,      <span class="hljs-number">360924</span>: <span class="hljs-string">'宜丰县'</span>,      <span class="hljs-number">360925</span>: <span class="hljs-string">'靖安县'</span>,      <span class="hljs-number">360926</span>: <span class="hljs-string">'铜鼓县'</span>,      <span class="hljs-number">360981</span>: <span class="hljs-string">'丰城市'</span>,      <span class="hljs-number">360982</span>: <span class="hljs-string">'樟树市'</span>,      <span class="hljs-number">360983</span>: <span class="hljs-string">'高安市'</span>,      <span class="hljs-number">361002</span>: <span class="hljs-string">'临川区'</span>,      <span class="hljs-number">361003</span>: <span class="hljs-string">'东乡区'</span>,      <span class="hljs-number">361021</span>: <span class="hljs-string">'南城县'</span>,      <span class="hljs-number">361022</span>: <span class="hljs-string">'黎川县'</span>,      <span class="hljs-number">361023</span>: <span class="hljs-string">'南丰县'</span>,      <span class="hljs-number">361024</span>: <span class="hljs-string">'崇仁县'</span>,      <span class="hljs-number">361025</span>: <span class="hljs-string">'乐安县'</span>,      <span class="hljs-number">361026</span>: <span class="hljs-string">'宜黄县'</span>,      <span class="hljs-number">361027</span>: <span class="hljs-string">'金溪县'</span>,      <span class="hljs-number">361028</span>: <span class="hljs-string">'资溪县'</span>,      <span class="hljs-number">361030</span>: <span class="hljs-string">'广昌县'</span>,      <span class="hljs-number">361102</span>: <span class="hljs-string">'信州区'</span>,      <span class="hljs-number">361103</span>: <span class="hljs-string">'广丰区'</span>,      <span class="hljs-number">361121</span>: <span class="hljs-string">'上饶县'</span>,      <span class="hljs-number">361123</span>: <span class="hljs-string">'玉山县'</span>,      <span class="hljs-number">361124</span>: <span class="hljs-string">'铅山县'</span>,      <span class="hljs-number">361125</span>: <span class="hljs-string">'横峰县'</span>,      <span class="hljs-number">361126</span>: <span class="hljs-string">'弋阳县'</span>,      <span class="hljs-number">361127</span>: <span class="hljs-string">'余干县'</span>,      <span class="hljs-number">361128</span>: <span class="hljs-string">'鄱阳县'</span>,      <span class="hljs-number">361129</span>: <span class="hljs-string">'万年县'</span>,      <span class="hljs-number">361130</span>: <span class="hljs-string">'婺源县'</span>,      <span class="hljs-number">361181</span>: <span class="hljs-string">'德兴市'</span>,      <span class="hljs-number">370102</span>: <span class="hljs-string">'历下区'</span>,      <span class="hljs-number">370103</span>: <span class="hljs-string">'市中区'</span>,      <span class="hljs-number">370104</span>: <span class="hljs-string">'槐荫区'</span>,      <span class="hljs-number">370105</span>: <span class="hljs-string">'天桥区'</span>,      <span class="hljs-number">370112</span>: <span class="hljs-string">'历城区'</span>,      <span class="hljs-number">370113</span>: <span class="hljs-string">'长清区'</span>,      <span class="hljs-number">370114</span>: <span class="hljs-string">'章丘区'</span>,      <span class="hljs-number">370115</span>: <span class="hljs-string">'济阳区'</span>,      <span class="hljs-number">370116</span>: <span class="hljs-string">'莱芜区'</span>,      <span class="hljs-number">370117</span>: <span class="hljs-string">'钢城区'</span>,      <span class="hljs-number">370124</span>: <span class="hljs-string">'平阴县'</span>,      <span class="hljs-number">370126</span>: <span class="hljs-string">'商河县'</span>,      <span class="hljs-number">370190</span>: <span class="hljs-string">'高新区'</span>,      <span class="hljs-number">370202</span>: <span class="hljs-string">'市南区'</span>,      <span class="hljs-number">370203</span>: <span class="hljs-string">'市北区'</span>,      <span class="hljs-number">370211</span>: <span class="hljs-string">'黄岛区'</span>,      <span class="hljs-number">370212</span>: <span class="hljs-string">'崂山区'</span>,      <span class="hljs-number">370213</span>: <span class="hljs-string">'李沧区'</span>,      <span class="hljs-number">370214</span>: <span class="hljs-string">'城阳区'</span>,      <span class="hljs-number">370215</span>: <span class="hljs-string">'即墨区'</span>,      <span class="hljs-number">370281</span>: <span class="hljs-string">'胶州市'</span>,      <span class="hljs-number">370283</span>: <span class="hljs-string">'平度市'</span>,      <span class="hljs-number">370285</span>: <span class="hljs-string">'莱西市'</span>,      <span class="hljs-number">370290</span>: <span class="hljs-string">'开发区'</span>,      <span class="hljs-number">370302</span>: <span class="hljs-string">'淄川区'</span>,      <span class="hljs-number">370303</span>: <span class="hljs-string">'张店区'</span>,      <span class="hljs-number">370304</span>: <span class="hljs-string">'博山区'</span>,      <span class="hljs-number">370305</span>: <span class="hljs-string">'临淄区'</span>,      <span class="hljs-number">370306</span>: <span class="hljs-string">'周村区'</span>,      <span class="hljs-number">370321</span>: <span class="hljs-string">'桓台县'</span>,      <span class="hljs-number">370322</span>: <span class="hljs-string">'高青县'</span>,      <span class="hljs-number">370323</span>: <span class="hljs-string">'沂源县'</span>,      <span class="hljs-number">370402</span>: <span class="hljs-string">'市中区'</span>,      <span class="hljs-number">370403</span>: <span class="hljs-string">'薛城区'</span>,      <span class="hljs-number">370404</span>: <span class="hljs-string">'峄城区'</span>,      <span class="hljs-number">370405</span>: <span class="hljs-string">'台儿庄区'</span>,      <span class="hljs-number">370406</span>: <span class="hljs-string">'山亭区'</span>,      <span class="hljs-number">370481</span>: <span class="hljs-string">'滕州市'</span>,      <span class="hljs-number">370502</span>: <span class="hljs-string">'东营区'</span>,      <span class="hljs-number">370503</span>: <span class="hljs-string">'河口区'</span>,      <span class="hljs-number">370505</span>: <span class="hljs-string">'垦利区'</span>,      <span class="hljs-number">370522</span>: <span class="hljs-string">'利津县'</span>,      <span class="hljs-number">370523</span>: <span class="hljs-string">'广饶县'</span>,      <span class="hljs-number">370602</span>: <span class="hljs-string">'芝罘区'</span>,      <span class="hljs-number">370611</span>: <span class="hljs-string">'福山区'</span>,      <span class="hljs-number">370612</span>: <span class="hljs-string">'牟平区'</span>,      <span class="hljs-number">370613</span>: <span class="hljs-string">'莱山区'</span>,      <span class="hljs-number">370634</span>: <span class="hljs-string">'长岛县'</span>,      <span class="hljs-number">370681</span>: <span class="hljs-string">'龙口市'</span>,      <span class="hljs-number">370682</span>: <span class="hljs-string">'莱阳市'</span>,      <span class="hljs-number">370683</span>: <span class="hljs-string">'莱州市'</span>,      <span class="hljs-number">370684</span>: <span class="hljs-string">'蓬莱市'</span>,      <span class="hljs-number">370685</span>: <span class="hljs-string">'招远市'</span>,      <span class="hljs-number">370686</span>: <span class="hljs-string">'栖霞市'</span>,      <span class="hljs-number">370687</span>: <span class="hljs-string">'海阳市'</span>,      <span class="hljs-number">370690</span>: <span class="hljs-string">'开发区'</span>,      <span class="hljs-number">370702</span>: <span class="hljs-string">'潍城区'</span>,      <span class="hljs-number">370703</span>: <span class="hljs-string">'寒亭区'</span>,      <span class="hljs-number">370704</span>: <span class="hljs-string">'坊子区'</span>,      <span class="hljs-number">370705</span>: <span class="hljs-string">'奎文区'</span>,      <span class="hljs-number">370724</span>: <span class="hljs-string">'临朐县'</span>,      <span class="hljs-number">370725</span>: <span class="hljs-string">'昌乐县'</span>,      <span class="hljs-number">370781</span>: <span class="hljs-string">'青州市'</span>,      <span class="hljs-number">370782</span>: <span class="hljs-string">'诸城市'</span>,      <span class="hljs-number">370783</span>: <span class="hljs-string">'寿光市'</span>,      <span class="hljs-number">370784</span>: <span class="hljs-string">'安丘市'</span>,      <span class="hljs-number">370785</span>: <span class="hljs-string">'高密市'</span>,      <span class="hljs-number">370786</span>: <span class="hljs-string">'昌邑市'</span>,      <span class="hljs-number">370790</span>: <span class="hljs-string">'开发区'</span>,      <span class="hljs-number">370791</span>: <span class="hljs-string">'高新区'</span>,      <span class="hljs-number">370811</span>: <span class="hljs-string">'任城区'</span>,      <span class="hljs-number">370812</span>: <span class="hljs-string">'兖州区'</span>,      <span class="hljs-number">370826</span>: <span class="hljs-string">'微山县'</span>,      <span class="hljs-number">370827</span>: <span class="hljs-string">'鱼台县'</span>,      <span class="hljs-number">370828</span>: <span class="hljs-string">'金乡县'</span>,      <span class="hljs-number">370829</span>: <span class="hljs-string">'嘉祥县'</span>,      <span class="hljs-number">370830</span>: <span class="hljs-string">'汶上县'</span>,      <span class="hljs-number">370831</span>: <span class="hljs-string">'泗水县'</span>,      <span class="hljs-number">370832</span>: <span class="hljs-string">'梁山县'</span>,      <span class="hljs-number">370881</span>: <span class="hljs-string">'曲阜市'</span>,      <span class="hljs-number">370883</span>: <span class="hljs-string">'邹城市'</span>,      <span class="hljs-number">370890</span>: <span class="hljs-string">'高新区'</span>,      <span class="hljs-number">370902</span>: <span class="hljs-string">'泰山区'</span>,      <span class="hljs-number">370911</span>: <span class="hljs-string">'岱岳区'</span>,      <span class="hljs-number">370921</span>: <span class="hljs-string">'宁阳县'</span>,      <span class="hljs-number">370923</span>: <span class="hljs-string">'东平县'</span>,      <span class="hljs-number">370982</span>: <span class="hljs-string">'新泰市'</span>,      <span class="hljs-number">370983</span>: <span class="hljs-string">'肥城市'</span>,      <span class="hljs-number">371002</span>: <span class="hljs-string">'环翠区'</span>,      <span class="hljs-number">371003</span>: <span class="hljs-string">'文登区'</span>,      <span class="hljs-number">371082</span>: <span class="hljs-string">'荣成市'</span>,      <span class="hljs-number">371083</span>: <span class="hljs-string">'乳山市'</span>,      <span class="hljs-number">371091</span>: <span class="hljs-string">'经济技术开发区'</span>,      <span class="hljs-number">371102</span>: <span class="hljs-string">'东港区'</span>,      <span class="hljs-number">371103</span>: <span class="hljs-string">'岚山区'</span>,      <span class="hljs-number">371121</span>: <span class="hljs-string">'五莲县'</span>,      <span class="hljs-number">371122</span>: <span class="hljs-string">'莒县'</span>,      <span class="hljs-number">371302</span>: <span class="hljs-string">'兰山区'</span>,      <span class="hljs-number">371311</span>: <span class="hljs-string">'罗庄区'</span>,      <span class="hljs-number">371312</span>: <span class="hljs-string">'河东区'</span>,      <span class="hljs-number">371321</span>: <span class="hljs-string">'沂南县'</span>,      <span class="hljs-number">371322</span>: <span class="hljs-string">'郯城县'</span>,      <span class="hljs-number">371323</span>: <span class="hljs-string">'沂水县'</span>,      <span class="hljs-number">371324</span>: <span class="hljs-string">'兰陵县'</span>,      <span class="hljs-number">371325</span>: <span class="hljs-string">'费县'</span>,      <span class="hljs-number">371326</span>: <span class="hljs-string">'平邑县'</span>,      <span class="hljs-number">371327</span>: <span class="hljs-string">'莒南县'</span>,      <span class="hljs-number">371328</span>: <span class="hljs-string">'蒙阴县'</span>,      <span class="hljs-number">371329</span>: <span class="hljs-string">'临沭县'</span>,      <span class="hljs-number">371402</span>: <span class="hljs-string">'德城区'</span>,      <span class="hljs-number">371403</span>: <span class="hljs-string">'陵城区'</span>,      <span class="hljs-number">371422</span>: <span class="hljs-string">'宁津县'</span>,      <span class="hljs-number">371423</span>: <span class="hljs-string">'庆云县'</span>,      <span class="hljs-number">371424</span>: <span class="hljs-string">'临邑县'</span>,      <span class="hljs-number">371425</span>: <span class="hljs-string">'齐河县'</span>,      <span class="hljs-number">371426</span>: <span class="hljs-string">'平原县'</span>,      <span class="hljs-number">371427</span>: <span class="hljs-string">'夏津县'</span>,      <span class="hljs-number">371428</span>: <span class="hljs-string">'武城县'</span>,      <span class="hljs-number">371481</span>: <span class="hljs-string">'乐陵市'</span>,      <span class="hljs-number">371482</span>: <span class="hljs-string">'禹城市'</span>,      <span class="hljs-number">371502</span>: <span class="hljs-string">'东昌府区'</span>,      <span class="hljs-number">371521</span>: <span class="hljs-string">'阳谷县'</span>,      <span class="hljs-number">371522</span>: <span class="hljs-string">'莘县'</span>,      <span class="hljs-number">371523</span>: <span class="hljs-string">'茌平县'</span>,      <span class="hljs-number">371524</span>: <span class="hljs-string">'东阿县'</span>,      <span class="hljs-number">371525</span>: <span class="hljs-string">'冠县'</span>,      <span class="hljs-number">371526</span>: <span class="hljs-string">'高唐县'</span>,      <span class="hljs-number">371581</span>: <span class="hljs-string">'临清市'</span>,      <span class="hljs-number">371602</span>: <span class="hljs-string">'滨城区'</span>,      <span class="hljs-number">371603</span>: <span class="hljs-string">'沾化区'</span>,      <span class="hljs-number">371621</span>: <span class="hljs-string">'惠民县'</span>,      <span class="hljs-number">371622</span>: <span class="hljs-string">'阳信县'</span>,      <span class="hljs-number">371623</span>: <span class="hljs-string">'无棣县'</span>,      <span class="hljs-number">371625</span>: <span class="hljs-string">'博兴县'</span>,      <span class="hljs-number">371681</span>: <span class="hljs-string">'邹平市'</span>,      <span class="hljs-number">371702</span>: <span class="hljs-string">'牡丹区'</span>,      <span class="hljs-number">371703</span>: <span class="hljs-string">'定陶区'</span>,      <span class="hljs-number">371721</span>: <span class="hljs-string">'曹县'</span>,      <span class="hljs-number">371722</span>: <span class="hljs-string">'单县'</span>,      <span class="hljs-number">371723</span>: <span class="hljs-string">'成武县'</span>,      <span class="hljs-number">371724</span>: <span class="hljs-string">'巨野县'</span>,      <span class="hljs-number">371725</span>: <span class="hljs-string">'郓城县'</span>,      <span class="hljs-number">371726</span>: <span class="hljs-string">'鄄城县'</span>,      <span class="hljs-number">371728</span>: <span class="hljs-string">'东明县'</span>,      <span class="hljs-number">410102</span>: <span class="hljs-string">'中原区'</span>,      <span class="hljs-number">410103</span>: <span class="hljs-string">'二七区'</span>,      <span class="hljs-number">410104</span>: <span class="hljs-string">'管城回族区'</span>,      <span class="hljs-number">410105</span>: <span class="hljs-string">'金水区'</span>,      <span class="hljs-number">410106</span>: <span class="hljs-string">'上街区'</span>,      <span class="hljs-number">410108</span>: <span class="hljs-string">'惠济区'</span>,      <span class="hljs-number">410122</span>: <span class="hljs-string">'中牟县'</span>,      <span class="hljs-number">410181</span>: <span class="hljs-string">'巩义市'</span>,      <span class="hljs-number">410182</span>: <span class="hljs-string">'荥阳市'</span>,      <span class="hljs-number">410183</span>: <span class="hljs-string">'新密市'</span>,      <span class="hljs-number">410184</span>: <span class="hljs-string">'新郑市'</span>,      <span class="hljs-number">410185</span>: <span class="hljs-string">'登封市'</span>,      <span class="hljs-number">410190</span>: <span class="hljs-string">'高新技术开发区'</span>,      <span class="hljs-number">410191</span>: <span class="hljs-string">'经济技术开发区'</span>,      <span class="hljs-number">410202</span>: <span class="hljs-string">'龙亭区'</span>,      <span class="hljs-number">410203</span>: <span class="hljs-string">'顺河回族区'</span>,      <span class="hljs-number">410204</span>: <span class="hljs-string">'鼓楼区'</span>,      <span class="hljs-number">410205</span>: <span class="hljs-string">'禹王台区'</span>,      <span class="hljs-number">410212</span>: <span class="hljs-string">'祥符区'</span>,      <span class="hljs-number">410221</span>: <span class="hljs-string">'杞县'</span>,      <span class="hljs-number">410222</span>: <span class="hljs-string">'通许县'</span>,      <span class="hljs-number">410223</span>: <span class="hljs-string">'尉氏县'</span>,      <span class="hljs-number">410225</span>: <span class="hljs-string">'兰考县'</span>,      <span class="hljs-number">410302</span>: <span class="hljs-string">'老城区'</span>,      <span class="hljs-number">410303</span>: <span class="hljs-string">'西工区'</span>,      <span class="hljs-number">410304</span>: <span class="hljs-string">'瀍河回族区'</span>,      <span class="hljs-number">410305</span>: <span class="hljs-string">'涧西区'</span>,      <span class="hljs-number">410306</span>: <span class="hljs-string">'吉利区'</span>,      <span class="hljs-number">410311</span>: <span class="hljs-string">'洛龙区'</span>,      <span class="hljs-number">410322</span>: <span class="hljs-string">'孟津县'</span>,      <span class="hljs-number">410323</span>: <span class="hljs-string">'新安县'</span>,      <span class="hljs-number">410324</span>: <span class="hljs-string">'栾川县'</span>,      <span class="hljs-number">410325</span>: <span class="hljs-string">'嵩县'</span>,      <span class="hljs-number">410326</span>: <span class="hljs-string">'汝阳县'</span>,      <span class="hljs-number">410327</span>: <span class="hljs-string">'宜阳县'</span>,      <span class="hljs-number">410328</span>: <span class="hljs-string">'洛宁县'</span>,      <span class="hljs-number">410329</span>: <span class="hljs-string">'伊川县'</span>,      <span class="hljs-number">410381</span>: <span class="hljs-string">'偃师市'</span>,      <span class="hljs-number">410402</span>: <span class="hljs-string">'新华区'</span>,      <span class="hljs-number">410403</span>: <span class="hljs-string">'卫东区'</span>,      <span class="hljs-number">410404</span>: <span class="hljs-string">'石龙区'</span>,      <span class="hljs-number">410411</span>: <span class="hljs-string">'湛河区'</span>,      <span class="hljs-number">410421</span>: <span class="hljs-string">'宝丰县'</span>,      <span class="hljs-number">410422</span>: <span class="hljs-string">'叶县'</span>,      <span class="hljs-number">410423</span>: <span class="hljs-string">'鲁山县'</span>,      <span class="hljs-number">410425</span>: <span class="hljs-string">'郏县'</span>,      <span class="hljs-number">410481</span>: <span class="hljs-string">'舞钢市'</span>,      <span class="hljs-number">410482</span>: <span class="hljs-string">'汝州市'</span>,      <span class="hljs-number">410502</span>: <span class="hljs-string">'文峰区'</span>,      <span class="hljs-number">410503</span>: <span class="hljs-string">'北关区'</span>,      <span class="hljs-number">410505</span>: <span class="hljs-string">'殷都区'</span>,      <span class="hljs-number">410506</span>: <span class="hljs-string">'龙安区'</span>,      <span class="hljs-number">410522</span>: <span class="hljs-string">'安阳县'</span>,      <span class="hljs-number">410523</span>: <span class="hljs-string">'汤阴县'</span>,      <span class="hljs-number">410526</span>: <span class="hljs-string">'滑县'</span>,      <span class="hljs-number">410527</span>: <span class="hljs-string">'内黄县'</span>,      <span class="hljs-number">410581</span>: <span class="hljs-string">'林州市'</span>,      <span class="hljs-number">410590</span>: <span class="hljs-string">'开发区'</span>,      <span class="hljs-number">410602</span>: <span class="hljs-string">'鹤山区'</span>,      <span class="hljs-number">410603</span>: <span class="hljs-string">'山城区'</span>,      <span class="hljs-number">410611</span>: <span class="hljs-string">'淇滨区'</span>,      <span class="hljs-number">410621</span>: <span class="hljs-string">'浚县'</span>,      <span class="hljs-number">410622</span>: <span class="hljs-string">'淇县'</span>,      <span class="hljs-number">410702</span>: <span class="hljs-string">'红旗区'</span>,      <span class="hljs-number">410703</span>: <span class="hljs-string">'卫滨区'</span>,      <span class="hljs-number">410704</span>: <span class="hljs-string">'凤泉区'</span>,      <span class="hljs-number">410711</span>: <span class="hljs-string">'牧野区'</span>,      <span class="hljs-number">410721</span>: <span class="hljs-string">'新乡县'</span>,      <span class="hljs-number">410724</span>: <span class="hljs-string">'获嘉县'</span>,      <span class="hljs-number">410725</span>: <span class="hljs-string">'原阳县'</span>,      <span class="hljs-number">410726</span>: <span class="hljs-string">'延津县'</span>,      <span class="hljs-number">410727</span>: <span class="hljs-string">'封丘县'</span>,      <span class="hljs-number">410728</span>: <span class="hljs-string">'长垣县'</span>,      <span class="hljs-number">410781</span>: <span class="hljs-string">'卫辉市'</span>,      <span class="hljs-number">410782</span>: <span class="hljs-string">'辉县市'</span>,      <span class="hljs-number">410802</span>: <span class="hljs-string">'解放区'</span>,      <span class="hljs-number">410803</span>: <span class="hljs-string">'中站区'</span>,      <span class="hljs-number">410804</span>: <span class="hljs-string">'马村区'</span>,      <span class="hljs-number">410811</span>: <span class="hljs-string">'山阳区'</span>,      <span class="hljs-number">410821</span>: <span class="hljs-string">'修武县'</span>,      <span class="hljs-number">410822</span>: <span class="hljs-string">'博爱县'</span>,      <span class="hljs-number">410823</span>: <span class="hljs-string">'武陟县'</span>,      <span class="hljs-number">410825</span>: <span class="hljs-string">'温县'</span>,      <span class="hljs-number">410882</span>: <span class="hljs-string">'沁阳市'</span>,      <span class="hljs-number">410883</span>: <span class="hljs-string">'孟州市'</span>,      <span class="hljs-number">410902</span>: <span class="hljs-string">'华龙区'</span>,      <span class="hljs-number">410922</span>: <span class="hljs-string">'清丰县'</span>,      <span class="hljs-number">410923</span>: <span class="hljs-string">'南乐县'</span>,      <span class="hljs-number">410926</span>: <span class="hljs-string">'范县'</span>,      <span class="hljs-number">410927</span>: <span class="hljs-string">'台前县'</span>,      <span class="hljs-number">410928</span>: <span class="hljs-string">'濮阳县'</span>,      <span class="hljs-number">411002</span>: <span class="hljs-string">'魏都区'</span>,      <span class="hljs-number">411003</span>: <span class="hljs-string">'建安区'</span>,      <span class="hljs-number">411024</span>: <span class="hljs-string">'鄢陵县'</span>,      <span class="hljs-number">411025</span>: <span class="hljs-string">'襄城县'</span>,      <span class="hljs-number">411081</span>: <span class="hljs-string">'禹州市'</span>,      <span class="hljs-number">411082</span>: <span class="hljs-string">'长葛市'</span>,      <span class="hljs-number">411102</span>: <span class="hljs-string">'源汇区'</span>,      <span class="hljs-number">411103</span>: <span class="hljs-string">'郾城区'</span>,      <span class="hljs-number">411104</span>: <span class="hljs-string">'召陵区'</span>,      <span class="hljs-number">411121</span>: <span class="hljs-string">'舞阳县'</span>,      <span class="hljs-number">411122</span>: <span class="hljs-string">'临颍县'</span>,      <span class="hljs-number">411202</span>: <span class="hljs-string">'湖滨区'</span>,      <span class="hljs-number">411203</span>: <span class="hljs-string">'陕州区'</span>,      <span class="hljs-number">411221</span>: <span class="hljs-string">'渑池县'</span>,      <span class="hljs-number">411224</span>: <span class="hljs-string">'卢氏县'</span>,      <span class="hljs-number">411281</span>: <span class="hljs-string">'义马市'</span>,      <span class="hljs-number">411282</span>: <span class="hljs-string">'灵宝市'</span>,      <span class="hljs-number">411302</span>: <span class="hljs-string">'宛城区'</span>,      <span class="hljs-number">411303</span>: <span class="hljs-string">'卧龙区'</span>,      <span class="hljs-number">411321</span>: <span class="hljs-string">'南召县'</span>,      <span class="hljs-number">411322</span>: <span class="hljs-string">'方城县'</span>,      <span class="hljs-number">411323</span>: <span class="hljs-string">'西峡县'</span>,      <span class="hljs-number">411324</span>: <span class="hljs-string">'镇平县'</span>,      <span class="hljs-number">411325</span>: <span class="hljs-string">'内乡县'</span>,      <span class="hljs-number">411326</span>: <span class="hljs-string">'淅川县'</span>,      <span class="hljs-number">411327</span>: <span class="hljs-string">'社旗县'</span>,      <span class="hljs-number">411328</span>: <span class="hljs-string">'唐河县'</span>,      <span class="hljs-number">411329</span>: <span class="hljs-string">'新野县'</span>,      <span class="hljs-number">411330</span>: <span class="hljs-string">'桐柏县'</span>,      <span class="hljs-number">411381</span>: <span class="hljs-string">'邓州市'</span>,      <span class="hljs-number">411402</span>: <span class="hljs-string">'梁园区'</span>,      <span class="hljs-number">411403</span>: <span class="hljs-string">'睢阳区'</span>,      <span class="hljs-number">411421</span>: <span class="hljs-string">'民权县'</span>,      <span class="hljs-number">411422</span>: <span class="hljs-string">'睢县'</span>,      <span class="hljs-number">411423</span>: <span class="hljs-string">'宁陵县'</span>,      <span class="hljs-number">411424</span>: <span class="hljs-string">'柘城县'</span>,      <span class="hljs-number">411425</span>: <span class="hljs-string">'虞城县'</span>,      <span class="hljs-number">411426</span>: <span class="hljs-string">'夏邑县'</span>,      <span class="hljs-number">411481</span>: <span class="hljs-string">'永城市'</span>,      <span class="hljs-number">411502</span>: <span class="hljs-string">'浉河区'</span>,      <span class="hljs-number">411503</span>: <span class="hljs-string">'平桥区'</span>,      <span class="hljs-number">411521</span>: <span class="hljs-string">'罗山县'</span>,      <span class="hljs-number">411522</span>: <span class="hljs-string">'光山县'</span>,      <span class="hljs-number">411523</span>: <span class="hljs-string">'新县'</span>,      <span class="hljs-number">411524</span>: <span class="hljs-string">'商城县'</span>,      <span class="hljs-number">411525</span>: <span class="hljs-string">'固始县'</span>,      <span class="hljs-number">411526</span>: <span class="hljs-string">'潢川县'</span>,      <span class="hljs-number">411527</span>: <span class="hljs-string">'淮滨县'</span>,      <span class="hljs-number">411528</span>: <span class="hljs-string">'息县'</span>,      <span class="hljs-number">411602</span>: <span class="hljs-string">'川汇区'</span>,      <span class="hljs-number">411621</span>: <span class="hljs-string">'扶沟县'</span>,      <span class="hljs-number">411622</span>: <span class="hljs-string">'西华县'</span>,      <span class="hljs-number">411623</span>: <span class="hljs-string">'商水县'</span>,      <span class="hljs-number">411624</span>: <span class="hljs-string">'沈丘县'</span>,      <span class="hljs-number">411625</span>: <span class="hljs-string">'郸城县'</span>,      <span class="hljs-number">411626</span>: <span class="hljs-string">'淮阳县'</span>,      <span class="hljs-number">411627</span>: <span class="hljs-string">'太康县'</span>,      <span class="hljs-number">411628</span>: <span class="hljs-string">'鹿邑县'</span>,      <span class="hljs-number">411681</span>: <span class="hljs-string">'项城市'</span>,      <span class="hljs-number">411690</span>: <span class="hljs-string">'经济开发区'</span>,      <span class="hljs-number">411702</span>: <span class="hljs-string">'驿城区'</span>,      <span class="hljs-number">411721</span>: <span class="hljs-string">'西平县'</span>,      <span class="hljs-number">411722</span>: <span class="hljs-string">'上蔡县'</span>,      <span class="hljs-number">411723</span>: <span class="hljs-string">'平舆县'</span>,      <span class="hljs-number">411724</span>: <span class="hljs-string">'正阳县'</span>,      <span class="hljs-number">411725</span>: <span class="hljs-string">'确山县'</span>,      <span class="hljs-number">411726</span>: <span class="hljs-string">'泌阳县'</span>,      <span class="hljs-number">411727</span>: <span class="hljs-string">'汝南县'</span>,      <span class="hljs-number">411728</span>: <span class="hljs-string">'遂平县'</span>,      <span class="hljs-number">411729</span>: <span class="hljs-string">'新蔡县'</span>,      <span class="hljs-number">419001</span>: <span class="hljs-string">'济源市'</span>,      <span class="hljs-number">420102</span>: <span class="hljs-string">'江岸区'</span>,      <span class="hljs-number">420103</span>: <span class="hljs-string">'江汉区'</span>,      <span class="hljs-number">420104</span>: <span class="hljs-string">'硚口区'</span>,      <span class="hljs-number">420105</span>: <span class="hljs-string">'汉阳区'</span>,      <span class="hljs-number">420106</span>: <span class="hljs-string">'武昌区'</span>,      <span class="hljs-number">420107</span>: <span class="hljs-string">'青山区'</span>,      <span class="hljs-number">420111</span>: <span class="hljs-string">'洪山区'</span>,      <span class="hljs-number">420112</span>: <span class="hljs-string">'东西湖区'</span>,      <span class="hljs-number">420113</span>: <span class="hljs-string">'汉南区'</span>,      <span class="hljs-number">420114</span>: <span class="hljs-string">'蔡甸区'</span>,      <span class="hljs-number">420115</span>: <span class="hljs-string">'江夏区'</span>,      <span class="hljs-number">420116</span>: <span class="hljs-string">'黄陂区'</span>,      <span class="hljs-number">420117</span>: <span class="hljs-string">'新洲区'</span>,      <span class="hljs-number">420202</span>: <span class="hljs-string">'黄石港区'</span>,      <span class="hljs-number">420203</span>: <span class="hljs-string">'西塞山区'</span>,      <span class="hljs-number">420204</span>: <span class="hljs-string">'下陆区'</span>,      <span class="hljs-number">420205</span>: <span class="hljs-string">'铁山区'</span>,      <span class="hljs-number">420222</span>: <span class="hljs-string">'阳新县'</span>,      <span class="hljs-number">420281</span>: <span class="hljs-string">'大冶市'</span>,      <span class="hljs-number">420302</span>: <span class="hljs-string">'茅箭区'</span>,      <span class="hljs-number">420303</span>: <span class="hljs-string">'张湾区'</span>,      <span class="hljs-number">420304</span>: <span class="hljs-string">'郧阳区'</span>,      <span class="hljs-number">420322</span>: <span class="hljs-string">'郧西县'</span>,      <span class="hljs-number">420323</span>: <span class="hljs-string">'竹山县'</span>,      <span class="hljs-number">420324</span>: <span class="hljs-string">'竹溪县'</span>,      <span class="hljs-number">420325</span>: <span class="hljs-string">'房县'</span>,      <span class="hljs-number">420381</span>: <span class="hljs-string">'丹江口市'</span>,      <span class="hljs-number">420502</span>: <span class="hljs-string">'西陵区'</span>,      <span class="hljs-number">420503</span>: <span class="hljs-string">'伍家岗区'</span>,      <span class="hljs-number">420504</span>: <span class="hljs-string">'点军区'</span>,      <span class="hljs-number">420505</span>: <span class="hljs-string">'猇亭区'</span>,      <span class="hljs-number">420506</span>: <span class="hljs-string">'夷陵区'</span>,      <span class="hljs-number">420525</span>: <span class="hljs-string">'远安县'</span>,      <span class="hljs-number">420526</span>: <span class="hljs-string">'兴山县'</span>,      <span class="hljs-number">420527</span>: <span class="hljs-string">'秭归县'</span>,      <span class="hljs-number">420528</span>: <span class="hljs-string">'长阳土家族自治县'</span>,      <span class="hljs-number">420529</span>: <span class="hljs-string">'五峰土家族自治县'</span>,      <span class="hljs-number">420581</span>: <span class="hljs-string">'宜都市'</span>,      <span class="hljs-number">420582</span>: <span class="hljs-string">'当阳市'</span>,      <span class="hljs-number">420583</span>: <span class="hljs-string">'枝江市'</span>,      <span class="hljs-number">420590</span>: <span class="hljs-string">'经济开发区'</span>,      <span class="hljs-number">420602</span>: <span class="hljs-string">'襄城区'</span>,      <span class="hljs-number">420606</span>: <span class="hljs-string">'樊城区'</span>,      <span class="hljs-number">420607</span>: <span class="hljs-string">'襄州区'</span>,      <span class="hljs-number">420624</span>: <span class="hljs-string">'南漳县'</span>,      <span class="hljs-number">420625</span>: <span class="hljs-string">'谷城县'</span>,      <span class="hljs-number">420626</span>: <span class="hljs-string">'保康县'</span>,      <span class="hljs-number">420682</span>: <span class="hljs-string">'老河口市'</span>,      <span class="hljs-number">420683</span>: <span class="hljs-string">'枣阳市'</span>,      <span class="hljs-number">420684</span>: <span class="hljs-string">'宜城市'</span>,      <span class="hljs-number">420702</span>: <span class="hljs-string">'梁子湖区'</span>,      <span class="hljs-number">420703</span>: <span class="hljs-string">'华容区'</span>,      <span class="hljs-number">420704</span>: <span class="hljs-string">'鄂城区'</span>,      <span class="hljs-number">420802</span>: <span class="hljs-string">'东宝区'</span>,      <span class="hljs-number">420804</span>: <span class="hljs-string">'掇刀区'</span>,      <span class="hljs-number">420822</span>: <span class="hljs-string">'沙洋县'</span>,      <span class="hljs-number">420881</span>: <span class="hljs-string">'钟祥市'</span>,      <span class="hljs-number">420882</span>: <span class="hljs-string">'京山市'</span>,      <span class="hljs-number">420902</span>: <span class="hljs-string">'孝南区'</span>,      <span class="hljs-number">420921</span>: <span class="hljs-string">'孝昌县'</span>,      <span class="hljs-number">420922</span>: <span class="hljs-string">'大悟县'</span>,      <span class="hljs-number">420923</span>: <span class="hljs-string">'云梦县'</span>,      <span class="hljs-number">420981</span>: <span class="hljs-string">'应城市'</span>,      <span class="hljs-number">420982</span>: <span class="hljs-string">'安陆市'</span>,      <span class="hljs-number">420984</span>: <span class="hljs-string">'汉川市'</span>,      <span class="hljs-number">421002</span>: <span class="hljs-string">'沙市区'</span>,      <span class="hljs-number">421003</span>: <span class="hljs-string">'荆州区'</span>,      <span class="hljs-number">421022</span>: <span class="hljs-string">'公安县'</span>,      <span class="hljs-number">421023</span>: <span class="hljs-string">'监利县'</span>,      <span class="hljs-number">421024</span>: <span class="hljs-string">'江陵县'</span>,      <span class="hljs-number">421081</span>: <span class="hljs-string">'石首市'</span>,      <span class="hljs-number">421083</span>: <span class="hljs-string">'洪湖市'</span>,      <span class="hljs-number">421087</span>: <span class="hljs-string">'松滋市'</span>,      <span class="hljs-number">421102</span>: <span class="hljs-string">'黄州区'</span>,      <span class="hljs-number">421121</span>: <span class="hljs-string">'团风县'</span>,      <span class="hljs-number">421122</span>: <span class="hljs-string">'红安县'</span>,      <span class="hljs-number">421123</span>: <span class="hljs-string">'罗田县'</span>,      <span class="hljs-number">421124</span>: <span class="hljs-string">'英山县'</span>,      <span class="hljs-number">421125</span>: <span class="hljs-string">'浠水县'</span>,      <span class="hljs-number">421126</span>: <span class="hljs-string">'蕲春县'</span>,      <span class="hljs-number">421127</span>: <span class="hljs-string">'黄梅县'</span>,      <span class="hljs-number">421181</span>: <span class="hljs-string">'麻城市'</span>,      <span class="hljs-number">421182</span>: <span class="hljs-string">'武穴市'</span>,      <span class="hljs-number">421202</span>: <span class="hljs-string">'咸安区'</span>,      <span class="hljs-number">421221</span>: <span class="hljs-string">'嘉鱼县'</span>,      <span class="hljs-number">421222</span>: <span class="hljs-string">'通城县'</span>,      <span class="hljs-number">421223</span>: <span class="hljs-string">'崇阳县'</span>,      <span class="hljs-number">421224</span>: <span class="hljs-string">'通山县'</span>,      <span class="hljs-number">421281</span>: <span class="hljs-string">'赤壁市'</span>,      <span class="hljs-number">421303</span>: <span class="hljs-string">'曾都区'</span>,      <span class="hljs-number">421321</span>: <span class="hljs-string">'随县'</span>,      <span class="hljs-number">421381</span>: <span class="hljs-string">'广水市'</span>,      <span class="hljs-number">422801</span>: <span class="hljs-string">'恩施市'</span>,      <span class="hljs-number">422802</span>: <span class="hljs-string">'利川市'</span>,      <span class="hljs-number">422822</span>: <span class="hljs-string">'建始县'</span>,      <span class="hljs-number">422823</span>: <span class="hljs-string">'巴东县'</span>,      <span class="hljs-number">422825</span>: <span class="hljs-string">'宣恩县'</span>,      <span class="hljs-number">422826</span>: <span class="hljs-string">'咸丰县'</span>,      <span class="hljs-number">422827</span>: <span class="hljs-string">'来凤县'</span>,      <span class="hljs-number">422828</span>: <span class="hljs-string">'鹤峰县'</span>,      <span class="hljs-number">429004</span>: <span class="hljs-string">'仙桃市'</span>,      <span class="hljs-number">429005</span>: <span class="hljs-string">'潜江市'</span>,      <span class="hljs-number">429006</span>: <span class="hljs-string">'天门市'</span>,      <span class="hljs-number">429021</span>: <span class="hljs-string">'神农架林区'</span>,      <span class="hljs-number">430102</span>: <span class="hljs-string">'芙蓉区'</span>,      <span class="hljs-number">430103</span>: <span class="hljs-string">'天心区'</span>,      <span class="hljs-number">430104</span>: <span class="hljs-string">'岳麓区'</span>,      <span class="hljs-number">430105</span>: <span class="hljs-string">'开福区'</span>,      <span class="hljs-number">430111</span>: <span class="hljs-string">'雨花区'</span>,      <span class="hljs-number">430112</span>: <span class="hljs-string">'望城区'</span>,      <span class="hljs-number">430121</span>: <span class="hljs-string">'长沙县'</span>,      <span class="hljs-number">430181</span>: <span class="hljs-string">'浏阳市'</span>,      <span class="hljs-number">430182</span>: <span class="hljs-string">'宁乡市'</span>,      <span class="hljs-number">430202</span>: <span class="hljs-string">'荷塘区'</span>,      <span class="hljs-number">430203</span>: <span class="hljs-string">'芦淞区'</span>,      <span class="hljs-number">430204</span>: <span class="hljs-string">'石峰区'</span>,      <span class="hljs-number">430211</span>: <span class="hljs-string">'天元区'</span>,      <span class="hljs-number">430212</span>: <span class="hljs-string">'渌口区'</span>,      <span class="hljs-number">430223</span>: <span class="hljs-string">'攸县'</span>,      <span class="hljs-number">430224</span>: <span class="hljs-string">'茶陵县'</span>,      <span class="hljs-number">430225</span>: <span class="hljs-string">'炎陵县'</span>,      <span class="hljs-number">430281</span>: <span class="hljs-string">'醴陵市'</span>,      <span class="hljs-number">430302</span>: <span class="hljs-string">'雨湖区'</span>,      <span class="hljs-number">430304</span>: <span class="hljs-string">'岳塘区'</span>,      <span class="hljs-number">430321</span>: <span class="hljs-string">'湘潭县'</span>,      <span class="hljs-number">430381</span>: <span class="hljs-string">'湘乡市'</span>,      <span class="hljs-number">430382</span>: <span class="hljs-string">'韶山市'</span>,      <span class="hljs-number">430405</span>: <span class="hljs-string">'珠晖区'</span>,      <span class="hljs-number">430406</span>: <span class="hljs-string">'雁峰区'</span>,      <span class="hljs-number">430407</span>: <span class="hljs-string">'石鼓区'</span>,      <span class="hljs-number">430408</span>: <span class="hljs-string">'蒸湘区'</span>,      <span class="hljs-number">430412</span>: <span class="hljs-string">'南岳区'</span>,      <span class="hljs-number">430421</span>: <span class="hljs-string">'衡阳县'</span>,      <span class="hljs-number">430422</span>: <span class="hljs-string">'衡南县'</span>,      <span class="hljs-number">430423</span>: <span class="hljs-string">'衡山县'</span>,      <span class="hljs-number">430424</span>: <span class="hljs-string">'衡东县'</span>,      <span class="hljs-number">430426</span>: <span class="hljs-string">'祁东县'</span>,      <span class="hljs-number">430481</span>: <span class="hljs-string">'耒阳市'</span>,      <span class="hljs-number">430482</span>: <span class="hljs-string">'常宁市'</span>,      <span class="hljs-number">430502</span>: <span class="hljs-string">'双清区'</span>,      <span class="hljs-number">430503</span>: <span class="hljs-string">'大祥区'</span>,      <span class="hljs-number">430511</span>: <span class="hljs-string">'北塔区'</span>,      <span class="hljs-number">430521</span>: <span class="hljs-string">'邵东县'</span>,      <span class="hljs-number">430522</span>: <span class="hljs-string">'新邵县'</span>,      <span class="hljs-number">430523</span>: <span class="hljs-string">'邵阳县'</span>,      <span class="hljs-number">430524</span>: <span class="hljs-string">'隆回县'</span>,      <span class="hljs-number">430525</span>: <span class="hljs-string">'洞口县'</span>,      <span class="hljs-number">430527</span>: <span class="hljs-string">'绥宁县'</span>,      <span class="hljs-number">430528</span>: <span class="hljs-string">'新宁县'</span>,      <span class="hljs-number">430529</span>: <span class="hljs-string">'城步苗族自治县'</span>,      <span class="hljs-number">430581</span>: <span class="hljs-string">'武冈市'</span>,      <span class="hljs-number">430602</span>: <span class="hljs-string">'岳阳楼区'</span>,      <span class="hljs-number">430603</span>: <span class="hljs-string">'云溪区'</span>,      <span class="hljs-number">430611</span>: <span class="hljs-string">'君山区'</span>,      <span class="hljs-number">430621</span>: <span class="hljs-string">'岳阳县'</span>,      <span class="hljs-number">430623</span>: <span class="hljs-string">'华容县'</span>,      <span class="hljs-number">430624</span>: <span class="hljs-string">'湘阴县'</span>,      <span class="hljs-number">430626</span>: <span class="hljs-string">'平江县'</span>,      <span class="hljs-number">430681</span>: <span class="hljs-string">'汨罗市'</span>,      <span class="hljs-number">430682</span>: <span class="hljs-string">'临湘市'</span>,      <span class="hljs-number">430702</span>: <span class="hljs-string">'武陵区'</span>,      <span class="hljs-number">430703</span>: <span class="hljs-string">'鼎城区'</span>,      <span class="hljs-number">430721</span>: <span class="hljs-string">'安乡县'</span>,      <span class="hljs-number">430722</span>: <span class="hljs-string">'汉寿县'</span>,      <span class="hljs-number">430723</span>: <span class="hljs-string">'澧县'</span>,      <span class="hljs-number">430724</span>: <span class="hljs-string">'临澧县'</span>,      <span class="hljs-number">430725</span>: <span class="hljs-string">'桃源县'</span>,      <span class="hljs-number">430726</span>: <span class="hljs-string">'石门县'</span>,      <span class="hljs-number">430781</span>: <span class="hljs-string">'津市市'</span>,      <span class="hljs-number">430802</span>: <span class="hljs-string">'永定区'</span>,      <span class="hljs-number">430811</span>: <span class="hljs-string">'武陵源区'</span>,      <span class="hljs-number">430821</span>: <span class="hljs-string">'慈利县'</span>,      <span class="hljs-number">430822</span>: <span class="hljs-string">'桑植县'</span>,      <span class="hljs-number">430902</span>: <span class="hljs-string">'资阳区'</span>,      <span class="hljs-number">430903</span>: <span class="hljs-string">'赫山区'</span>,      <span class="hljs-number">430921</span>: <span class="hljs-string">'南县'</span>,      <span class="hljs-number">430922</span>: <span class="hljs-string">'桃江县'</span>,      <span class="hljs-number">430923</span>: <span class="hljs-string">'安化县'</span>,      <span class="hljs-number">430981</span>: <span class="hljs-string">'沅江市'</span>,      <span class="hljs-number">431002</span>: <span class="hljs-string">'北湖区'</span>,      <span class="hljs-number">431003</span>: <span class="hljs-string">'苏仙区'</span>,      <span class="hljs-number">431021</span>: <span class="hljs-string">'桂阳县'</span>,      <span class="hljs-number">431022</span>: <span class="hljs-string">'宜章县'</span>,      <span class="hljs-number">431023</span>: <span class="hljs-string">'永兴县'</span>,      <span class="hljs-number">431024</span>: <span class="hljs-string">'嘉禾县'</span>,      <span class="hljs-number">431025</span>: <span class="hljs-string">'临武县'</span>,      <span class="hljs-number">431026</span>: <span class="hljs-string">'汝城县'</span>,      <span class="hljs-number">431027</span>: <span class="hljs-string">'桂东县'</span>,      <span class="hljs-number">431028</span>: <span class="hljs-string">'安仁县'</span>,      <span class="hljs-number">431081</span>: <span class="hljs-string">'资兴市'</span>,      <span class="hljs-number">431102</span>: <span class="hljs-string">'零陵区'</span>,      <span class="hljs-number">431103</span>: <span class="hljs-string">'冷水滩区'</span>,      <span class="hljs-number">431121</span>: <span class="hljs-string">'祁阳县'</span>,      <span class="hljs-number">431122</span>: <span class="hljs-string">'东安县'</span>,      <span class="hljs-number">431123</span>: <span class="hljs-string">'双牌县'</span>,      <span class="hljs-number">431124</span>: <span class="hljs-string">'道县'</span>,      <span class="hljs-number">431125</span>: <span class="hljs-string">'江永县'</span>,      <span class="hljs-number">431126</span>: <span class="hljs-string">'宁远县'</span>,      <span class="hljs-number">431127</span>: <span class="hljs-string">'蓝山县'</span>,      <span class="hljs-number">431128</span>: <span class="hljs-string">'新田县'</span>,      <span class="hljs-number">431129</span>: <span class="hljs-string">'江华瑶族自治县'</span>,      <span class="hljs-number">431202</span>: <span class="hljs-string">'鹤城区'</span>,      <span class="hljs-number">431221</span>: <span class="hljs-string">'中方县'</span>,      <span class="hljs-number">431222</span>: <span class="hljs-string">'沅陵县'</span>,      <span class="hljs-number">431223</span>: <span class="hljs-string">'辰溪县'</span>,      <span class="hljs-number">431224</span>: <span class="hljs-string">'溆浦县'</span>,      <span class="hljs-number">431225</span>: <span class="hljs-string">'会同县'</span>,      <span class="hljs-number">431226</span>: <span class="hljs-string">'麻阳苗族自治县'</span>,      <span class="hljs-number">431227</span>: <span class="hljs-string">'新晃侗族自治县'</span>,      <span class="hljs-number">431228</span>: <span class="hljs-string">'芷江侗族自治县'</span>,      <span class="hljs-number">431229</span>: <span class="hljs-string">'靖州苗族侗族自治县'</span>,      <span class="hljs-number">431230</span>: <span class="hljs-string">'通道侗族自治县'</span>,      <span class="hljs-number">431281</span>: <span class="hljs-string">'洪江市'</span>,      <span class="hljs-number">431302</span>: <span class="hljs-string">'娄星区'</span>,      <span class="hljs-number">431321</span>: <span class="hljs-string">'双峰县'</span>,      <span class="hljs-number">431322</span>: <span class="hljs-string">'新化县'</span>,      <span class="hljs-number">431381</span>: <span class="hljs-string">'冷水江市'</span>,      <span class="hljs-number">431382</span>: <span class="hljs-string">'涟源市'</span>,      <span class="hljs-number">433101</span>: <span class="hljs-string">'吉首市'</span>,      <span class="hljs-number">433122</span>: <span class="hljs-string">'泸溪县'</span>,      <span class="hljs-number">433123</span>: <span class="hljs-string">'凤凰县'</span>,      <span class="hljs-number">433124</span>: <span class="hljs-string">'花垣县'</span>,      <span class="hljs-number">433125</span>: <span class="hljs-string">'保靖县'</span>,      <span class="hljs-number">433126</span>: <span class="hljs-string">'古丈县'</span>,      <span class="hljs-number">433127</span>: <span class="hljs-string">'永顺县'</span>,      <span class="hljs-number">433130</span>: <span class="hljs-string">'龙山县'</span>,      <span class="hljs-number">440103</span>: <span class="hljs-string">'荔湾区'</span>,      <span class="hljs-number">440104</span>: <span class="hljs-string">'越秀区'</span>,      <span class="hljs-number">440105</span>: <span class="hljs-string">'海珠区'</span>,      <span class="hljs-number">440106</span>: <span class="hljs-string">'天河区'</span>,      <span class="hljs-number">440111</span>: <span class="hljs-string">'白云区'</span>,      <span class="hljs-number">440112</span>: <span class="hljs-string">'黄埔区'</span>,      <span class="hljs-number">440113</span>: <span class="hljs-string">'番禺区'</span>,      <span class="hljs-number">440114</span>: <span class="hljs-string">'花都区'</span>,      <span class="hljs-number">440115</span>: <span class="hljs-string">'南沙区'</span>,      <span class="hljs-number">440117</span>: <span class="hljs-string">'从化区'</span>,      <span class="hljs-number">440118</span>: <span class="hljs-string">'增城区'</span>,      <span class="hljs-number">440203</span>: <span class="hljs-string">'武江区'</span>,      <span class="hljs-number">440204</span>: <span class="hljs-string">'浈江区'</span>,      <span class="hljs-number">440205</span>: <span class="hljs-string">'曲江区'</span>,      <span class="hljs-number">440222</span>: <span class="hljs-string">'始兴县'</span>,      <span class="hljs-number">440224</span>: <span class="hljs-string">'仁化县'</span>,      <span class="hljs-number">440229</span>: <span class="hljs-string">'翁源县'</span>,      <span class="hljs-number">440232</span>: <span class="hljs-string">'乳源瑶族自治县'</span>,      <span class="hljs-number">440233</span>: <span class="hljs-string">'新丰县'</span>,      <span class="hljs-number">440281</span>: <span class="hljs-string">'乐昌市'</span>,      <span class="hljs-number">440282</span>: <span class="hljs-string">'南雄市'</span>,      <span class="hljs-number">440303</span>: <span class="hljs-string">'罗湖区'</span>,      <span class="hljs-number">440304</span>: <span class="hljs-string">'福田区'</span>,      <span class="hljs-number">440305</span>: <span class="hljs-string">'南山区'</span>,      <span class="hljs-number">440306</span>: <span class="hljs-string">'宝安区'</span>,      <span class="hljs-number">440307</span>: <span class="hljs-string">'龙岗区'</span>,      <span class="hljs-number">440308</span>: <span class="hljs-string">'盐田区'</span>,      <span class="hljs-number">440309</span>: <span class="hljs-string">'龙华区'</span>,      <span class="hljs-number">440310</span>: <span class="hljs-string">'坪山区'</span>,      <span class="hljs-number">440311</span>: <span class="hljs-string">'光明区'</span>,      <span class="hljs-number">440402</span>: <span class="hljs-string">'香洲区'</span>,      <span class="hljs-number">440403</span>: <span class="hljs-string">'斗门区'</span>,      <span class="hljs-number">440404</span>: <span class="hljs-string">'金湾区'</span>,      <span class="hljs-number">440507</span>: <span class="hljs-string">'龙湖区'</span>,      <span class="hljs-number">440511</span>: <span class="hljs-string">'金平区'</span>,      <span class="hljs-number">440512</span>: <span class="hljs-string">'濠江区'</span>,      <span class="hljs-number">440513</span>: <span class="hljs-string">'潮阳区'</span>,      <span class="hljs-number">440514</span>: <span class="hljs-string">'潮南区'</span>,      <span class="hljs-number">440515</span>: <span class="hljs-string">'澄海区'</span>,      <span class="hljs-number">440523</span>: <span class="hljs-string">'南澳县'</span>,      <span class="hljs-number">440604</span>: <span class="hljs-string">'禅城区'</span>,      <span class="hljs-number">440605</span>: <span class="hljs-string">'南海区'</span>,      <span class="hljs-number">440606</span>: <span class="hljs-string">'顺德区'</span>,      <span class="hljs-number">440607</span>: <span class="hljs-string">'三水区'</span>,      <span class="hljs-number">440608</span>: <span class="hljs-string">'高明区'</span>,      <span class="hljs-number">440703</span>: <span class="hljs-string">'蓬江区'</span>,      <span class="hljs-number">440704</span>: <span class="hljs-string">'江海区'</span>,      <span class="hljs-number">440705</span>: <span class="hljs-string">'新会区'</span>,      <span class="hljs-number">440781</span>: <span class="hljs-string">'台山市'</span>,      <span class="hljs-number">440783</span>: <span class="hljs-string">'开平市'</span>,      <span class="hljs-number">440784</span>: <span class="hljs-string">'鹤山市'</span>,      <span class="hljs-number">440785</span>: <span class="hljs-string">'恩平市'</span>,      <span class="hljs-number">440802</span>: <span class="hljs-string">'赤坎区'</span>,      <span class="hljs-number">440803</span>: <span class="hljs-string">'霞山区'</span>,      <span class="hljs-number">440804</span>: <span class="hljs-string">'坡头区'</span>,      <span class="hljs-number">440811</span>: <span class="hljs-string">'麻章区'</span>,      <span class="hljs-number">440823</span>: <span class="hljs-string">'遂溪县'</span>,      <span class="hljs-number">440825</span>: <span class="hljs-string">'徐闻县'</span>,      <span class="hljs-number">440881</span>: <span class="hljs-string">'廉江市'</span>,      <span class="hljs-number">440882</span>: <span class="hljs-string">'雷州市'</span>,      <span class="hljs-number">440883</span>: <span class="hljs-string">'吴川市'</span>,      <span class="hljs-number">440890</span>: <span class="hljs-string">'经济技术开发区'</span>,      <span class="hljs-number">440902</span>: <span class="hljs-string">'茂南区'</span>,      <span class="hljs-number">440904</span>: <span class="hljs-string">'电白区'</span>,      <span class="hljs-number">440981</span>: <span class="hljs-string">'高州市'</span>,      <span class="hljs-number">440982</span>: <span class="hljs-string">'化州市'</span>,      <span class="hljs-number">440983</span>: <span class="hljs-string">'信宜市'</span>,      <span class="hljs-number">441202</span>: <span class="hljs-string">'端州区'</span>,      <span class="hljs-number">441203</span>: <span class="hljs-string">'鼎湖区'</span>,      <span class="hljs-number">441204</span>: <span class="hljs-string">'高要区'</span>,      <span class="hljs-number">441223</span>: <span class="hljs-string">'广宁县'</span>,      <span class="hljs-number">441224</span>: <span class="hljs-string">'怀集县'</span>,      <span class="hljs-number">441225</span>: <span class="hljs-string">'封开县'</span>,      <span class="hljs-number">441226</span>: <span class="hljs-string">'德庆县'</span>,      <span class="hljs-number">441284</span>: <span class="hljs-string">'四会市'</span>,      <span class="hljs-number">441302</span>: <span class="hljs-string">'惠城区'</span>,      <span class="hljs-number">441303</span>: <span class="hljs-string">'惠阳区'</span>,      <span class="hljs-number">441322</span>: <span class="hljs-string">'博罗县'</span>,      <span class="hljs-number">441323</span>: <span class="hljs-string">'惠东县'</span>,      <span class="hljs-number">441324</span>: <span class="hljs-string">'龙门县'</span>,      <span class="hljs-number">441402</span>: <span class="hljs-string">'梅江区'</span>,      <span class="hljs-number">441403</span>: <span class="hljs-string">'梅县区'</span>,      <span class="hljs-number">441422</span>: <span class="hljs-string">'大埔县'</span>,      <span class="hljs-number">441423</span>: <span class="hljs-string">'丰顺县'</span>,      <span class="hljs-number">441424</span>: <span class="hljs-string">'五华县'</span>,      <span class="hljs-number">441426</span>: <span class="hljs-string">'平远县'</span>,      <span class="hljs-number">441427</span>: <span class="hljs-string">'蕉岭县'</span>,      <span class="hljs-number">441481</span>: <span class="hljs-string">'兴宁市'</span>,      <span class="hljs-number">441502</span>: <span class="hljs-string">'城区'</span>,      <span class="hljs-number">441521</span>: <span class="hljs-string">'海丰县'</span>,      <span class="hljs-number">441523</span>: <span class="hljs-string">'陆河县'</span>,      <span class="hljs-number">441581</span>: <span class="hljs-string">'陆丰市'</span>,      <span class="hljs-number">441602</span>: <span class="hljs-string">'源城区'</span>,      <span class="hljs-number">441621</span>: <span class="hljs-string">'紫金县'</span>,      <span class="hljs-number">441622</span>: <span class="hljs-string">'龙川县'</span>,      <span class="hljs-number">441623</span>: <span class="hljs-string">'连平县'</span>,      <span class="hljs-number">441624</span>: <span class="hljs-string">'和平县'</span>,      <span class="hljs-number">441625</span>: <span class="hljs-string">'东源县'</span>,      <span class="hljs-number">441702</span>: <span class="hljs-string">'江城区'</span>,      <span class="hljs-number">441704</span>: <span class="hljs-string">'阳东区'</span>,      <span class="hljs-number">441721</span>: <span class="hljs-string">'阳西县'</span>,      <span class="hljs-number">441781</span>: <span class="hljs-string">'阳春市'</span>,      <span class="hljs-number">441802</span>: <span class="hljs-string">'清城区'</span>,      <span class="hljs-number">441803</span>: <span class="hljs-string">'清新区'</span>,      <span class="hljs-number">441821</span>: <span class="hljs-string">'佛冈县'</span>,      <span class="hljs-number">441823</span>: <span class="hljs-string">'阳山县'</span>,      <span class="hljs-number">441825</span>: <span class="hljs-string">'连山壮族瑶族自治县'</span>,      <span class="hljs-number">441826</span>: <span class="hljs-string">'连南瑶族自治县'</span>,      <span class="hljs-number">441881</span>: <span class="hljs-string">'英德市'</span>,      <span class="hljs-number">441882</span>: <span class="hljs-string">'连州市'</span>,      <span class="hljs-number">441901</span>: <span class="hljs-string">'中堂镇'</span>,      <span class="hljs-number">441903</span>: <span class="hljs-string">'南城街道办事处'</span>,      <span class="hljs-number">441904</span>: <span class="hljs-string">'长安镇'</span>,      <span class="hljs-number">441905</span>: <span class="hljs-string">'东坑镇'</span>,      <span class="hljs-number">441906</span>: <span class="hljs-string">'樟木头镇'</span>,      <span class="hljs-number">441907</span>: <span class="hljs-string">'莞城街道办事处'</span>,      <span class="hljs-number">441908</span>: <span class="hljs-string">'石龙镇'</span>,      <span class="hljs-number">441909</span>: <span class="hljs-string">'桥头镇'</span>,      <span class="hljs-number">441910</span>: <span class="hljs-string">'万江街道办事处'</span>,      <span class="hljs-number">441911</span>: <span class="hljs-string">'麻涌镇'</span>,      <span class="hljs-number">441912</span>: <span class="hljs-string">'虎门镇'</span>,      <span class="hljs-number">441913</span>: <span class="hljs-string">'谢岗镇'</span>,      <span class="hljs-number">441914</span>: <span class="hljs-string">'石碣镇'</span>,      <span class="hljs-number">441915</span>: <span class="hljs-string">'茶山镇'</span>,      <span class="hljs-number">441916</span>: <span class="hljs-string">'东城街道办事处'</span>,      <span class="hljs-number">441917</span>: <span class="hljs-string">'洪梅镇'</span>,      <span class="hljs-number">441918</span>: <span class="hljs-string">'道滘镇'</span>,      <span class="hljs-number">441919</span>: <span class="hljs-string">'高埗镇'</span>,      <span class="hljs-number">441920</span>: <span class="hljs-string">'企石镇'</span>,      <span class="hljs-number">441921</span>: <span class="hljs-string">'凤岗镇'</span>,      <span class="hljs-number">441922</span>: <span class="hljs-string">'大岭山镇'</span>,      <span class="hljs-number">441923</span>: <span class="hljs-string">'松山湖管委会'</span>,      <span class="hljs-number">441924</span>: <span class="hljs-string">'清溪镇'</span>,      <span class="hljs-number">441925</span>: <span class="hljs-string">'望牛墩镇'</span>,      <span class="hljs-number">441926</span>: <span class="hljs-string">'厚街镇'</span>,      <span class="hljs-number">441927</span>: <span class="hljs-string">'常平镇'</span>,      <span class="hljs-number">441928</span>: <span class="hljs-string">'寮步镇'</span>,      <span class="hljs-number">441929</span>: <span class="hljs-string">'石排镇'</span>,      <span class="hljs-number">441930</span>: <span class="hljs-string">'横沥镇'</span>,      <span class="hljs-number">441931</span>: <span class="hljs-string">'塘厦镇'</span>,      <span class="hljs-number">441932</span>: <span class="hljs-string">'黄江镇'</span>,      <span class="hljs-number">441933</span>: <span class="hljs-string">'大朗镇'</span>,      <span class="hljs-number">441934</span>: <span class="hljs-string">'东莞港'</span>,      <span class="hljs-number">441935</span>: <span class="hljs-string">'东莞生态园'</span>,      <span class="hljs-number">441990</span>: <span class="hljs-string">'沙田镇'</span>,      <span class="hljs-number">442001</span>: <span class="hljs-string">'南头镇'</span>,      <span class="hljs-number">442002</span>: <span class="hljs-string">'神湾镇'</span>,      <span class="hljs-number">442003</span>: <span class="hljs-string">'东凤镇'</span>,      <span class="hljs-number">442004</span>: <span class="hljs-string">'五桂山街道办事处'</span>,      <span class="hljs-number">442005</span>: <span class="hljs-string">'黄圃镇'</span>,      <span class="hljs-number">442006</span>: <span class="hljs-string">'小榄镇'</span>,      <span class="hljs-number">442007</span>: <span class="hljs-string">'石岐区街道办事处'</span>,      <span class="hljs-number">442008</span>: <span class="hljs-string">'横栏镇'</span>,      <span class="hljs-number">442009</span>: <span class="hljs-string">'三角镇'</span>,      <span class="hljs-number">442010</span>: <span class="hljs-string">'三乡镇'</span>,      <span class="hljs-number">442011</span>: <span class="hljs-string">'港口镇'</span>,      <span class="hljs-number">442012</span>: <span class="hljs-string">'沙溪镇'</span>,      <span class="hljs-number">442013</span>: <span class="hljs-string">'板芙镇'</span>,      <span class="hljs-number">442015</span>: <span class="hljs-string">'东升镇'</span>,      <span class="hljs-number">442016</span>: <span class="hljs-string">'阜沙镇'</span>,      <span class="hljs-number">442017</span>: <span class="hljs-string">'民众镇'</span>,      <span class="hljs-number">442018</span>: <span class="hljs-string">'东区街道办事处'</span>,      <span class="hljs-number">442019</span>: <span class="hljs-string">'火炬开发区街道办事处'</span>,      <span class="hljs-number">442020</span>: <span class="hljs-string">'西区街道办事处'</span>,      <span class="hljs-number">442021</span>: <span class="hljs-string">'南区街道办事处'</span>,      <span class="hljs-number">442022</span>: <span class="hljs-string">'古镇镇'</span>,      <span class="hljs-number">442023</span>: <span class="hljs-string">'坦洲镇'</span>,      <span class="hljs-number">442024</span>: <span class="hljs-string">'大涌镇'</span>,      <span class="hljs-number">442025</span>: <span class="hljs-string">'南朗镇'</span>,      <span class="hljs-number">445102</span>: <span class="hljs-string">'湘桥区'</span>,      <span class="hljs-number">445103</span>: <span class="hljs-string">'潮安区'</span>,      <span class="hljs-number">445122</span>: <span class="hljs-string">'饶平县'</span>,      <span class="hljs-number">445202</span>: <span class="hljs-string">'榕城区'</span>,      <span class="hljs-number">445203</span>: <span class="hljs-string">'揭东区'</span>,      <span class="hljs-number">445222</span>: <span class="hljs-string">'揭西县'</span>,      <span class="hljs-number">445224</span>: <span class="hljs-string">'惠来县'</span>,      <span class="hljs-number">445281</span>: <span class="hljs-string">'普宁市'</span>,      <span class="hljs-number">445302</span>: <span class="hljs-string">'云城区'</span>,      <span class="hljs-number">445303</span>: <span class="hljs-string">'云安区'</span>,      <span class="hljs-number">445321</span>: <span class="hljs-string">'新兴县'</span>,      <span class="hljs-number">445322</span>: <span class="hljs-string">'郁南县'</span>,      <span class="hljs-number">445381</span>: <span class="hljs-string">'罗定市'</span>,      <span class="hljs-number">450102</span>: <span class="hljs-string">'兴宁区'</span>,      <span class="hljs-number">450103</span>: <span class="hljs-string">'青秀区'</span>,      <span class="hljs-number">450105</span>: <span class="hljs-string">'江南区'</span>,      <span class="hljs-number">450107</span>: <span class="hljs-string">'西乡塘区'</span>,      <span class="hljs-number">450108</span>: <span class="hljs-string">'良庆区'</span>,      <span class="hljs-number">450109</span>: <span class="hljs-string">'邕宁区'</span>,      <span class="hljs-number">450110</span>: <span class="hljs-string">'武鸣区'</span>,      <span class="hljs-number">450123</span>: <span class="hljs-string">'隆安县'</span>,      <span class="hljs-number">450124</span>: <span class="hljs-string">'马山县'</span>,      <span class="hljs-number">450125</span>: <span class="hljs-string">'上林县'</span>,      <span class="hljs-number">450126</span>: <span class="hljs-string">'宾阳县'</span>,      <span class="hljs-number">450127</span>: <span class="hljs-string">'横县'</span>,      <span class="hljs-number">450202</span>: <span class="hljs-string">'城中区'</span>,      <span class="hljs-number">450203</span>: <span class="hljs-string">'鱼峰区'</span>,      <span class="hljs-number">450204</span>: <span class="hljs-string">'柳南区'</span>,      <span class="hljs-number">450205</span>: <span class="hljs-string">'柳北区'</span>,      <span class="hljs-number">450206</span>: <span class="hljs-string">'柳江区'</span>,      <span class="hljs-number">450222</span>: <span class="hljs-string">'柳城县'</span>,      <span class="hljs-number">450223</span>: <span class="hljs-string">'鹿寨县'</span>,      <span class="hljs-number">450224</span>: <span class="hljs-string">'融安县'</span>,      <span class="hljs-number">450225</span>: <span class="hljs-string">'融水苗族自治县'</span>,      <span class="hljs-number">450226</span>: <span class="hljs-string">'三江侗族自治县'</span>,      <span class="hljs-number">450302</span>: <span class="hljs-string">'秀峰区'</span>,      <span class="hljs-number">450303</span>: <span class="hljs-string">'叠彩区'</span>,      <span class="hljs-number">450304</span>: <span class="hljs-string">'象山区'</span>,      <span class="hljs-number">450305</span>: <span class="hljs-string">'七星区'</span>,      <span class="hljs-number">450311</span>: <span class="hljs-string">'雁山区'</span>,      <span class="hljs-number">450312</span>: <span class="hljs-string">'临桂区'</span>,      <span class="hljs-number">450321</span>: <span class="hljs-string">'阳朔县'</span>,      <span class="hljs-number">450323</span>: <span class="hljs-string">'灵川县'</span>,      <span class="hljs-number">450324</span>: <span class="hljs-string">'全州县'</span>,      <span class="hljs-number">450325</span>: <span class="hljs-string">'兴安县'</span>,      <span class="hljs-number">450326</span>: <span class="hljs-string">'永福县'</span>,      <span class="hljs-number">450327</span>: <span class="hljs-string">'灌阳县'</span>,      <span class="hljs-number">450328</span>: <span class="hljs-string">'龙胜各族自治县'</span>,      <span class="hljs-number">450329</span>: <span class="hljs-string">'资源县'</span>,      <span class="hljs-number">450330</span>: <span class="hljs-string">'平乐县'</span>,      <span class="hljs-number">450332</span>: <span class="hljs-string">'恭城瑶族自治县'</span>,      <span class="hljs-number">450381</span>: <span class="hljs-string">'荔浦市'</span>,      <span class="hljs-number">450403</span>: <span class="hljs-string">'万秀区'</span>,      <span class="hljs-number">450405</span>: <span class="hljs-string">'长洲区'</span>,      <span class="hljs-number">450406</span>: <span class="hljs-string">'龙圩区'</span>,      <span class="hljs-number">450421</span>: <span class="hljs-string">'苍梧县'</span>,      <span class="hljs-number">450422</span>: <span class="hljs-string">'藤县'</span>,      <span class="hljs-number">450423</span>: <span class="hljs-string">'蒙山县'</span>,      <span class="hljs-number">450481</span>: <span class="hljs-string">'岑溪市'</span>,      <span class="hljs-number">450502</span>: <span class="hljs-string">'海城区'</span>,      <span class="hljs-number">450503</span>: <span class="hljs-string">'银海区'</span>,      <span class="hljs-number">450512</span>: <span class="hljs-string">'铁山港区'</span>,      <span class="hljs-number">450521</span>: <span class="hljs-string">'合浦县'</span>,      <span class="hljs-number">450602</span>: <span class="hljs-string">'港口区'</span>,      <span class="hljs-number">450603</span>: <span class="hljs-string">'防城区'</span>,      <span class="hljs-number">450621</span>: <span class="hljs-string">'上思县'</span>,      <span class="hljs-number">450681</span>: <span class="hljs-string">'东兴市'</span>,      <span class="hljs-number">450702</span>: <span class="hljs-string">'钦南区'</span>,      <span class="hljs-number">450703</span>: <span class="hljs-string">'钦北区'</span>,      <span class="hljs-number">450721</span>: <span class="hljs-string">'灵山县'</span>,      <span class="hljs-number">450722</span>: <span class="hljs-string">'浦北县'</span>,      <span class="hljs-number">450802</span>: <span class="hljs-string">'港北区'</span>,      <span class="hljs-number">450803</span>: <span class="hljs-string">'港南区'</span>,      <span class="hljs-number">450804</span>: <span class="hljs-string">'覃塘区'</span>,      <span class="hljs-number">450821</span>: <span class="hljs-string">'平南县'</span>,      <span class="hljs-number">450881</span>: <span class="hljs-string">'桂平市'</span>,      <span class="hljs-number">450902</span>: <span class="hljs-string">'玉州区'</span>,      <span class="hljs-number">450903</span>: <span class="hljs-string">'福绵区'</span>,      <span class="hljs-number">450921</span>: <span class="hljs-string">'容县'</span>,      <span class="hljs-number">450922</span>: <span class="hljs-string">'陆川县'</span>,      <span class="hljs-number">450923</span>: <span class="hljs-string">'博白县'</span>,      <span class="hljs-number">450924</span>: <span class="hljs-string">'兴业县'</span>,      <span class="hljs-number">450981</span>: <span class="hljs-string">'北流市'</span>,      <span class="hljs-number">451002</span>: <span class="hljs-string">'右江区'</span>,      <span class="hljs-number">451021</span>: <span class="hljs-string">'田阳县'</span>,      <span class="hljs-number">451022</span>: <span class="hljs-string">'田东县'</span>,      <span class="hljs-number">451023</span>: <span class="hljs-string">'平果县'</span>,      <span class="hljs-number">451024</span>: <span class="hljs-string">'德保县'</span>,      <span class="hljs-number">451026</span>: <span class="hljs-string">'那坡县'</span>,      <span class="hljs-number">451027</span>: <span class="hljs-string">'凌云县'</span>,      <span class="hljs-number">451028</span>: <span class="hljs-string">'乐业县'</span>,      <span class="hljs-number">451029</span>: <span class="hljs-string">'田林县'</span>,      <span class="hljs-number">451030</span>: <span class="hljs-string">'西林县'</span>,      <span class="hljs-number">451031</span>: <span class="hljs-string">'隆林各族自治县'</span>,      <span class="hljs-number">451081</span>: <span class="hljs-string">'靖西市'</span>,      <span class="hljs-number">451102</span>: <span class="hljs-string">'八步区'</span>,      <span class="hljs-number">451103</span>: <span class="hljs-string">'平桂区'</span>,      <span class="hljs-number">451121</span>: <span class="hljs-string">'昭平县'</span>,      <span class="hljs-number">451122</span>: <span class="hljs-string">'钟山县'</span>,      <span class="hljs-number">451123</span>: <span class="hljs-string">'富川瑶族自治县'</span>,      <span class="hljs-number">451202</span>: <span class="hljs-string">'金城江区'</span>,      <span class="hljs-number">451203</span>: <span class="hljs-string">'宜州区'</span>,      <span class="hljs-number">451221</span>: <span class="hljs-string">'南丹县'</span>,      <span class="hljs-number">451222</span>: <span class="hljs-string">'天峨县'</span>,      <span class="hljs-number">451223</span>: <span class="hljs-string">'凤山县'</span>,      <span class="hljs-number">451224</span>: <span class="hljs-string">'东兰县'</span>,      <span class="hljs-number">451225</span>: <span class="hljs-string">'罗城仫佬族自治县'</span>,      <span class="hljs-number">451226</span>: <span class="hljs-string">'环江毛南族自治县'</span>,      <span class="hljs-number">451227</span>: <span class="hljs-string">'巴马瑶族自治县'</span>,      <span class="hljs-number">451228</span>: <span class="hljs-string">'都安瑶族自治县'</span>,      <span class="hljs-number">451229</span>: <span class="hljs-string">'大化瑶族自治县'</span>,      <span class="hljs-number">451302</span>: <span class="hljs-string">'兴宾区'</span>,      <span class="hljs-number">451321</span>: <span class="hljs-string">'忻城县'</span>,      <span class="hljs-number">451322</span>: <span class="hljs-string">'象州县'</span>,      <span class="hljs-number">451323</span>: <span class="hljs-string">'武宣县'</span>,      <span class="hljs-number">451324</span>: <span class="hljs-string">'金秀瑶族自治县'</span>,      <span class="hljs-number">451381</span>: <span class="hljs-string">'合山市'</span>,      <span class="hljs-number">451402</span>: <span class="hljs-string">'江州区'</span>,      <span class="hljs-number">451421</span>: <span class="hljs-string">'扶绥县'</span>,      <span class="hljs-number">451422</span>: <span class="hljs-string">'宁明县'</span>,      <span class="hljs-number">451423</span>: <span class="hljs-string">'龙州县'</span>,      <span class="hljs-number">451424</span>: <span class="hljs-string">'大新县'</span>,      <span class="hljs-number">451425</span>: <span class="hljs-string">'天等县'</span>,      <span class="hljs-number">451481</span>: <span class="hljs-string">'凭祥市'</span>,      <span class="hljs-number">460105</span>: <span class="hljs-string">'秀英区'</span>,      <span class="hljs-number">460106</span>: <span class="hljs-string">'龙华区'</span>,      <span class="hljs-number">460107</span>: <span class="hljs-string">'琼山区'</span>,      <span class="hljs-number">460108</span>: <span class="hljs-string">'美兰区'</span>,      <span class="hljs-number">460202</span>: <span class="hljs-string">'海棠区'</span>,      <span class="hljs-number">460203</span>: <span class="hljs-string">'吉阳区'</span>,      <span class="hljs-number">460204</span>: <span class="hljs-string">'天涯区'</span>,      <span class="hljs-number">460205</span>: <span class="hljs-string">'崖州区'</span>,      <span class="hljs-number">460321</span>: <span class="hljs-string">'西沙群岛'</span>,      <span class="hljs-number">460322</span>: <span class="hljs-string">'南沙群岛'</span>,      <span class="hljs-number">460323</span>: <span class="hljs-string">'中沙群岛的岛礁及其海域'</span>,      <span class="hljs-number">460401</span>: <span class="hljs-string">'那大镇'</span>,      <span class="hljs-number">460402</span>: <span class="hljs-string">'和庆镇'</span>,      <span class="hljs-number">460403</span>: <span class="hljs-string">'南丰镇'</span>,      <span class="hljs-number">460404</span>: <span class="hljs-string">'大成镇'</span>,      <span class="hljs-number">460405</span>: <span class="hljs-string">'雅星镇'</span>,      <span class="hljs-number">460406</span>: <span class="hljs-string">'兰洋镇'</span>,      <span class="hljs-number">460407</span>: <span class="hljs-string">'光村镇'</span>,      <span class="hljs-number">460408</span>: <span class="hljs-string">'木棠镇'</span>,      <span class="hljs-number">460409</span>: <span class="hljs-string">'海头镇'</span>,      <span class="hljs-number">460410</span>: <span class="hljs-string">'峨蔓镇'</span>,      <span class="hljs-number">460411</span>: <span class="hljs-string">'王五镇'</span>,      <span class="hljs-number">460412</span>: <span class="hljs-string">'白马井镇'</span>,      <span class="hljs-number">460413</span>: <span class="hljs-string">'中和镇'</span>,      <span class="hljs-number">460414</span>: <span class="hljs-string">'排浦镇'</span>,      <span class="hljs-number">460415</span>: <span class="hljs-string">'东成镇'</span>,      <span class="hljs-number">460416</span>: <span class="hljs-string">'新州镇'</span>,      <span class="hljs-number">460417</span>: <span class="hljs-string">'洋浦经济开发区'</span>,      <span class="hljs-number">460418</span>: <span class="hljs-string">'华南热作学院'</span>,      <span class="hljs-number">469001</span>: <span class="hljs-string">'五指山市'</span>,      <span class="hljs-number">469002</span>: <span class="hljs-string">'琼海市'</span>,      <span class="hljs-number">469005</span>: <span class="hljs-string">'文昌市'</span>,      <span class="hljs-number">469006</span>: <span class="hljs-string">'万宁市'</span>,      <span class="hljs-number">469007</span>: <span class="hljs-string">'东方市'</span>,      <span class="hljs-number">469021</span>: <span class="hljs-string">'定安县'</span>,      <span class="hljs-number">469022</span>: <span class="hljs-string">'屯昌县'</span>,      <span class="hljs-number">469023</span>: <span class="hljs-string">'澄迈县'</span>,      <span class="hljs-number">469024</span>: <span class="hljs-string">'临高县'</span>,      <span class="hljs-number">469025</span>: <span class="hljs-string">'白沙黎族自治县'</span>,      <span class="hljs-number">469026</span>: <span class="hljs-string">'昌江黎族自治县'</span>,      <span class="hljs-number">469027</span>: <span class="hljs-string">'乐东黎族自治县'</span>,      <span class="hljs-number">469028</span>: <span class="hljs-string">'陵水黎族自治县'</span>,      <span class="hljs-number">469029</span>: <span class="hljs-string">'保亭黎族苗族自治县'</span>,      <span class="hljs-number">469030</span>: <span class="hljs-string">'琼中黎族苗族自治县'</span>,      <span class="hljs-number">500101</span>: <span class="hljs-string">'万州区'</span>,      <span class="hljs-number">500102</span>: <span class="hljs-string">'涪陵区'</span>,      <span class="hljs-number">500103</span>: <span class="hljs-string">'渝中区'</span>,      <span class="hljs-number">500104</span>: <span class="hljs-string">'大渡口区'</span>,      <span class="hljs-number">500105</span>: <span class="hljs-string">'江北区'</span>,      <span class="hljs-number">500106</span>: <span class="hljs-string">'沙坪坝区'</span>,      <span class="hljs-number">500107</span>: <span class="hljs-string">'九龙坡区'</span>,      <span class="hljs-number">500108</span>: <span class="hljs-string">'南岸区'</span>,      <span class="hljs-number">500109</span>: <span class="hljs-string">'北碚区'</span>,      <span class="hljs-number">500110</span>: <span class="hljs-string">'綦江区'</span>,      <span class="hljs-number">500111</span>: <span class="hljs-string">'大足区'</span>,      <span class="hljs-number">500112</span>: <span class="hljs-string">'渝北区'</span>,      <span class="hljs-number">500113</span>: <span class="hljs-string">'巴南区'</span>,      <span class="hljs-number">500114</span>: <span class="hljs-string">'黔江区'</span>,      <span class="hljs-number">500115</span>: <span class="hljs-string">'长寿区'</span>,      <span class="hljs-number">500116</span>: <span class="hljs-string">'江津区'</span>,      <span class="hljs-number">500117</span>: <span class="hljs-string">'合川区'</span>,      <span class="hljs-number">500118</span>: <span class="hljs-string">'永川区'</span>,      <span class="hljs-number">500119</span>: <span class="hljs-string">'南川区'</span>,      <span class="hljs-number">500120</span>: <span class="hljs-string">'璧山区'</span>,      <span class="hljs-number">500151</span>: <span class="hljs-string">'铜梁区'</span>,      <span class="hljs-number">500152</span>: <span class="hljs-string">'潼南区'</span>,      <span class="hljs-number">500153</span>: <span class="hljs-string">'荣昌区'</span>,      <span class="hljs-number">500154</span>: <span class="hljs-string">'开州区'</span>,      <span class="hljs-number">500155</span>: <span class="hljs-string">'梁平区'</span>,      <span class="hljs-number">500156</span>: <span class="hljs-string">'武隆区'</span>,      <span class="hljs-number">500229</span>: <span class="hljs-string">'城口县'</span>,      <span class="hljs-number">500230</span>: <span class="hljs-string">'丰都县'</span>,      <span class="hljs-number">500231</span>: <span class="hljs-string">'垫江县'</span>,      <span class="hljs-number">500233</span>: <span class="hljs-string">'忠县'</span>,      <span class="hljs-number">500235</span>: <span class="hljs-string">'云阳县'</span>,      <span class="hljs-number">500236</span>: <span class="hljs-string">'奉节县'</span>,      <span class="hljs-number">500237</span>: <span class="hljs-string">'巫山县'</span>,      <span class="hljs-number">500238</span>: <span class="hljs-string">'巫溪县'</span>,      <span class="hljs-number">500240</span>: <span class="hljs-string">'石柱土家族自治县'</span>,      <span class="hljs-number">500241</span>: <span class="hljs-string">'秀山土家族苗族自治县'</span>,      <span class="hljs-number">500242</span>: <span class="hljs-string">'酉阳土家族苗族自治县'</span>,      <span class="hljs-number">500243</span>: <span class="hljs-string">'彭水苗族土家族自治县'</span>,      <span class="hljs-number">510104</span>: <span class="hljs-string">'锦江区'</span>,      <span class="hljs-number">510105</span>: <span class="hljs-string">'青羊区'</span>,      <span class="hljs-number">510106</span>: <span class="hljs-string">'金牛区'</span>,      <span class="hljs-number">510107</span>: <span class="hljs-string">'武侯区'</span>,      <span class="hljs-number">510108</span>: <span class="hljs-string">'成华区'</span>,      <span class="hljs-number">510112</span>: <span class="hljs-string">'龙泉驿区'</span>,      <span class="hljs-number">510113</span>: <span class="hljs-string">'青白江区'</span>,      <span class="hljs-number">510114</span>: <span class="hljs-string">'新都区'</span>,      <span class="hljs-number">510115</span>: <span class="hljs-string">'温江区'</span>,      <span class="hljs-number">510116</span>: <span class="hljs-string">'双流区'</span>,      <span class="hljs-number">510117</span>: <span class="hljs-string">'郫都区'</span>,      <span class="hljs-number">510121</span>: <span class="hljs-string">'金堂县'</span>,      <span class="hljs-number">510129</span>: <span class="hljs-string">'大邑县'</span>,      <span class="hljs-number">510131</span>: <span class="hljs-string">'蒲江县'</span>,      <span class="hljs-number">510132</span>: <span class="hljs-string">'新津县'</span>,      <span class="hljs-number">510181</span>: <span class="hljs-string">'都江堰市'</span>,      <span class="hljs-number">510182</span>: <span class="hljs-string">'彭州市'</span>,      <span class="hljs-number">510183</span>: <span class="hljs-string">'邛崃市'</span>,      <span class="hljs-number">510184</span>: <span class="hljs-string">'崇州市'</span>,      <span class="hljs-number">510185</span>: <span class="hljs-string">'简阳市'</span>,      <span class="hljs-number">510191</span>: <span class="hljs-string">'高新区'</span>,      <span class="hljs-number">510302</span>: <span class="hljs-string">'自流井区'</span>,      <span class="hljs-number">510303</span>: <span class="hljs-string">'贡井区'</span>,      <span class="hljs-number">510304</span>: <span class="hljs-string">'大安区'</span>,      <span class="hljs-number">510311</span>: <span class="hljs-string">'沿滩区'</span>,      <span class="hljs-number">510321</span>: <span class="hljs-string">'荣县'</span>,      <span class="hljs-number">510322</span>: <span class="hljs-string">'富顺县'</span>,      <span class="hljs-number">510402</span>: <span class="hljs-string">'东区'</span>,      <span class="hljs-number">510403</span>: <span class="hljs-string">'西区'</span>,      <span class="hljs-number">510411</span>: <span class="hljs-string">'仁和区'</span>,      <span class="hljs-number">510421</span>: <span class="hljs-string">'米易县'</span>,      <span class="hljs-number">510422</span>: <span class="hljs-string">'盐边县'</span>,      <span class="hljs-number">510502</span>: <span class="hljs-string">'江阳区'</span>,      <span class="hljs-number">510503</span>: <span class="hljs-string">'纳溪区'</span>,      <span class="hljs-number">510504</span>: <span class="hljs-string">'龙马潭区'</span>,      <span class="hljs-number">510521</span>: <span class="hljs-string">'泸县'</span>,      <span class="hljs-number">510522</span>: <span class="hljs-string">'合江县'</span>,      <span class="hljs-number">510524</span>: <span class="hljs-string">'叙永县'</span>,      <span class="hljs-number">510525</span>: <span class="hljs-string">'古蔺县'</span>,      <span class="hljs-number">510603</span>: <span class="hljs-string">'旌阳区'</span>,      <span class="hljs-number">510604</span>: <span class="hljs-string">'罗江区'</span>,      <span class="hljs-number">510623</span>: <span class="hljs-string">'中江县'</span>,      <span class="hljs-number">510681</span>: <span class="hljs-string">'广汉市'</span>,      <span class="hljs-number">510682</span>: <span class="hljs-string">'什邡市'</span>,      <span class="hljs-number">510683</span>: <span class="hljs-string">'绵竹市'</span>,      <span class="hljs-number">510703</span>: <span class="hljs-string">'涪城区'</span>,      <span class="hljs-number">510704</span>: <span class="hljs-string">'游仙区'</span>,      <span class="hljs-number">510705</span>: <span class="hljs-string">'安州区'</span>,      <span class="hljs-number">510722</span>: <span class="hljs-string">'三台县'</span>,      <span class="hljs-number">510723</span>: <span class="hljs-string">'盐亭县'</span>,      <span class="hljs-number">510725</span>: <span class="hljs-string">'梓潼县'</span>,      <span class="hljs-number">510726</span>: <span class="hljs-string">'北川羌族自治县'</span>,      <span class="hljs-number">510727</span>: <span class="hljs-string">'平武县'</span>,      <span class="hljs-number">510781</span>: <span class="hljs-string">'江油市'</span>,      <span class="hljs-number">510791</span>: <span class="hljs-string">'高新区'</span>,      <span class="hljs-number">510802</span>: <span class="hljs-string">'利州区'</span>,      <span class="hljs-number">510811</span>: <span class="hljs-string">'昭化区'</span>,      <span class="hljs-number">510812</span>: <span class="hljs-string">'朝天区'</span>,      <span class="hljs-number">510821</span>: <span class="hljs-string">'旺苍县'</span>,      <span class="hljs-number">510822</span>: <span class="hljs-string">'青川县'</span>,      <span class="hljs-number">510823</span>: <span class="hljs-string">'剑阁县'</span>,      <span class="hljs-number">510824</span>: <span class="hljs-string">'苍溪县'</span>,      <span class="hljs-number">510903</span>: <span class="hljs-string">'船山区'</span>,      <span class="hljs-number">510904</span>: <span class="hljs-string">'安居区'</span>,      <span class="hljs-number">510921</span>: <span class="hljs-string">'蓬溪县'</span>,      <span class="hljs-number">510922</span>: <span class="hljs-string">'射洪县'</span>,      <span class="hljs-number">510923</span>: <span class="hljs-string">'大英县'</span>,      <span class="hljs-number">511002</span>: <span class="hljs-string">'市中区'</span>,      <span class="hljs-number">511011</span>: <span class="hljs-string">'东兴区'</span>,      <span class="hljs-number">511024</span>: <span class="hljs-string">'威远县'</span>,      <span class="hljs-number">511025</span>: <span class="hljs-string">'资中县'</span>,      <span class="hljs-number">511083</span>: <span class="hljs-string">'隆昌市'</span>,      <span class="hljs-number">511102</span>: <span class="hljs-string">'市中区'</span>,      <span class="hljs-number">511111</span>: <span class="hljs-string">'沙湾区'</span>,      <span class="hljs-number">511112</span>: <span class="hljs-string">'五通桥区'</span>,      <span class="hljs-number">511113</span>: <span class="hljs-string">'金口河区'</span>,      <span class="hljs-number">511123</span>: <span class="hljs-string">'犍为县'</span>,      <span class="hljs-number">511124</span>: <span class="hljs-string">'井研县'</span>,      <span class="hljs-number">511126</span>: <span class="hljs-string">'夹江县'</span>,      <span class="hljs-number">511129</span>: <span class="hljs-string">'沐川县'</span>,      <span class="hljs-number">511132</span>: <span class="hljs-string">'峨边彝族自治县'</span>,      <span class="hljs-number">511133</span>: <span class="hljs-string">'马边彝族自治县'</span>,      <span class="hljs-number">511181</span>: <span class="hljs-string">'峨眉山市'</span>,      <span class="hljs-number">511302</span>: <span class="hljs-string">'顺庆区'</span>,      <span class="hljs-number">511303</span>: <span class="hljs-string">'高坪区'</span>,      <span class="hljs-number">511304</span>: <span class="hljs-string">'嘉陵区'</span>,      <span class="hljs-number">511321</span>: <span class="hljs-string">'南部县'</span>,      <span class="hljs-number">511322</span>: <span class="hljs-string">'营山县'</span>,      <span class="hljs-number">511323</span>: <span class="hljs-string">'蓬安县'</span>,      <span class="hljs-number">511324</span>: <span class="hljs-string">'仪陇县'</span>,      <span class="hljs-number">511325</span>: <span class="hljs-string">'西充县'</span>,      <span class="hljs-number">511381</span>: <span class="hljs-string">'阆中市'</span>,      <span class="hljs-number">511402</span>: <span class="hljs-string">'东坡区'</span>,      <span class="hljs-number">511403</span>: <span class="hljs-string">'彭山区'</span>,      <span class="hljs-number">511421</span>: <span class="hljs-string">'仁寿县'</span>,      <span class="hljs-number">511423</span>: <span class="hljs-string">'洪雅县'</span>,      <span class="hljs-number">511424</span>: <span class="hljs-string">'丹棱县'</span>,      <span class="hljs-number">511425</span>: <span class="hljs-string">'青神县'</span>,      <span class="hljs-number">511502</span>: <span class="hljs-string">'翠屏区'</span>,      <span class="hljs-number">511503</span>: <span class="hljs-string">'南溪区'</span>,      <span class="hljs-number">511504</span>: <span class="hljs-string">'叙州区'</span>,      <span class="hljs-number">511523</span>: <span class="hljs-string">'江安县'</span>,      <span class="hljs-number">511524</span>: <span class="hljs-string">'长宁县'</span>,      <span class="hljs-number">511525</span>: <span class="hljs-string">'高县'</span>,      <span class="hljs-number">511526</span>: <span class="hljs-string">'珙县'</span>,      <span class="hljs-number">511527</span>: <span class="hljs-string">'筠连县'</span>,      <span class="hljs-number">511528</span>: <span class="hljs-string">'兴文县'</span>,      <span class="hljs-number">511529</span>: <span class="hljs-string">'屏山县'</span>,      <span class="hljs-number">511602</span>: <span class="hljs-string">'广安区'</span>,      <span class="hljs-number">511603</span>: <span class="hljs-string">'前锋区'</span>,      <span class="hljs-number">511621</span>: <span class="hljs-string">'岳池县'</span>,      <span class="hljs-number">511622</span>: <span class="hljs-string">'武胜县'</span>,      <span class="hljs-number">511623</span>: <span class="hljs-string">'邻水县'</span>,      <span class="hljs-number">511681</span>: <span class="hljs-string">'华蓥市'</span>,      <span class="hljs-number">511702</span>: <span class="hljs-string">'通川区'</span>,      <span class="hljs-number">511703</span>: <span class="hljs-string">'达川区'</span>,      <span class="hljs-number">511722</span>: <span class="hljs-string">'宣汉县'</span>,      <span class="hljs-number">511723</span>: <span class="hljs-string">'开江县'</span>,      <span class="hljs-number">511724</span>: <span class="hljs-string">'大竹县'</span>,      <span class="hljs-number">511725</span>: <span class="hljs-string">'渠县'</span>,      <span class="hljs-number">511781</span>: <span class="hljs-string">'万源市'</span>,      <span class="hljs-number">511802</span>: <span class="hljs-string">'雨城区'</span>,      <span class="hljs-number">511803</span>: <span class="hljs-string">'名山区'</span>,      <span class="hljs-number">511822</span>: <span class="hljs-string">'荥经县'</span>,      <span class="hljs-number">511823</span>: <span class="hljs-string">'汉源县'</span>,      <span class="hljs-number">511824</span>: <span class="hljs-string">'石棉县'</span>,      <span class="hljs-number">511825</span>: <span class="hljs-string">'天全县'</span>,      <span class="hljs-number">511826</span>: <span class="hljs-string">'芦山县'</span>,      <span class="hljs-number">511827</span>: <span class="hljs-string">'宝兴县'</span>,      <span class="hljs-number">511902</span>: <span class="hljs-string">'巴州区'</span>,      <span class="hljs-number">511903</span>: <span class="hljs-string">'恩阳区'</span>,      <span class="hljs-number">511921</span>: <span class="hljs-string">'通江县'</span>,      <span class="hljs-number">511922</span>: <span class="hljs-string">'南江县'</span>,      <span class="hljs-number">511923</span>: <span class="hljs-string">'平昌县'</span>,      <span class="hljs-number">512002</span>: <span class="hljs-string">'雁江区'</span>,      <span class="hljs-number">512021</span>: <span class="hljs-string">'安岳县'</span>,      <span class="hljs-number">512022</span>: <span class="hljs-string">'乐至县'</span>,      <span class="hljs-number">513201</span>: <span class="hljs-string">'马尔康市'</span>,      <span class="hljs-number">513221</span>: <span class="hljs-string">'汶川县'</span>,      <span class="hljs-number">513222</span>: <span class="hljs-string">'理县'</span>,      <span class="hljs-number">513223</span>: <span class="hljs-string">'茂县'</span>,      <span class="hljs-number">513224</span>: <span class="hljs-string">'松潘县'</span>,      <span class="hljs-number">513225</span>: <span class="hljs-string">'九寨沟县'</span>,      <span class="hljs-number">513226</span>: <span class="hljs-string">'金川县'</span>,      <span class="hljs-number">513227</span>: <span class="hljs-string">'小金县'</span>,      <span class="hljs-number">513228</span>: <span class="hljs-string">'黑水县'</span>,      <span class="hljs-number">513230</span>: <span class="hljs-string">'壤塘县'</span>,      <span class="hljs-number">513231</span>: <span class="hljs-string">'阿坝县'</span>,      <span class="hljs-number">513232</span>: <span class="hljs-string">'若尔盖县'</span>,      <span class="hljs-number">513233</span>: <span class="hljs-string">'红原县'</span>,      <span class="hljs-number">513301</span>: <span class="hljs-string">'康定市'</span>,      <span class="hljs-number">513322</span>: <span class="hljs-string">'泸定县'</span>,      <span class="hljs-number">513323</span>: <span class="hljs-string">'丹巴县'</span>,      <span class="hljs-number">513324</span>: <span class="hljs-string">'九龙县'</span>,      <span class="hljs-number">513325</span>: <span class="hljs-string">'雅江县'</span>,      <span class="hljs-number">513326</span>: <span class="hljs-string">'道孚县'</span>,      <span class="hljs-number">513327</span>: <span class="hljs-string">'炉霍县'</span>,      <span class="hljs-number">513328</span>: <span class="hljs-string">'甘孜县'</span>,      <span class="hljs-number">513329</span>: <span class="hljs-string">'新龙县'</span>,      <span class="hljs-number">513330</span>: <span class="hljs-string">'德格县'</span>,      <span class="hljs-number">513331</span>: <span class="hljs-string">'白玉县'</span>,      <span class="hljs-number">513332</span>: <span class="hljs-string">'石渠县'</span>,      <span class="hljs-number">513333</span>: <span class="hljs-string">'色达县'</span>,      <span class="hljs-number">513334</span>: <span class="hljs-string">'理塘县'</span>,      <span class="hljs-number">513335</span>: <span class="hljs-string">'巴塘县'</span>,      <span class="hljs-number">513336</span>: <span class="hljs-string">'乡城县'</span>,      <span class="hljs-number">513337</span>: <span class="hljs-string">'稻城县'</span>,      <span class="hljs-number">513338</span>: <span class="hljs-string">'得荣县'</span>,      <span class="hljs-number">513401</span>: <span class="hljs-string">'西昌市'</span>,      <span class="hljs-number">513422</span>: <span class="hljs-string">'木里藏族自治县'</span>,      <span class="hljs-number">513423</span>: <span class="hljs-string">'盐源县'</span>,      <span class="hljs-number">513424</span>: <span class="hljs-string">'德昌县'</span>,      <span class="hljs-number">513425</span>: <span class="hljs-string">'会理县'</span>,      <span class="hljs-number">513426</span>: <span class="hljs-string">'会东县'</span>,      <span class="hljs-number">513427</span>: <span class="hljs-string">'宁南县'</span>,      <span class="hljs-number">513428</span>: <span class="hljs-string">'普格县'</span>,      <span class="hljs-number">513429</span>: <span class="hljs-string">'布拖县'</span>,      <span class="hljs-number">513430</span>: <span class="hljs-string">'金阳县'</span>,      <span class="hljs-number">513431</span>: <span class="hljs-string">'昭觉县'</span>,      <span class="hljs-number">513432</span>: <span class="hljs-string">'喜德县'</span>,      <span class="hljs-number">513433</span>: <span class="hljs-string">'冕宁县'</span>,      <span class="hljs-number">513434</span>: <span class="hljs-string">'越西县'</span>,      <span class="hljs-number">513435</span>: <span class="hljs-string">'甘洛县'</span>,      <span class="hljs-number">513436</span>: <span class="hljs-string">'美姑县'</span>,      <span class="hljs-number">513437</span>: <span class="hljs-string">'雷波县'</span>,      <span class="hljs-number">520102</span>: <span class="hljs-string">'南明区'</span>,      <span class="hljs-number">520103</span>: <span class="hljs-string">'云岩区'</span>,      <span class="hljs-number">520111</span>: <span class="hljs-string">'花溪区'</span>,      <span class="hljs-number">520112</span>: <span class="hljs-string">'乌当区'</span>,      <span class="hljs-number">520113</span>: <span class="hljs-string">'白云区'</span>,      <span class="hljs-number">520115</span>: <span class="hljs-string">'观山湖区'</span>,      <span class="hljs-number">520121</span>: <span class="hljs-string">'开阳县'</span>,      <span class="hljs-number">520122</span>: <span class="hljs-string">'息烽县'</span>,      <span class="hljs-number">520123</span>: <span class="hljs-string">'修文县'</span>,      <span class="hljs-number">520181</span>: <span class="hljs-string">'清镇市'</span>,      <span class="hljs-number">520201</span>: <span class="hljs-string">'钟山区'</span>,      <span class="hljs-number">520203</span>: <span class="hljs-string">'六枝特区'</span>,      <span class="hljs-number">520221</span>: <span class="hljs-string">'水城县'</span>,      <span class="hljs-number">520281</span>: <span class="hljs-string">'盘州市'</span>,      <span class="hljs-number">520302</span>: <span class="hljs-string">'红花岗区'</span>,      <span class="hljs-number">520303</span>: <span class="hljs-string">'汇川区'</span>,      <span class="hljs-number">520304</span>: <span class="hljs-string">'播州区'</span>,      <span class="hljs-number">520322</span>: <span class="hljs-string">'桐梓县'</span>,      <span class="hljs-number">520323</span>: <span class="hljs-string">'绥阳县'</span>,      <span class="hljs-number">520324</span>: <span class="hljs-string">'正安县'</span>,      <span class="hljs-number">520325</span>: <span class="hljs-string">'道真仡佬族苗族自治县'</span>,      <span class="hljs-number">520326</span>: <span class="hljs-string">'务川仡佬族苗族自治县'</span>,      <span class="hljs-number">520327</span>: <span class="hljs-string">'凤冈县'</span>,      <span class="hljs-number">520328</span>: <span class="hljs-string">'湄潭县'</span>,      <span class="hljs-number">520329</span>: <span class="hljs-string">'余庆县'</span>,      <span class="hljs-number">520330</span>: <span class="hljs-string">'习水县'</span>,      <span class="hljs-number">520381</span>: <span class="hljs-string">'赤水市'</span>,      <span class="hljs-number">520382</span>: <span class="hljs-string">'仁怀市'</span>,      <span class="hljs-number">520402</span>: <span class="hljs-string">'西秀区'</span>,      <span class="hljs-number">520403</span>: <span class="hljs-string">'平坝区'</span>,      <span class="hljs-number">520422</span>: <span class="hljs-string">'普定县'</span>,      <span class="hljs-number">520423</span>: <span class="hljs-string">'镇宁布依族苗族自治县'</span>,      <span class="hljs-number">520424</span>: <span class="hljs-string">'关岭布依族苗族自治县'</span>,      <span class="hljs-number">520425</span>: <span class="hljs-string">'紫云苗族布依族自治县'</span>,      <span class="hljs-number">520502</span>: <span class="hljs-string">'七星关区'</span>,      <span class="hljs-number">520521</span>: <span class="hljs-string">'大方县'</span>,      <span class="hljs-number">520522</span>: <span class="hljs-string">'黔西县'</span>,      <span class="hljs-number">520523</span>: <span class="hljs-string">'金沙县'</span>,      <span class="hljs-number">520524</span>: <span class="hljs-string">'织金县'</span>,      <span class="hljs-number">520525</span>: <span class="hljs-string">'纳雍县'</span>,      <span class="hljs-number">520526</span>: <span class="hljs-string">'威宁彝族回族苗族自治县'</span>,      <span class="hljs-number">520527</span>: <span class="hljs-string">'赫章县'</span>,      <span class="hljs-number">520602</span>: <span class="hljs-string">'碧江区'</span>,      <span class="hljs-number">520603</span>: <span class="hljs-string">'万山区'</span>,      <span class="hljs-number">520621</span>: <span class="hljs-string">'江口县'</span>,      <span class="hljs-number">520622</span>: <span class="hljs-string">'玉屏侗族自治县'</span>,      <span class="hljs-number">520623</span>: <span class="hljs-string">'石阡县'</span>,      <span class="hljs-number">520624</span>: <span class="hljs-string">'思南县'</span>,      <span class="hljs-number">520625</span>: <span class="hljs-string">'印江土家族苗族自治县'</span>,      <span class="hljs-number">520626</span>: <span class="hljs-string">'德江县'</span>,      <span class="hljs-number">520627</span>: <span class="hljs-string">'沿河土家族自治县'</span>,      <span class="hljs-number">520628</span>: <span class="hljs-string">'松桃苗族自治县'</span>,      <span class="hljs-number">522301</span>: <span class="hljs-string">'兴义市'</span>,      <span class="hljs-number">522302</span>: <span class="hljs-string">'兴仁市'</span>,      <span class="hljs-number">522323</span>: <span class="hljs-string">'普安县'</span>,      <span class="hljs-number">522324</span>: <span class="hljs-string">'晴隆县'</span>,      <span class="hljs-number">522325</span>: <span class="hljs-string">'贞丰县'</span>,      <span class="hljs-number">522326</span>: <span class="hljs-string">'望谟县'</span>,      <span class="hljs-number">522327</span>: <span class="hljs-string">'册亨县'</span>,      <span class="hljs-number">522328</span>: <span class="hljs-string">'安龙县'</span>,      <span class="hljs-number">522601</span>: <span class="hljs-string">'凯里市'</span>,      <span class="hljs-number">522622</span>: <span class="hljs-string">'黄平县'</span>,      <span class="hljs-number">522623</span>: <span class="hljs-string">'施秉县'</span>,      <span class="hljs-number">522624</span>: <span class="hljs-string">'三穗县'</span>,      <span class="hljs-number">522625</span>: <span class="hljs-string">'镇远县'</span>,      <span class="hljs-number">522626</span>: <span class="hljs-string">'岑巩县'</span>,      <span class="hljs-number">522627</span>: <span class="hljs-string">'天柱县'</span>,      <span class="hljs-number">522628</span>: <span class="hljs-string">'锦屏县'</span>,      <span class="hljs-number">522629</span>: <span class="hljs-string">'剑河县'</span>,      <span class="hljs-number">522630</span>: <span class="hljs-string">'台江县'</span>,      <span class="hljs-number">522631</span>: <span class="hljs-string">'黎平县'</span>,      <span class="hljs-number">522632</span>: <span class="hljs-string">'榕江县'</span>,      <span class="hljs-number">522633</span>: <span class="hljs-string">'从江县'</span>,      <span class="hljs-number">522634</span>: <span class="hljs-string">'雷山县'</span>,      <span class="hljs-number">522635</span>: <span class="hljs-string">'麻江县'</span>,      <span class="hljs-number">522636</span>: <span class="hljs-string">'丹寨县'</span>,      <span class="hljs-number">522701</span>: <span class="hljs-string">'都匀市'</span>,      <span class="hljs-number">522702</span>: <span class="hljs-string">'福泉市'</span>,      <span class="hljs-number">522722</span>: <span class="hljs-string">'荔波县'</span>,      <span class="hljs-number">522723</span>: <span class="hljs-string">'贵定县'</span>,      <span class="hljs-number">522725</span>: <span class="hljs-string">'瓮安县'</span>,      <span class="hljs-number">522726</span>: <span class="hljs-string">'独山县'</span>,      <span class="hljs-number">522727</span>: <span class="hljs-string">'平塘县'</span>,      <span class="hljs-number">522728</span>: <span class="hljs-string">'罗甸县'</span>,      <span class="hljs-number">522729</span>: <span class="hljs-string">'长顺县'</span>,      <span class="hljs-number">522730</span>: <span class="hljs-string">'龙里县'</span>,      <span class="hljs-number">522731</span>: <span class="hljs-string">'惠水县'</span>,      <span class="hljs-number">522732</span>: <span class="hljs-string">'三都水族自治县'</span>,      <span class="hljs-number">530102</span>: <span class="hljs-string">'五华区'</span>,      <span class="hljs-number">530103</span>: <span class="hljs-string">'盘龙区'</span>,      <span class="hljs-number">530111</span>: <span class="hljs-string">'官渡区'</span>,      <span class="hljs-number">530112</span>: <span class="hljs-string">'西山区'</span>,      <span class="hljs-number">530113</span>: <span class="hljs-string">'东川区'</span>,      <span class="hljs-number">530114</span>: <span class="hljs-string">'呈贡区'</span>,      <span class="hljs-number">530115</span>: <span class="hljs-string">'晋宁区'</span>,      <span class="hljs-number">530124</span>: <span class="hljs-string">'富民县'</span>,      <span class="hljs-number">530125</span>: <span class="hljs-string">'宜良县'</span>,      <span class="hljs-number">530126</span>: <span class="hljs-string">'石林彝族自治县'</span>,      <span class="hljs-number">530127</span>: <span class="hljs-string">'嵩明县'</span>,      <span class="hljs-number">530128</span>: <span class="hljs-string">'禄劝彝族苗族自治县'</span>,      <span class="hljs-number">530129</span>: <span class="hljs-string">'寻甸回族彝族自治县'</span>,      <span class="hljs-number">530181</span>: <span class="hljs-string">'安宁市'</span>,      <span class="hljs-number">530302</span>: <span class="hljs-string">'麒麟区'</span>,      <span class="hljs-number">530303</span>: <span class="hljs-string">'沾益区'</span>,      <span class="hljs-number">530304</span>: <span class="hljs-string">'马龙区'</span>,      <span class="hljs-number">530322</span>: <span class="hljs-string">'陆良县'</span>,      <span class="hljs-number">530323</span>: <span class="hljs-string">'师宗县'</span>,      <span class="hljs-number">530324</span>: <span class="hljs-string">'罗平县'</span>,      <span class="hljs-number">530325</span>: <span class="hljs-string">'富源县'</span>,      <span class="hljs-number">530326</span>: <span class="hljs-string">'会泽县'</span>,      <span class="hljs-number">530381</span>: <span class="hljs-string">'宣威市'</span>,      <span class="hljs-number">530402</span>: <span class="hljs-string">'红塔区'</span>,      <span class="hljs-number">530403</span>: <span class="hljs-string">'江川区'</span>,      <span class="hljs-number">530422</span>: <span class="hljs-string">'澄江县'</span>,      <span class="hljs-number">530423</span>: <span class="hljs-string">'通海县'</span>,      <span class="hljs-number">530424</span>: <span class="hljs-string">'华宁县'</span>,      <span class="hljs-number">530425</span>: <span class="hljs-string">'易门县'</span>,      <span class="hljs-number">530426</span>: <span class="hljs-string">'峨山彝族自治县'</span>,      <span class="hljs-number">530427</span>: <span class="hljs-string">'新平彝族傣族自治县'</span>,      <span class="hljs-number">530428</span>: <span class="hljs-string">'元江哈尼族彝族傣族自治县'</span>,      <span class="hljs-number">530502</span>: <span class="hljs-string">'隆阳区'</span>,      <span class="hljs-number">530521</span>: <span class="hljs-string">'施甸县'</span>,      <span class="hljs-number">530523</span>: <span class="hljs-string">'龙陵县'</span>,      <span class="hljs-number">530524</span>: <span class="hljs-string">'昌宁县'</span>,      <span class="hljs-number">530581</span>: <span class="hljs-string">'腾冲市'</span>,      <span class="hljs-number">530602</span>: <span class="hljs-string">'昭阳区'</span>,      <span class="hljs-number">530621</span>: <span class="hljs-string">'鲁甸县'</span>,      <span class="hljs-number">530622</span>: <span class="hljs-string">'巧家县'</span>,      <span class="hljs-number">530623</span>: <span class="hljs-string">'盐津县'</span>,      <span class="hljs-number">530624</span>: <span class="hljs-string">'大关县'</span>,      <span class="hljs-number">530625</span>: <span class="hljs-string">'永善县'</span>,      <span class="hljs-number">530626</span>: <span class="hljs-string">'绥江县'</span>,      <span class="hljs-number">530627</span>: <span class="hljs-string">'镇雄县'</span>,      <span class="hljs-number">530628</span>: <span class="hljs-string">'彝良县'</span>,      <span class="hljs-number">530629</span>: <span class="hljs-string">'威信县'</span>,      <span class="hljs-number">530681</span>: <span class="hljs-string">'水富市'</span>,      <span class="hljs-number">530702</span>: <span class="hljs-string">'古城区'</span>,      <span class="hljs-number">530721</span>: <span class="hljs-string">'玉龙纳西族自治县'</span>,      <span class="hljs-number">530722</span>: <span class="hljs-string">'永胜县'</span>,      <span class="hljs-number">530723</span>: <span class="hljs-string">'华坪县'</span>,      <span class="hljs-number">530724</span>: <span class="hljs-string">'宁蒗彝族自治县'</span>,      <span class="hljs-number">530802</span>: <span class="hljs-string">'思茅区'</span>,      <span class="hljs-number">530821</span>: <span class="hljs-string">'宁洱哈尼族彝族自治县'</span>,      <span class="hljs-number">530822</span>: <span class="hljs-string">'墨江哈尼族自治县'</span>,      <span class="hljs-number">530823</span>: <span class="hljs-string">'景东彝族自治县'</span>,      <span class="hljs-number">530824</span>: <span class="hljs-string">'景谷傣族彝族自治县'</span>,      <span class="hljs-number">530825</span>: <span class="hljs-string">'镇沅彝族哈尼族拉祜族自治县'</span>,      <span class="hljs-number">530826</span>: <span class="hljs-string">'江城哈尼族彝族自治县'</span>,      <span class="hljs-number">530827</span>: <span class="hljs-string">'孟连傣族拉祜族佤族自治县'</span>,      <span class="hljs-number">530828</span>: <span class="hljs-string">'澜沧拉祜族自治县'</span>,      <span class="hljs-number">530829</span>: <span class="hljs-string">'西盟佤族自治县'</span>,      <span class="hljs-number">530902</span>: <span class="hljs-string">'临翔区'</span>,      <span class="hljs-number">530921</span>: <span class="hljs-string">'凤庆县'</span>,      <span class="hljs-number">530922</span>: <span class="hljs-string">'云县'</span>,      <span class="hljs-number">530923</span>: <span class="hljs-string">'永德县'</span>,      <span class="hljs-number">530924</span>: <span class="hljs-string">'镇康县'</span>,      <span class="hljs-number">530925</span>: <span class="hljs-string">'双江拉祜族佤族布朗族傣族自治县'</span>,      <span class="hljs-number">530926</span>: <span class="hljs-string">'耿马傣族佤族自治县'</span>,      <span class="hljs-number">530927</span>: <span class="hljs-string">'沧源佤族自治县'</span>,      <span class="hljs-number">532301</span>: <span class="hljs-string">'楚雄市'</span>,      <span class="hljs-number">532322</span>: <span class="hljs-string">'双柏县'</span>,      <span class="hljs-number">532323</span>: <span class="hljs-string">'牟定县'</span>,      <span class="hljs-number">532324</span>: <span class="hljs-string">'南华县'</span>,      <span class="hljs-number">532325</span>: <span class="hljs-string">'姚安县'</span>,      <span class="hljs-number">532326</span>: <span class="hljs-string">'大姚县'</span>,      <span class="hljs-number">532327</span>: <span class="hljs-string">'永仁县'</span>,      <span class="hljs-number">532328</span>: <span class="hljs-string">'元谋县'</span>,      <span class="hljs-number">532329</span>: <span class="hljs-string">'武定县'</span>,      <span class="hljs-number">532331</span>: <span class="hljs-string">'禄丰县'</span>,      <span class="hljs-number">532501</span>: <span class="hljs-string">'个旧市'</span>,      <span class="hljs-number">532502</span>: <span class="hljs-string">'开远市'</span>,      <span class="hljs-number">532503</span>: <span class="hljs-string">'蒙自市'</span>,      <span class="hljs-number">532504</span>: <span class="hljs-string">'弥勒市'</span>,      <span class="hljs-number">532523</span>: <span class="hljs-string">'屏边苗族自治县'</span>,      <span class="hljs-number">532524</span>: <span class="hljs-string">'建水县'</span>,      <span class="hljs-number">532525</span>: <span class="hljs-string">'石屏县'</span>,      <span class="hljs-number">532527</span>: <span class="hljs-string">'泸西县'</span>,      <span class="hljs-number">532528</span>: <span class="hljs-string">'元阳县'</span>,      <span class="hljs-number">532529</span>: <span class="hljs-string">'红河县'</span>,      <span class="hljs-number">532530</span>: <span class="hljs-string">'金平苗族瑶族傣族自治县'</span>,      <span class="hljs-number">532531</span>: <span class="hljs-string">'绿春县'</span>,      <span class="hljs-number">532532</span>: <span class="hljs-string">'河口瑶族自治县'</span>,      <span class="hljs-number">532601</span>: <span class="hljs-string">'文山市'</span>,      <span class="hljs-number">532622</span>: <span class="hljs-string">'砚山县'</span>,      <span class="hljs-number">532623</span>: <span class="hljs-string">'西畴县'</span>,      <span class="hljs-number">532624</span>: <span class="hljs-string">'麻栗坡县'</span>,      <span class="hljs-number">532625</span>: <span class="hljs-string">'马关县'</span>,      <span class="hljs-number">532626</span>: <span class="hljs-string">'丘北县'</span>,      <span class="hljs-number">532627</span>: <span class="hljs-string">'广南县'</span>,      <span class="hljs-number">532628</span>: <span class="hljs-string">'富宁县'</span>,      <span class="hljs-number">532801</span>: <span class="hljs-string">'景洪市'</span>,      <span class="hljs-number">532822</span>: <span class="hljs-string">'勐海县'</span>,      <span class="hljs-number">532823</span>: <span class="hljs-string">'勐腊县'</span>,      <span class="hljs-number">532901</span>: <span class="hljs-string">'大理市'</span>,      <span class="hljs-number">532922</span>: <span class="hljs-string">'漾濞彝族自治县'</span>,      <span class="hljs-number">532923</span>: <span class="hljs-string">'祥云县'</span>,      <span class="hljs-number">532924</span>: <span class="hljs-string">'宾川县'</span>,      <span class="hljs-number">532925</span>: <span class="hljs-string">'弥渡县'</span>,      <span class="hljs-number">532926</span>: <span class="hljs-string">'南涧彝族自治县'</span>,      <span class="hljs-number">532927</span>: <span class="hljs-string">'巍山彝族回族自治县'</span>,      <span class="hljs-number">532928</span>: <span class="hljs-string">'永平县'</span>,      <span class="hljs-number">532929</span>: <span class="hljs-string">'云龙县'</span>,      <span class="hljs-number">532930</span>: <span class="hljs-string">'洱源县'</span>,      <span class="hljs-number">532931</span>: <span class="hljs-string">'剑川县'</span>,      <span class="hljs-number">532932</span>: <span class="hljs-string">'鹤庆县'</span>,      <span class="hljs-number">533102</span>: <span class="hljs-string">'瑞丽市'</span>,      <span class="hljs-number">533103</span>: <span class="hljs-string">'芒市'</span>,      <span class="hljs-number">533122</span>: <span class="hljs-string">'梁河县'</span>,      <span class="hljs-number">533123</span>: <span class="hljs-string">'盈江县'</span>,      <span class="hljs-number">533124</span>: <span class="hljs-string">'陇川县'</span>,      <span class="hljs-number">533301</span>: <span class="hljs-string">'泸水市'</span>,      <span class="hljs-number">533323</span>: <span class="hljs-string">'福贡县'</span>,      <span class="hljs-number">533324</span>: <span class="hljs-string">'贡山独龙族怒族自治县'</span>,      <span class="hljs-number">533325</span>: <span class="hljs-string">'兰坪白族普米族自治县'</span>,      <span class="hljs-number">533401</span>: <span class="hljs-string">'香格里拉市'</span>,      <span class="hljs-number">533422</span>: <span class="hljs-string">'德钦县'</span>,      <span class="hljs-number">533423</span>: <span class="hljs-string">'维西傈僳族自治县'</span>,      <span class="hljs-number">540102</span>: <span class="hljs-string">'城关区'</span>,      <span class="hljs-number">540103</span>: <span class="hljs-string">'堆龙德庆区'</span>,      <span class="hljs-number">540104</span>: <span class="hljs-string">'达孜区'</span>,      <span class="hljs-number">540121</span>: <span class="hljs-string">'林周县'</span>,      <span class="hljs-number">540122</span>: <span class="hljs-string">'当雄县'</span>,      <span class="hljs-number">540123</span>: <span class="hljs-string">'尼木县'</span>,      <span class="hljs-number">540124</span>: <span class="hljs-string">'曲水县'</span>,      <span class="hljs-number">540127</span>: <span class="hljs-string">'墨竹工卡县'</span>,      <span class="hljs-number">540202</span>: <span class="hljs-string">'桑珠孜区'</span>,      <span class="hljs-number">540221</span>: <span class="hljs-string">'南木林县'</span>,      <span class="hljs-number">540222</span>: <span class="hljs-string">'江孜县'</span>,      <span class="hljs-number">540223</span>: <span class="hljs-string">'定日县'</span>,      <span class="hljs-number">540224</span>: <span class="hljs-string">'萨迦县'</span>,      <span class="hljs-number">540225</span>: <span class="hljs-string">'拉孜县'</span>,      <span class="hljs-number">540226</span>: <span class="hljs-string">'昂仁县'</span>,      <span class="hljs-number">540227</span>: <span class="hljs-string">'谢通门县'</span>,      <span class="hljs-number">540228</span>: <span class="hljs-string">'白朗县'</span>,      <span class="hljs-number">540229</span>: <span class="hljs-string">'仁布县'</span>,      <span class="hljs-number">540230</span>: <span class="hljs-string">'康马县'</span>,      <span class="hljs-number">540231</span>: <span class="hljs-string">'定结县'</span>,      <span class="hljs-number">540232</span>: <span class="hljs-string">'仲巴县'</span>,      <span class="hljs-number">540233</span>: <span class="hljs-string">'亚东县'</span>,      <span class="hljs-number">540234</span>: <span class="hljs-string">'吉隆县'</span>,      <span class="hljs-number">540235</span>: <span class="hljs-string">'聂拉木县'</span>,      <span class="hljs-number">540236</span>: <span class="hljs-string">'萨嘎县'</span>,      <span class="hljs-number">540237</span>: <span class="hljs-string">'岗巴县'</span>,      <span class="hljs-number">540302</span>: <span class="hljs-string">'卡若区'</span>,      <span class="hljs-number">540321</span>: <span class="hljs-string">'江达县'</span>,      <span class="hljs-number">540322</span>: <span class="hljs-string">'贡觉县'</span>,      <span class="hljs-number">540323</span>: <span class="hljs-string">'类乌齐县'</span>,      <span class="hljs-number">540324</span>: <span class="hljs-string">'丁青县'</span>,      <span class="hljs-number">540325</span>: <span class="hljs-string">'察雅县'</span>,      <span class="hljs-number">540326</span>: <span class="hljs-string">'八宿县'</span>,      <span class="hljs-number">540327</span>: <span class="hljs-string">'左贡县'</span>,      <span class="hljs-number">540328</span>: <span class="hljs-string">'芒康县'</span>,      <span class="hljs-number">540329</span>: <span class="hljs-string">'洛隆县'</span>,      <span class="hljs-number">540330</span>: <span class="hljs-string">'边坝县'</span>,      <span class="hljs-number">540402</span>: <span class="hljs-string">'巴宜区'</span>,      <span class="hljs-number">540421</span>: <span class="hljs-string">'工布江达县'</span>,      <span class="hljs-number">540422</span>: <span class="hljs-string">'米林县'</span>,      <span class="hljs-number">540423</span>: <span class="hljs-string">'墨脱县'</span>,      <span class="hljs-number">540424</span>: <span class="hljs-string">'波密县'</span>,      <span class="hljs-number">540425</span>: <span class="hljs-string">'察隅县'</span>,      <span class="hljs-number">540426</span>: <span class="hljs-string">'朗县'</span>,      <span class="hljs-number">540502</span>: <span class="hljs-string">'乃东区'</span>,      <span class="hljs-number">540521</span>: <span class="hljs-string">'扎囊县'</span>,      <span class="hljs-number">540522</span>: <span class="hljs-string">'贡嘎县'</span>,      <span class="hljs-number">540523</span>: <span class="hljs-string">'桑日县'</span>,      <span class="hljs-number">540524</span>: <span class="hljs-string">'琼结县'</span>,      <span class="hljs-number">540525</span>: <span class="hljs-string">'曲松县'</span>,      <span class="hljs-number">540526</span>: <span class="hljs-string">'措美县'</span>,      <span class="hljs-number">540527</span>: <span class="hljs-string">'洛扎县'</span>,      <span class="hljs-number">540528</span>: <span class="hljs-string">'加查县'</span>,      <span class="hljs-number">540529</span>: <span class="hljs-string">'隆子县'</span>,      <span class="hljs-number">540530</span>: <span class="hljs-string">'错那县'</span>,      <span class="hljs-number">540531</span>: <span class="hljs-string">'浪卡子县'</span>,      <span class="hljs-number">540602</span>: <span class="hljs-string">'色尼区'</span>,      <span class="hljs-number">540621</span>: <span class="hljs-string">'嘉黎县'</span>,      <span class="hljs-number">540622</span>: <span class="hljs-string">'比如县'</span>,      <span class="hljs-number">540623</span>: <span class="hljs-string">'聂荣县'</span>,      <span class="hljs-number">540624</span>: <span class="hljs-string">'安多县'</span>,      <span class="hljs-number">540625</span>: <span class="hljs-string">'申扎县'</span>,      <span class="hljs-number">540626</span>: <span class="hljs-string">'索县'</span>,      <span class="hljs-number">540627</span>: <span class="hljs-string">'班戈县'</span>,      <span class="hljs-number">540628</span>: <span class="hljs-string">'巴青县'</span>,      <span class="hljs-number">540629</span>: <span class="hljs-string">'尼玛县'</span>,      <span class="hljs-number">540630</span>: <span class="hljs-string">'双湖县'</span>,      <span class="hljs-number">542521</span>: <span class="hljs-string">'普兰县'</span>,      <span class="hljs-number">542522</span>: <span class="hljs-string">'札达县'</span>,      <span class="hljs-number">542523</span>: <span class="hljs-string">'噶尔县'</span>,      <span class="hljs-number">542524</span>: <span class="hljs-string">'日土县'</span>,      <span class="hljs-number">542525</span>: <span class="hljs-string">'革吉县'</span>,      <span class="hljs-number">542526</span>: <span class="hljs-string">'改则县'</span>,      <span class="hljs-number">542527</span>: <span class="hljs-string">'措勤县'</span>,      <span class="hljs-number">610102</span>: <span class="hljs-string">'新城区'</span>,      <span class="hljs-number">610103</span>: <span class="hljs-string">'碑林区'</span>,      <span class="hljs-number">610104</span>: <span class="hljs-string">'莲湖区'</span>,      <span class="hljs-number">610111</span>: <span class="hljs-string">'灞桥区'</span>,      <span class="hljs-number">610112</span>: <span class="hljs-string">'未央区'</span>,      <span class="hljs-number">610113</span>: <span class="hljs-string">'雁塔区'</span>,      <span class="hljs-number">610114</span>: <span class="hljs-string">'阎良区'</span>,      <span class="hljs-number">610115</span>: <span class="hljs-string">'临潼区'</span>,      <span class="hljs-number">610116</span>: <span class="hljs-string">'长安区'</span>,      <span class="hljs-number">610117</span>: <span class="hljs-string">'高陵区'</span>,      <span class="hljs-number">610118</span>: <span class="hljs-string">'鄠邑区'</span>,      <span class="hljs-number">610122</span>: <span class="hljs-string">'蓝田县'</span>,      <span class="hljs-number">610124</span>: <span class="hljs-string">'周至县'</span>,      <span class="hljs-number">610202</span>: <span class="hljs-string">'王益区'</span>,      <span class="hljs-number">610203</span>: <span class="hljs-string">'印台区'</span>,      <span class="hljs-number">610204</span>: <span class="hljs-string">'耀州区'</span>,      <span class="hljs-number">610222</span>: <span class="hljs-string">'宜君县'</span>,      <span class="hljs-number">610302</span>: <span class="hljs-string">'渭滨区'</span>,      <span class="hljs-number">610303</span>: <span class="hljs-string">'金台区'</span>,      <span class="hljs-number">610304</span>: <span class="hljs-string">'陈仓区'</span>,      <span class="hljs-number">610322</span>: <span class="hljs-string">'凤翔县'</span>,      <span class="hljs-number">610323</span>: <span class="hljs-string">'岐山县'</span>,      <span class="hljs-number">610324</span>: <span class="hljs-string">'扶风县'</span>,      <span class="hljs-number">610326</span>: <span class="hljs-string">'眉县'</span>,      <span class="hljs-number">610327</span>: <span class="hljs-string">'陇县'</span>,      <span class="hljs-number">610328</span>: <span class="hljs-string">'千阳县'</span>,      <span class="hljs-number">610329</span>: <span class="hljs-string">'麟游县'</span>,      <span class="hljs-number">610330</span>: <span class="hljs-string">'凤县'</span>,      <span class="hljs-number">610331</span>: <span class="hljs-string">'太白县'</span>,      <span class="hljs-number">610402</span>: <span class="hljs-string">'秦都区'</span>,      <span class="hljs-number">610403</span>: <span class="hljs-string">'杨陵区'</span>,      <span class="hljs-number">610404</span>: <span class="hljs-string">'渭城区'</span>,      <span class="hljs-number">610422</span>: <span class="hljs-string">'三原县'</span>,      <span class="hljs-number">610423</span>: <span class="hljs-string">'泾阳县'</span>,      <span class="hljs-number">610424</span>: <span class="hljs-string">'乾县'</span>,      <span class="hljs-number">610425</span>: <span class="hljs-string">'礼泉县'</span>,      <span class="hljs-number">610426</span>: <span class="hljs-string">'永寿县'</span>,      <span class="hljs-number">610428</span>: <span class="hljs-string">'长武县'</span>,      <span class="hljs-number">610429</span>: <span class="hljs-string">'旬邑县'</span>,      <span class="hljs-number">610430</span>: <span class="hljs-string">'淳化县'</span>,      <span class="hljs-number">610431</span>: <span class="hljs-string">'武功县'</span>,      <span class="hljs-number">610481</span>: <span class="hljs-string">'兴平市'</span>,      <span class="hljs-number">610482</span>: <span class="hljs-string">'彬州市'</span>,      <span class="hljs-number">610502</span>: <span class="hljs-string">'临渭区'</span>,      <span class="hljs-number">610503</span>: <span class="hljs-string">'华州区'</span>,      <span class="hljs-number">610522</span>: <span class="hljs-string">'潼关县'</span>,      <span class="hljs-number">610523</span>: <span class="hljs-string">'大荔县'</span>,      <span class="hljs-number">610524</span>: <span class="hljs-string">'合阳县'</span>,      <span class="hljs-number">610525</span>: <span class="hljs-string">'澄城县'</span>,      <span class="hljs-number">610526</span>: <span class="hljs-string">'蒲城县'</span>,      <span class="hljs-number">610527</span>: <span class="hljs-string">'白水县'</span>,      <span class="hljs-number">610528</span>: <span class="hljs-string">'富平县'</span>,      <span class="hljs-number">610581</span>: <span class="hljs-string">'韩城市'</span>,      <span class="hljs-number">610582</span>: <span class="hljs-string">'华阴市'</span>,      <span class="hljs-number">610602</span>: <span class="hljs-string">'宝塔区'</span>,      <span class="hljs-number">610603</span>: <span class="hljs-string">'安塞区'</span>,      <span class="hljs-number">610621</span>: <span class="hljs-string">'延长县'</span>,      <span class="hljs-number">610622</span>: <span class="hljs-string">'延川县'</span>,      <span class="hljs-number">610623</span>: <span class="hljs-string">'子长县'</span>,      <span class="hljs-number">610625</span>: <span class="hljs-string">'志丹县'</span>,      <span class="hljs-number">610626</span>: <span class="hljs-string">'吴起县'</span>,      <span class="hljs-number">610627</span>: <span class="hljs-string">'甘泉县'</span>,      <span class="hljs-number">610628</span>: <span class="hljs-string">'富县'</span>,      <span class="hljs-number">610629</span>: <span class="hljs-string">'洛川县'</span>,      <span class="hljs-number">610630</span>: <span class="hljs-string">'宜川县'</span>,      <span class="hljs-number">610631</span>: <span class="hljs-string">'黄龙县'</span>,      <span class="hljs-number">610632</span>: <span class="hljs-string">'黄陵县'</span>,      <span class="hljs-number">610702</span>: <span class="hljs-string">'汉台区'</span>,      <span class="hljs-number">610703</span>: <span class="hljs-string">'南郑区'</span>,      <span class="hljs-number">610722</span>: <span class="hljs-string">'城固县'</span>,      <span class="hljs-number">610723</span>: <span class="hljs-string">'洋县'</span>,      <span class="hljs-number">610724</span>: <span class="hljs-string">'西乡县'</span>,      <span class="hljs-number">610725</span>: <span class="hljs-string">'勉县'</span>,      <span class="hljs-number">610726</span>: <span class="hljs-string">'宁强县'</span>,      <span class="hljs-number">610727</span>: <span class="hljs-string">'略阳县'</span>,      <span class="hljs-number">610728</span>: <span class="hljs-string">'镇巴县'</span>,      <span class="hljs-number">610729</span>: <span class="hljs-string">'留坝县'</span>,      <span class="hljs-number">610730</span>: <span class="hljs-string">'佛坪县'</span>,      <span class="hljs-number">610802</span>: <span class="hljs-string">'榆阳区'</span>,      <span class="hljs-number">610803</span>: <span class="hljs-string">'横山区'</span>,      <span class="hljs-number">610822</span>: <span class="hljs-string">'府谷县'</span>,      <span class="hljs-number">610824</span>: <span class="hljs-string">'靖边县'</span>,      <span class="hljs-number">610825</span>: <span class="hljs-string">'定边县'</span>,      <span class="hljs-number">610826</span>: <span class="hljs-string">'绥德县'</span>,      <span class="hljs-number">610827</span>: <span class="hljs-string">'米脂县'</span>,      <span class="hljs-number">610828</span>: <span class="hljs-string">'佳县'</span>,      <span class="hljs-number">610829</span>: <span class="hljs-string">'吴堡县'</span>,      <span class="hljs-number">610830</span>: <span class="hljs-string">'清涧县'</span>,      <span class="hljs-number">610831</span>: <span class="hljs-string">'子洲县'</span>,      <span class="hljs-number">610881</span>: <span class="hljs-string">'神木市'</span>,      <span class="hljs-number">610902</span>: <span class="hljs-string">'汉滨区'</span>,      <span class="hljs-number">610921</span>: <span class="hljs-string">'汉阴县'</span>,      <span class="hljs-number">610922</span>: <span class="hljs-string">'石泉县'</span>,      <span class="hljs-number">610923</span>: <span class="hljs-string">'宁陕县'</span>,      <span class="hljs-number">610924</span>: <span class="hljs-string">'紫阳县'</span>,      <span class="hljs-number">610925</span>: <span class="hljs-string">'岚皋县'</span>,      <span class="hljs-number">610926</span>: <span class="hljs-string">'平利县'</span>,      <span class="hljs-number">610927</span>: <span class="hljs-string">'镇坪县'</span>,      <span class="hljs-number">610928</span>: <span class="hljs-string">'旬阳县'</span>,      <span class="hljs-number">610929</span>: <span class="hljs-string">'白河县'</span>,      <span class="hljs-number">611002</span>: <span class="hljs-string">'商州区'</span>,      <span class="hljs-number">611021</span>: <span class="hljs-string">'洛南县'</span>,      <span class="hljs-number">611022</span>: <span class="hljs-string">'丹凤县'</span>,      <span class="hljs-number">611023</span>: <span class="hljs-string">'商南县'</span>,      <span class="hljs-number">611024</span>: <span class="hljs-string">'山阳县'</span>,      <span class="hljs-number">611025</span>: <span class="hljs-string">'镇安县'</span>,      <span class="hljs-number">611026</span>: <span class="hljs-string">'柞水县'</span>,      <span class="hljs-number">620102</span>: <span class="hljs-string">'城关区'</span>,      <span class="hljs-number">620103</span>: <span class="hljs-string">'七里河区'</span>,      <span class="hljs-number">620104</span>: <span class="hljs-string">'西固区'</span>,      <span class="hljs-number">620105</span>: <span class="hljs-string">'安宁区'</span>,      <span class="hljs-number">620111</span>: <span class="hljs-string">'红古区'</span>,      <span class="hljs-number">620121</span>: <span class="hljs-string">'永登县'</span>,      <span class="hljs-number">620122</span>: <span class="hljs-string">'皋兰县'</span>,      <span class="hljs-number">620123</span>: <span class="hljs-string">'榆中县'</span>,      <span class="hljs-number">620201</span>: <span class="hljs-string">'市辖区'</span>,      <span class="hljs-number">620290</span>: <span class="hljs-string">'雄关区'</span>,      <span class="hljs-number">620291</span>: <span class="hljs-string">'长城区'</span>,      <span class="hljs-number">620292</span>: <span class="hljs-string">'镜铁区'</span>,      <span class="hljs-number">620293</span>: <span class="hljs-string">'新城镇'</span>,      <span class="hljs-number">620294</span>: <span class="hljs-string">'峪泉镇'</span>,      <span class="hljs-number">620295</span>: <span class="hljs-string">'文殊镇'</span>,      <span class="hljs-number">620302</span>: <span class="hljs-string">'金川区'</span>,      <span class="hljs-number">620321</span>: <span class="hljs-string">'永昌县'</span>,      <span class="hljs-number">620402</span>: <span class="hljs-string">'白银区'</span>,      <span class="hljs-number">620403</span>: <span class="hljs-string">'平川区'</span>,      <span class="hljs-number">620421</span>: <span class="hljs-string">'靖远县'</span>,      <span class="hljs-number">620422</span>: <span class="hljs-string">'会宁县'</span>,      <span class="hljs-number">620423</span>: <span class="hljs-string">'景泰县'</span>,      <span class="hljs-number">620502</span>: <span class="hljs-string">'秦州区'</span>,      <span class="hljs-number">620503</span>: <span class="hljs-string">'麦积区'</span>,      <span class="hljs-number">620521</span>: <span class="hljs-string">'清水县'</span>,      <span class="hljs-number">620522</span>: <span class="hljs-string">'秦安县'</span>,      <span class="hljs-number">620523</span>: <span class="hljs-string">'甘谷县'</span>,      <span class="hljs-number">620524</span>: <span class="hljs-string">'武山县'</span>,      <span class="hljs-number">620525</span>: <span class="hljs-string">'张家川回族自治县'</span>,      <span class="hljs-number">620602</span>: <span class="hljs-string">'凉州区'</span>,      <span class="hljs-number">620621</span>: <span class="hljs-string">'民勤县'</span>,      <span class="hljs-number">620622</span>: <span class="hljs-string">'古浪县'</span>,      <span class="hljs-number">620623</span>: <span class="hljs-string">'天祝藏族自治县'</span>,      <span class="hljs-number">620702</span>: <span class="hljs-string">'甘州区'</span>,      <span class="hljs-number">620721</span>: <span class="hljs-string">'肃南裕固族自治县'</span>,      <span class="hljs-number">620722</span>: <span class="hljs-string">'民乐县'</span>,      <span class="hljs-number">620723</span>: <span class="hljs-string">'临泽县'</span>,      <span class="hljs-number">620724</span>: <span class="hljs-string">'高台县'</span>,      <span class="hljs-number">620725</span>: <span class="hljs-string">'山丹县'</span>,      <span class="hljs-number">620802</span>: <span class="hljs-string">'崆峒区'</span>,      <span class="hljs-number">620821</span>: <span class="hljs-string">'泾川县'</span>,      <span class="hljs-number">620822</span>: <span class="hljs-string">'灵台县'</span>,      <span class="hljs-number">620823</span>: <span class="hljs-string">'崇信县'</span>,      <span class="hljs-number">620825</span>: <span class="hljs-string">'庄浪县'</span>,      <span class="hljs-number">620826</span>: <span class="hljs-string">'静宁县'</span>,      <span class="hljs-number">620881</span>: <span class="hljs-string">'华亭市'</span>,      <span class="hljs-number">620902</span>: <span class="hljs-string">'肃州区'</span>,      <span class="hljs-number">620921</span>: <span class="hljs-string">'金塔县'</span>,      <span class="hljs-number">620922</span>: <span class="hljs-string">'瓜州县'</span>,      <span class="hljs-number">620923</span>: <span class="hljs-string">'肃北蒙古族自治县'</span>,      <span class="hljs-number">620924</span>: <span class="hljs-string">'阿克塞哈萨克族自治县'</span>,      <span class="hljs-number">620981</span>: <span class="hljs-string">'玉门市'</span>,      <span class="hljs-number">620982</span>: <span class="hljs-string">'敦煌市'</span>,      <span class="hljs-number">621002</span>: <span class="hljs-string">'西峰区'</span>,      <span class="hljs-number">621021</span>: <span class="hljs-string">'庆城县'</span>,      <span class="hljs-number">621022</span>: <span class="hljs-string">'环县'</span>,      <span class="hljs-number">621023</span>: <span class="hljs-string">'华池县'</span>,      <span class="hljs-number">621024</span>: <span class="hljs-string">'合水县'</span>,      <span class="hljs-number">621025</span>: <span class="hljs-string">'正宁县'</span>,      <span class="hljs-number">621026</span>: <span class="hljs-string">'宁县'</span>,      <span class="hljs-number">621027</span>: <span class="hljs-string">'镇原县'</span>,      <span class="hljs-number">621102</span>: <span class="hljs-string">'安定区'</span>,      <span class="hljs-number">621121</span>: <span class="hljs-string">'通渭县'</span>,      <span class="hljs-number">621122</span>: <span class="hljs-string">'陇西县'</span>,      <span class="hljs-number">621123</span>: <span class="hljs-string">'渭源县'</span>,      <span class="hljs-number">621124</span>: <span class="hljs-string">'临洮县'</span>,      <span class="hljs-number">621125</span>: <span class="hljs-string">'漳县'</span>,      <span class="hljs-number">621126</span>: <span class="hljs-string">'岷县'</span>,      <span class="hljs-number">621202</span>: <span class="hljs-string">'武都区'</span>,      <span class="hljs-number">621221</span>: <span class="hljs-string">'成县'</span>,      <span class="hljs-number">621222</span>: <span class="hljs-string">'文县'</span>,      <span class="hljs-number">621223</span>: <span class="hljs-string">'宕昌县'</span>,      <span class="hljs-number">621224</span>: <span class="hljs-string">'康县'</span>,      <span class="hljs-number">621225</span>: <span class="hljs-string">'西和县'</span>,      <span class="hljs-number">621226</span>: <span class="hljs-string">'礼县'</span>,      <span class="hljs-number">621227</span>: <span class="hljs-string">'徽县'</span>,      <span class="hljs-number">621228</span>: <span class="hljs-string">'两当县'</span>,      <span class="hljs-number">622901</span>: <span class="hljs-string">'临夏市'</span>,      <span class="hljs-number">622921</span>: <span class="hljs-string">'临夏县'</span>,      <span class="hljs-number">622922</span>: <span class="hljs-string">'康乐县'</span>,      <span class="hljs-number">622923</span>: <span class="hljs-string">'永靖县'</span>,      <span class="hljs-number">622924</span>: <span class="hljs-string">'广河县'</span>,      <span class="hljs-number">622925</span>: <span class="hljs-string">'和政县'</span>,      <span class="hljs-number">622926</span>: <span class="hljs-string">'东乡族自治县'</span>,      <span class="hljs-number">622927</span>: <span class="hljs-string">'积石山保安族东乡族撒拉族自治县'</span>,      <span class="hljs-number">623001</span>: <span class="hljs-string">'合作市'</span>,      <span class="hljs-number">623021</span>: <span class="hljs-string">'临潭县'</span>,      <span class="hljs-number">623022</span>: <span class="hljs-string">'卓尼县'</span>,      <span class="hljs-number">623023</span>: <span class="hljs-string">'舟曲县'</span>,      <span class="hljs-number">623024</span>: <span class="hljs-string">'迭部县'</span>,      <span class="hljs-number">623025</span>: <span class="hljs-string">'玛曲县'</span>,      <span class="hljs-number">623026</span>: <span class="hljs-string">'碌曲县'</span>,      <span class="hljs-number">623027</span>: <span class="hljs-string">'夏河县'</span>,      <span class="hljs-number">630102</span>: <span class="hljs-string">'城东区'</span>,      <span class="hljs-number">630103</span>: <span class="hljs-string">'城中区'</span>,      <span class="hljs-number">630104</span>: <span class="hljs-string">'城西区'</span>,      <span class="hljs-number">630105</span>: <span class="hljs-string">'城北区'</span>,      <span class="hljs-number">630121</span>: <span class="hljs-string">'大通回族土族自治县'</span>,      <span class="hljs-number">630122</span>: <span class="hljs-string">'湟中县'</span>,      <span class="hljs-number">630123</span>: <span class="hljs-string">'湟源县'</span>,      <span class="hljs-number">630202</span>: <span class="hljs-string">'乐都区'</span>,      <span class="hljs-number">630203</span>: <span class="hljs-string">'平安区'</span>,      <span class="hljs-number">630222</span>: <span class="hljs-string">'民和回族土族自治县'</span>,      <span class="hljs-number">630223</span>: <span class="hljs-string">'互助土族自治县'</span>,      <span class="hljs-number">630224</span>: <span class="hljs-string">'化隆回族自治县'</span>,      <span class="hljs-number">630225</span>: <span class="hljs-string">'循化撒拉族自治县'</span>,      <span class="hljs-number">632221</span>: <span class="hljs-string">'门源回族自治县'</span>,      <span class="hljs-number">632222</span>: <span class="hljs-string">'祁连县'</span>,      <span class="hljs-number">632223</span>: <span class="hljs-string">'海晏县'</span>,      <span class="hljs-number">632224</span>: <span class="hljs-string">'刚察县'</span>,      <span class="hljs-number">632321</span>: <span class="hljs-string">'同仁县'</span>,      <span class="hljs-number">632322</span>: <span class="hljs-string">'尖扎县'</span>,      <span class="hljs-number">632323</span>: <span class="hljs-string">'泽库县'</span>,      <span class="hljs-number">632324</span>: <span class="hljs-string">'河南蒙古族自治县'</span>,      <span class="hljs-number">632521</span>: <span class="hljs-string">'共和县'</span>,      <span class="hljs-number">632522</span>: <span class="hljs-string">'同德县'</span>,      <span class="hljs-number">632523</span>: <span class="hljs-string">'贵德县'</span>,      <span class="hljs-number">632524</span>: <span class="hljs-string">'兴海县'</span>,      <span class="hljs-number">632525</span>: <span class="hljs-string">'贵南县'</span>,      <span class="hljs-number">632621</span>: <span class="hljs-string">'玛沁县'</span>,      <span class="hljs-number">632622</span>: <span class="hljs-string">'班玛县'</span>,      <span class="hljs-number">632623</span>: <span class="hljs-string">'甘德县'</span>,      <span class="hljs-number">632624</span>: <span class="hljs-string">'达日县'</span>,      <span class="hljs-number">632625</span>: <span class="hljs-string">'久治县'</span>,      <span class="hljs-number">632626</span>: <span class="hljs-string">'玛多县'</span>,      <span class="hljs-number">632701</span>: <span class="hljs-string">'玉树市'</span>,      <span class="hljs-number">632722</span>: <span class="hljs-string">'杂多县'</span>,      <span class="hljs-number">632723</span>: <span class="hljs-string">'称多县'</span>,      <span class="hljs-number">632724</span>: <span class="hljs-string">'治多县'</span>,      <span class="hljs-number">632725</span>: <span class="hljs-string">'囊谦县'</span>,      <span class="hljs-number">632726</span>: <span class="hljs-string">'曲麻莱县'</span>,      <span class="hljs-number">632801</span>: <span class="hljs-string">'格尔木市'</span>,      <span class="hljs-number">632802</span>: <span class="hljs-string">'德令哈市'</span>,      <span class="hljs-number">632803</span>: <span class="hljs-string">'茫崖市'</span>,      <span class="hljs-number">632821</span>: <span class="hljs-string">'乌兰县'</span>,      <span class="hljs-number">632822</span>: <span class="hljs-string">'都兰县'</span>,      <span class="hljs-number">632823</span>: <span class="hljs-string">'天峻县'</span>,      <span class="hljs-number">640104</span>: <span class="hljs-string">'兴庆区'</span>,      <span class="hljs-number">640105</span>: <span class="hljs-string">'西夏区'</span>,      <span class="hljs-number">640106</span>: <span class="hljs-string">'金凤区'</span>,      <span class="hljs-number">640121</span>: <span class="hljs-string">'永宁县'</span>,      <span class="hljs-number">640122</span>: <span class="hljs-string">'贺兰县'</span>,      <span class="hljs-number">640181</span>: <span class="hljs-string">'灵武市'</span>,      <span class="hljs-number">640202</span>: <span class="hljs-string">'大武口区'</span>,      <span class="hljs-number">640205</span>: <span class="hljs-string">'惠农区'</span>,      <span class="hljs-number">640221</span>: <span class="hljs-string">'平罗县'</span>,      <span class="hljs-number">640302</span>: <span class="hljs-string">'利通区'</span>,      <span class="hljs-number">640303</span>: <span class="hljs-string">'红寺堡区'</span>,      <span class="hljs-number">640323</span>: <span class="hljs-string">'盐池县'</span>,      <span class="hljs-number">640324</span>: <span class="hljs-string">'同心县'</span>,      <span class="hljs-number">640381</span>: <span class="hljs-string">'青铜峡市'</span>,      <span class="hljs-number">640402</span>: <span class="hljs-string">'原州区'</span>,      <span class="hljs-number">640422</span>: <span class="hljs-string">'西吉县'</span>,      <span class="hljs-number">640423</span>: <span class="hljs-string">'隆德县'</span>,      <span class="hljs-number">640424</span>: <span class="hljs-string">'泾源县'</span>,      <span class="hljs-number">640425</span>: <span class="hljs-string">'彭阳县'</span>,      <span class="hljs-number">640502</span>: <span class="hljs-string">'沙坡头区'</span>,      <span class="hljs-number">640521</span>: <span class="hljs-string">'中宁县'</span>,      <span class="hljs-number">640522</span>: <span class="hljs-string">'海原县'</span>,      <span class="hljs-number">650102</span>: <span class="hljs-string">'天山区'</span>,      <span class="hljs-number">650103</span>: <span class="hljs-string">'沙依巴克区'</span>,      <span class="hljs-number">650104</span>: <span class="hljs-string">'新市区'</span>,      <span class="hljs-number">650105</span>: <span class="hljs-string">'水磨沟区'</span>,      <span class="hljs-number">650106</span>: <span class="hljs-string">'头屯河区'</span>,      <span class="hljs-number">650107</span>: <span class="hljs-string">'达坂城区'</span>,      <span class="hljs-number">650109</span>: <span class="hljs-string">'米东区'</span>,      <span class="hljs-number">650121</span>: <span class="hljs-string">'乌鲁木齐县'</span>,      <span class="hljs-number">650202</span>: <span class="hljs-string">'独山子区'</span>,      <span class="hljs-number">650203</span>: <span class="hljs-string">'克拉玛依区'</span>,      <span class="hljs-number">650204</span>: <span class="hljs-string">'白碱滩区'</span>,      <span class="hljs-number">650205</span>: <span class="hljs-string">'乌尔禾区'</span>,      <span class="hljs-number">650402</span>: <span class="hljs-string">'高昌区'</span>,      <span class="hljs-number">650421</span>: <span class="hljs-string">'鄯善县'</span>,      <span class="hljs-number">650422</span>: <span class="hljs-string">'托克逊县'</span>,      <span class="hljs-number">650502</span>: <span class="hljs-string">'伊州区'</span>,      <span class="hljs-number">650521</span>: <span class="hljs-string">'巴里坤哈萨克自治县'</span>,      <span class="hljs-number">650522</span>: <span class="hljs-string">'伊吾县'</span>,      <span class="hljs-number">652301</span>: <span class="hljs-string">'昌吉市'</span>,      <span class="hljs-number">652302</span>: <span class="hljs-string">'阜康市'</span>,      <span class="hljs-number">652323</span>: <span class="hljs-string">'呼图壁县'</span>,      <span class="hljs-number">652324</span>: <span class="hljs-string">'玛纳斯县'</span>,      <span class="hljs-number">652325</span>: <span class="hljs-string">'奇台县'</span>,      <span class="hljs-number">652327</span>: <span class="hljs-string">'吉木萨尔县'</span>,      <span class="hljs-number">652328</span>: <span class="hljs-string">'木垒哈萨克自治县'</span>,      <span class="hljs-number">652701</span>: <span class="hljs-string">'博乐市'</span>,      <span class="hljs-number">652702</span>: <span class="hljs-string">'阿拉山口市'</span>,      <span class="hljs-number">652722</span>: <span class="hljs-string">'精河县'</span>,      <span class="hljs-number">652723</span>: <span class="hljs-string">'温泉县'</span>,      <span class="hljs-number">652801</span>: <span class="hljs-string">'库尔勒市'</span>,      <span class="hljs-number">652822</span>: <span class="hljs-string">'轮台县'</span>,      <span class="hljs-number">652823</span>: <span class="hljs-string">'尉犁县'</span>,      <span class="hljs-number">652824</span>: <span class="hljs-string">'若羌县'</span>,      <span class="hljs-number">652825</span>: <span class="hljs-string">'且末县'</span>,      <span class="hljs-number">652826</span>: <span class="hljs-string">'焉耆回族自治县'</span>,      <span class="hljs-number">652827</span>: <span class="hljs-string">'和静县'</span>,      <span class="hljs-number">652828</span>: <span class="hljs-string">'和硕县'</span>,      <span class="hljs-number">652829</span>: <span class="hljs-string">'博湖县'</span>,      <span class="hljs-number">652901</span>: <span class="hljs-string">'阿克苏市'</span>,      <span class="hljs-number">652922</span>: <span class="hljs-string">'温宿县'</span>,      <span class="hljs-number">652923</span>: <span class="hljs-string">'库车县'</span>,      <span class="hljs-number">652924</span>: <span class="hljs-string">'沙雅县'</span>,      <span class="hljs-number">652925</span>: <span class="hljs-string">'新和县'</span>,      <span class="hljs-number">652926</span>: <span class="hljs-string">'拜城县'</span>,      <span class="hljs-number">652927</span>: <span class="hljs-string">'乌什县'</span>,      <span class="hljs-number">652928</span>: <span class="hljs-string">'阿瓦提县'</span>,      <span class="hljs-number">652929</span>: <span class="hljs-string">'柯坪县'</span>,      <span class="hljs-number">653001</span>: <span class="hljs-string">'阿图什市'</span>,      <span class="hljs-number">653022</span>: <span class="hljs-string">'阿克陶县'</span>,      <span class="hljs-number">653023</span>: <span class="hljs-string">'阿合奇县'</span>,      <span class="hljs-number">653024</span>: <span class="hljs-string">'乌恰县'</span>,      <span class="hljs-number">653101</span>: <span class="hljs-string">'喀什市'</span>,      <span class="hljs-number">653121</span>: <span class="hljs-string">'疏附县'</span>,      <span class="hljs-number">653122</span>: <span class="hljs-string">'疏勒县'</span>,      <span class="hljs-number">653123</span>: <span class="hljs-string">'英吉沙县'</span>,      <span class="hljs-number">653124</span>: <span class="hljs-string">'泽普县'</span>,      <span class="hljs-number">653125</span>: <span class="hljs-string">'莎车县'</span>,      <span class="hljs-number">653126</span>: <span class="hljs-string">'叶城县'</span>,      <span class="hljs-number">653127</span>: <span class="hljs-string">'麦盖提县'</span>,      <span class="hljs-number">653128</span>: <span class="hljs-string">'岳普湖县'</span>,      <span class="hljs-number">653129</span>: <span class="hljs-string">'伽师县'</span>,      <span class="hljs-number">653130</span>: <span class="hljs-string">'巴楚县'</span>,      <span class="hljs-number">653131</span>: <span class="hljs-string">'塔什库尔干塔吉克自治县'</span>,      <span class="hljs-number">653201</span>: <span class="hljs-string">'和田市'</span>,      <span class="hljs-number">653221</span>: <span class="hljs-string">'和田县'</span>,      <span class="hljs-number">653222</span>: <span class="hljs-string">'墨玉县'</span>,      <span class="hljs-number">653223</span>: <span class="hljs-string">'皮山县'</span>,      <span class="hljs-number">653224</span>: <span class="hljs-string">'洛浦县'</span>,      <span class="hljs-number">653225</span>: <span class="hljs-string">'策勒县'</span>,      <span class="hljs-number">653226</span>: <span class="hljs-string">'于田县'</span>,      <span class="hljs-number">653227</span>: <span class="hljs-string">'民丰县'</span>,      <span class="hljs-number">654002</span>: <span class="hljs-string">'伊宁市'</span>,      <span class="hljs-number">654003</span>: <span class="hljs-string">'奎屯市'</span>,      <span class="hljs-number">654004</span>: <span class="hljs-string">'霍尔果斯市'</span>,      <span class="hljs-number">654021</span>: <span class="hljs-string">'伊宁县'</span>,      <span class="hljs-number">654022</span>: <span class="hljs-string">'察布查尔锡伯自治县'</span>,      <span class="hljs-number">654023</span>: <span class="hljs-string">'霍城县'</span>,      <span class="hljs-number">654024</span>: <span class="hljs-string">'巩留县'</span>,      <span class="hljs-number">654025</span>: <span class="hljs-string">'新源县'</span>,      <span class="hljs-number">654026</span>: <span class="hljs-string">'昭苏县'</span>,      <span class="hljs-number">654027</span>: <span class="hljs-string">'特克斯县'</span>,      <span class="hljs-number">654028</span>: <span class="hljs-string">'尼勒克县'</span>,      <span class="hljs-number">654201</span>: <span class="hljs-string">'塔城市'</span>,      <span class="hljs-number">654202</span>: <span class="hljs-string">'乌苏市'</span>,      <span class="hljs-number">654221</span>: <span class="hljs-string">'额敏县'</span>,      <span class="hljs-number">654223</span>: <span class="hljs-string">'沙湾县'</span>,      <span class="hljs-number">654224</span>: <span class="hljs-string">'托里县'</span>,      <span class="hljs-number">654225</span>: <span class="hljs-string">'裕民县'</span>,      <span class="hljs-number">654226</span>: <span class="hljs-string">'和布克赛尔蒙古自治县'</span>,      <span class="hljs-number">654301</span>: <span class="hljs-string">'阿勒泰市'</span>,      <span class="hljs-number">654321</span>: <span class="hljs-string">'布尔津县'</span>,      <span class="hljs-number">654322</span>: <span class="hljs-string">'富蕴县'</span>,      <span class="hljs-number">654323</span>: <span class="hljs-string">'福海县'</span>,      <span class="hljs-number">654324</span>: <span class="hljs-string">'哈巴河县'</span>,      <span class="hljs-number">654325</span>: <span class="hljs-string">'青河县'</span>,      <span class="hljs-number">654326</span>: <span class="hljs-string">'吉木乃县'</span>,      <span class="hljs-number">659001</span>: <span class="hljs-string">'石河子市'</span>,      <span class="hljs-number">659002</span>: <span class="hljs-string">'阿拉尔市'</span>,      <span class="hljs-number">659003</span>: <span class="hljs-string">'图木舒克市'</span>,      <span class="hljs-number">659004</span>: <span class="hljs-string">'五家渠市'</span>,      <span class="hljs-number">659005</span>: <span class="hljs-string">'北屯市'</span>,      <span class="hljs-number">659006</span>: <span class="hljs-string">'铁门关市'</span>,      <span class="hljs-number">659007</span>: <span class="hljs-string">'双河市'</span>,      <span class="hljs-number">659008</span>: <span class="hljs-string">'可克达拉市'</span>,      <span class="hljs-number">659009</span>: <span class="hljs-string">'昆玉市'</span>,      <span class="hljs-number">710101</span>: <span class="hljs-string">'中正区'</span>,      <span class="hljs-number">710102</span>: <span class="hljs-string">'大同区'</span>,      <span class="hljs-number">710103</span>: <span class="hljs-string">'中山区'</span>,      <span class="hljs-number">710104</span>: <span class="hljs-string">'松山区'</span>,      <span class="hljs-number">710105</span>: <span class="hljs-string">'大安区'</span>,      <span class="hljs-number">710106</span>: <span class="hljs-string">'万华区'</span>,      <span class="hljs-number">710107</span>: <span class="hljs-string">'信义区'</span>,      <span class="hljs-number">710108</span>: <span class="hljs-string">'士林区'</span>,      <span class="hljs-number">710109</span>: <span class="hljs-string">'北投区'</span>,      <span class="hljs-number">710110</span>: <span class="hljs-string">'内湖区'</span>,      <span class="hljs-number">710111</span>: <span class="hljs-string">'南港区'</span>,      <span class="hljs-number">710112</span>: <span class="hljs-string">'文山区'</span>,      <span class="hljs-number">710199</span>: <span class="hljs-string">'其它区'</span>,      <span class="hljs-number">710201</span>: <span class="hljs-string">'新兴区'</span>,      <span class="hljs-number">710202</span>: <span class="hljs-string">'前金区'</span>,      <span class="hljs-number">710203</span>: <span class="hljs-string">'芩雅区'</span>,      <span class="hljs-number">710204</span>: <span class="hljs-string">'盐埕区'</span>,      <span class="hljs-number">710205</span>: <span class="hljs-string">'鼓山区'</span>,      <span class="hljs-number">710206</span>: <span class="hljs-string">'旗津区'</span>,      <span class="hljs-number">710207</span>: <span class="hljs-string">'前镇区'</span>,      <span class="hljs-number">710208</span>: <span class="hljs-string">'三民区'</span>,      <span class="hljs-number">710209</span>: <span class="hljs-string">'左营区'</span>,      <span class="hljs-number">710210</span>: <span class="hljs-string">'楠梓区'</span>,      <span class="hljs-number">710211</span>: <span class="hljs-string">'小港区'</span>,      <span class="hljs-number">710241</span>: <span class="hljs-string">'苓雅区'</span>,      <span class="hljs-number">710242</span>: <span class="hljs-string">'仁武区'</span>,      <span class="hljs-number">710243</span>: <span class="hljs-string">'大社区'</span>,      <span class="hljs-number">710244</span>: <span class="hljs-string">'冈山区'</span>,      <span class="hljs-number">710245</span>: <span class="hljs-string">'路竹区'</span>,      <span class="hljs-number">710246</span>: <span class="hljs-string">'阿莲区'</span>,      <span class="hljs-number">710247</span>: <span class="hljs-string">'田寮区'</span>,      <span class="hljs-number">710248</span>: <span class="hljs-string">'燕巢区'</span>,      <span class="hljs-number">710249</span>: <span class="hljs-string">'桥头区'</span>,      <span class="hljs-number">710250</span>: <span class="hljs-string">'梓官区'</span>,      <span class="hljs-number">710251</span>: <span class="hljs-string">'弥陀区'</span>,      <span class="hljs-number">710252</span>: <span class="hljs-string">'永安区'</span>,      <span class="hljs-number">710253</span>: <span class="hljs-string">'湖内区'</span>,      <span class="hljs-number">710254</span>: <span class="hljs-string">'凤山区'</span>,      <span class="hljs-number">710255</span>: <span class="hljs-string">'大寮区'</span>,      <span class="hljs-number">710256</span>: <span class="hljs-string">'林园区'</span>,      <span class="hljs-number">710257</span>: <span class="hljs-string">'鸟松区'</span>,      <span class="hljs-number">710258</span>: <span class="hljs-string">'大树区'</span>,      <span class="hljs-number">710259</span>: <span class="hljs-string">'旗山区'</span>,      <span class="hljs-number">710260</span>: <span class="hljs-string">'美浓区'</span>,      <span class="hljs-number">710261</span>: <span class="hljs-string">'六龟区'</span>,      <span class="hljs-number">710262</span>: <span class="hljs-string">'内门区'</span>,      <span class="hljs-number">710263</span>: <span class="hljs-string">'杉林区'</span>,      <span class="hljs-number">710264</span>: <span class="hljs-string">'甲仙区'</span>,      <span class="hljs-number">710265</span>: <span class="hljs-string">'桃源区'</span>,      <span class="hljs-number">710266</span>: <span class="hljs-string">'那玛夏区'</span>,      <span class="hljs-number">710267</span>: <span class="hljs-string">'茂林区'</span>,      <span class="hljs-number">710268</span>: <span class="hljs-string">'茄萣区'</span>,      <span class="hljs-number">710299</span>: <span class="hljs-string">'其它区'</span>,      <span class="hljs-number">710301</span>: <span class="hljs-string">'中西区'</span>,      <span class="hljs-number">710302</span>: <span class="hljs-string">'东区'</span>,      <span class="hljs-number">710303</span>: <span class="hljs-string">'南区'</span>,      <span class="hljs-number">710304</span>: <span class="hljs-string">'北区'</span>,      <span class="hljs-number">710305</span>: <span class="hljs-string">'安平区'</span>,      <span class="hljs-number">710306</span>: <span class="hljs-string">'安南区'</span>,      <span class="hljs-number">710339</span>: <span class="hljs-string">'永康区'</span>,      <span class="hljs-number">710340</span>: <span class="hljs-string">'归仁区'</span>,      <span class="hljs-number">710341</span>: <span class="hljs-string">'新化区'</span>,      <span class="hljs-number">710342</span>: <span class="hljs-string">'左镇区'</span>,      <span class="hljs-number">710343</span>: <span class="hljs-string">'玉井区'</span>,      <span class="hljs-number">710344</span>: <span class="hljs-string">'楠西区'</span>,      <span class="hljs-number">710345</span>: <span class="hljs-string">'南化区'</span>,      <span class="hljs-number">710346</span>: <span class="hljs-string">'仁德区'</span>,      <span class="hljs-number">710347</span>: <span class="hljs-string">'关庙区'</span>,      <span class="hljs-number">710348</span>: <span class="hljs-string">'龙崎区'</span>,      <span class="hljs-number">710349</span>: <span class="hljs-string">'官田区'</span>,      <span class="hljs-number">710350</span>: <span class="hljs-string">'麻豆区'</span>,      <span class="hljs-number">710351</span>: <span class="hljs-string">'佳里区'</span>,      <span class="hljs-number">710352</span>: <span class="hljs-string">'西港区'</span>,      <span class="hljs-number">710353</span>: <span class="hljs-string">'七股区'</span>,      <span class="hljs-number">710354</span>: <span class="hljs-string">'将军区'</span>,      <span class="hljs-number">710355</span>: <span class="hljs-string">'学甲区'</span>,      <span class="hljs-number">710356</span>: <span class="hljs-string">'北门区'</span>,      <span class="hljs-number">710357</span>: <span class="hljs-string">'新营区'</span>,      <span class="hljs-number">710358</span>: <span class="hljs-string">'后壁区'</span>,      <span class="hljs-number">710359</span>: <span class="hljs-string">'白河区'</span>,      <span class="hljs-number">710360</span>: <span class="hljs-string">'东山区'</span>,      <span class="hljs-number">710361</span>: <span class="hljs-string">'六甲区'</span>,      <span class="hljs-number">710362</span>: <span class="hljs-string">'下营区'</span>,      <span class="hljs-number">710363</span>: <span class="hljs-string">'柳营区'</span>,      <span class="hljs-number">710364</span>: <span class="hljs-string">'盐水区'</span>,      <span class="hljs-number">710365</span>: <span class="hljs-string">'善化区'</span>,      <span class="hljs-number">710366</span>: <span class="hljs-string">'大内区'</span>,      <span class="hljs-number">710367</span>: <span class="hljs-string">'山上区'</span>,      <span class="hljs-number">710368</span>: <span class="hljs-string">'新市区'</span>,      <span class="hljs-number">710369</span>: <span class="hljs-string">'安定区'</span>,      <span class="hljs-number">710399</span>: <span class="hljs-string">'其它区'</span>,      <span class="hljs-number">710401</span>: <span class="hljs-string">'中区'</span>,      <span class="hljs-number">710402</span>: <span class="hljs-string">'东区'</span>,      <span class="hljs-number">710403</span>: <span class="hljs-string">'南区'</span>,      <span class="hljs-number">710404</span>: <span class="hljs-string">'西区'</span>,      <span class="hljs-number">710405</span>: <span class="hljs-string">'北区'</span>,      <span class="hljs-number">710406</span>: <span class="hljs-string">'北屯区'</span>,      <span class="hljs-number">710407</span>: <span class="hljs-string">'西屯区'</span>,      <span class="hljs-number">710408</span>: <span class="hljs-string">'南屯区'</span>,      <span class="hljs-number">710431</span>: <span class="hljs-string">'太平区'</span>,      <span class="hljs-number">710432</span>: <span class="hljs-string">'大里区'</span>,      <span class="hljs-number">710433</span>: <span class="hljs-string">'雾峰区'</span>,      <span class="hljs-number">710434</span>: <span class="hljs-string">'乌日区'</span>,      <span class="hljs-number">710435</span>: <span class="hljs-string">'丰原区'</span>,      <span class="hljs-number">710436</span>: <span class="hljs-string">'后里区'</span>,      <span class="hljs-number">710437</span>: <span class="hljs-string">'石冈区'</span>,      <span class="hljs-number">710438</span>: <span class="hljs-string">'东势区'</span>,      <span class="hljs-number">710439</span>: <span class="hljs-string">'和平区'</span>,      <span class="hljs-number">710440</span>: <span class="hljs-string">'新社区'</span>,      <span class="hljs-number">710441</span>: <span class="hljs-string">'潭子区'</span>,      <span class="hljs-number">710442</span>: <span class="hljs-string">'大雅区'</span>,      <span class="hljs-number">710443</span>: <span class="hljs-string">'神冈区'</span>,      <span class="hljs-number">710444</span>: <span class="hljs-string">'大肚区'</span>,      <span class="hljs-number">710445</span>: <span class="hljs-string">'沙鹿区'</span>,      <span class="hljs-number">710446</span>: <span class="hljs-string">'龙井区'</span>,      <span class="hljs-number">710447</span>: <span class="hljs-string">'梧栖区'</span>,      <span class="hljs-number">710448</span>: <span class="hljs-string">'清水区'</span>,      <span class="hljs-number">710449</span>: <span class="hljs-string">'大甲区'</span>,      <span class="hljs-number">710450</span>: <span class="hljs-string">'外埔区'</span>,      <span class="hljs-number">710451</span>: <span class="hljs-string">'大安区'</span>,      <span class="hljs-number">710499</span>: <span class="hljs-string">'其它区'</span>,      <span class="hljs-number">710507</span>: <span class="hljs-string">'金沙镇'</span>,      <span class="hljs-number">710508</span>: <span class="hljs-string">'金湖镇'</span>,      <span class="hljs-number">710509</span>: <span class="hljs-string">'金宁乡'</span>,      <span class="hljs-number">710510</span>: <span class="hljs-string">'金城镇'</span>,      <span class="hljs-number">710511</span>: <span class="hljs-string">'烈屿乡'</span>,      <span class="hljs-number">710512</span>: <span class="hljs-string">'乌坵乡'</span>,      <span class="hljs-number">710614</span>: <span class="hljs-string">'南投市'</span>,      <span class="hljs-number">710615</span>: <span class="hljs-string">'中寮乡'</span>,      <span class="hljs-number">710616</span>: <span class="hljs-string">'草屯镇'</span>,      <span class="hljs-number">710617</span>: <span class="hljs-string">'国姓乡'</span>,      <span class="hljs-number">710618</span>: <span class="hljs-string">'埔里镇'</span>,      <span class="hljs-number">710619</span>: <span class="hljs-string">'仁爱乡'</span>,      <span class="hljs-number">710620</span>: <span class="hljs-string">'名间乡'</span>,      <span class="hljs-number">710621</span>: <span class="hljs-string">'集集镇'</span>,      <span class="hljs-number">710622</span>: <span class="hljs-string">'水里乡'</span>,      <span class="hljs-number">710623</span>: <span class="hljs-string">'鱼池乡'</span>,      <span class="hljs-number">710624</span>: <span class="hljs-string">'信义乡'</span>,      <span class="hljs-number">710625</span>: <span class="hljs-string">'竹山镇'</span>,      <span class="hljs-number">710626</span>: <span class="hljs-string">'鹿谷乡'</span>,      <span class="hljs-number">710701</span>: <span class="hljs-string">'仁爱区'</span>,      <span class="hljs-number">710702</span>: <span class="hljs-string">'信义区'</span>,      <span class="hljs-number">710703</span>: <span class="hljs-string">'中正区'</span>,      <span class="hljs-number">710704</span>: <span class="hljs-string">'中山区'</span>,      <span class="hljs-number">710705</span>: <span class="hljs-string">'安乐区'</span>,      <span class="hljs-number">710706</span>: <span class="hljs-string">'暖暖区'</span>,      <span class="hljs-number">710707</span>: <span class="hljs-string">'七堵区'</span>,      <span class="hljs-number">710799</span>: <span class="hljs-string">'其它区'</span>,      <span class="hljs-number">710801</span>: <span class="hljs-string">'东区'</span>,      <span class="hljs-number">710802</span>: <span class="hljs-string">'北区'</span>,      <span class="hljs-number">710803</span>: <span class="hljs-string">'香山区'</span>,      <span class="hljs-number">710899</span>: <span class="hljs-string">'其它区'</span>,      <span class="hljs-number">710901</span>: <span class="hljs-string">'东区'</span>,      <span class="hljs-number">710902</span>: <span class="hljs-string">'西区'</span>,      <span class="hljs-number">710999</span>: <span class="hljs-string">'其它区'</span>,      <span class="hljs-number">711130</span>: <span class="hljs-string">'万里区'</span>,      <span class="hljs-number">711132</span>: <span class="hljs-string">'板桥区'</span>,      <span class="hljs-number">711133</span>: <span class="hljs-string">'汐止区'</span>,      <span class="hljs-number">711134</span>: <span class="hljs-string">'深坑区'</span>,      <span class="hljs-number">711135</span>: <span class="hljs-string">'石碇区'</span>,      <span class="hljs-number">711136</span>: <span class="hljs-string">'瑞芳区'</span>,      <span class="hljs-number">711137</span>: <span class="hljs-string">'平溪区'</span>,      <span class="hljs-number">711138</span>: <span class="hljs-string">'双溪区'</span>,      <span class="hljs-number">711139</span>: <span class="hljs-string">'贡寮区'</span>,      <span class="hljs-number">711140</span>: <span class="hljs-string">'新店区'</span>,      <span class="hljs-number">711141</span>: <span class="hljs-string">'坪林区'</span>,      <span class="hljs-number">711142</span>: <span class="hljs-string">'乌来区'</span>,      <span class="hljs-number">711143</span>: <span class="hljs-string">'永和区'</span>,      <span class="hljs-number">711144</span>: <span class="hljs-string">'中和区'</span>,      <span class="hljs-number">711145</span>: <span class="hljs-string">'土城区'</span>,      <span class="hljs-number">711146</span>: <span class="hljs-string">'三峡区'</span>,      <span class="hljs-number">711147</span>: <span class="hljs-string">'树林区'</span>,      <span class="hljs-number">711148</span>: <span class="hljs-string">'莺歌区'</span>,      <span class="hljs-number">711149</span>: <span class="hljs-string">'三重区'</span>,      <span class="hljs-number">711150</span>: <span class="hljs-string">'新庄区'</span>,      <span class="hljs-number">711151</span>: <span class="hljs-string">'泰山区'</span>,      <span class="hljs-number">711152</span>: <span class="hljs-string">'林口区'</span>,      <span class="hljs-number">711153</span>: <span class="hljs-string">'芦洲区'</span>,      <span class="hljs-number">711154</span>: <span class="hljs-string">'五股区'</span>,      <span class="hljs-number">711155</span>: <span class="hljs-string">'八里区'</span>,      <span class="hljs-number">711156</span>: <span class="hljs-string">'淡水区'</span>,      <span class="hljs-number">711157</span>: <span class="hljs-string">'三芝区'</span>,      <span class="hljs-number">711158</span>: <span class="hljs-string">'石门区'</span>,      <span class="hljs-number">711287</span>: <span class="hljs-string">'宜兰市'</span>,      <span class="hljs-number">711288</span>: <span class="hljs-string">'头城镇'</span>,      <span class="hljs-number">711289</span>: <span class="hljs-string">'礁溪乡'</span>,      <span class="hljs-number">711290</span>: <span class="hljs-string">'壮围乡'</span>,      <span class="hljs-number">711291</span>: <span class="hljs-string">'员山乡'</span>,      <span class="hljs-number">711292</span>: <span class="hljs-string">'罗东镇'</span>,      <span class="hljs-number">711293</span>: <span class="hljs-string">'三星乡'</span>,      <span class="hljs-number">711294</span>: <span class="hljs-string">'大同乡'</span>,      <span class="hljs-number">711295</span>: <span class="hljs-string">'五结乡'</span>,      <span class="hljs-number">711296</span>: <span class="hljs-string">'冬山乡'</span>,      <span class="hljs-number">711297</span>: <span class="hljs-string">'苏澳镇'</span>,      <span class="hljs-number">711298</span>: <span class="hljs-string">'南澳乡'</span>,      <span class="hljs-number">711299</span>: <span class="hljs-string">'钓鱼台'</span>,      <span class="hljs-number">711387</span>: <span class="hljs-string">'竹北市'</span>,      <span class="hljs-number">711388</span>: <span class="hljs-string">'湖口乡'</span>,      <span class="hljs-number">711389</span>: <span class="hljs-string">'新丰乡'</span>,      <span class="hljs-number">711390</span>: <span class="hljs-string">'新埔镇'</span>,      <span class="hljs-number">711391</span>: <span class="hljs-string">'关西镇'</span>,      <span class="hljs-number">711392</span>: <span class="hljs-string">'芎林乡'</span>,      <span class="hljs-number">711393</span>: <span class="hljs-string">'宝山乡'</span>,      <span class="hljs-number">711394</span>: <span class="hljs-string">'竹东镇'</span>,      <span class="hljs-number">711395</span>: <span class="hljs-string">'五峰乡'</span>,      <span class="hljs-number">711396</span>: <span class="hljs-string">'横山乡'</span>,      <span class="hljs-number">711397</span>: <span class="hljs-string">'尖石乡'</span>,      <span class="hljs-number">711398</span>: <span class="hljs-string">'北埔乡'</span>,      <span class="hljs-number">711399</span>: <span class="hljs-string">'峨眉乡'</span>,      <span class="hljs-number">711414</span>: <span class="hljs-string">'中坜区'</span>,      <span class="hljs-number">711415</span>: <span class="hljs-string">'平镇区'</span>,      <span class="hljs-number">711417</span>: <span class="hljs-string">'杨梅区'</span>,      <span class="hljs-number">711418</span>: <span class="hljs-string">'新屋区'</span>,      <span class="hljs-number">711419</span>: <span class="hljs-string">'观音区'</span>,      <span class="hljs-number">711420</span>: <span class="hljs-string">'桃园区'</span>,      <span class="hljs-number">711421</span>: <span class="hljs-string">'龟山区'</span>,      <span class="hljs-number">711422</span>: <span class="hljs-string">'八德区'</span>,      <span class="hljs-number">711423</span>: <span class="hljs-string">'大溪区'</span>,      <span class="hljs-number">711425</span>: <span class="hljs-string">'大园区'</span>,      <span class="hljs-number">711426</span>: <span class="hljs-string">'芦竹区'</span>,      <span class="hljs-number">711487</span>: <span class="hljs-string">'中坜市'</span>,      <span class="hljs-number">711488</span>: <span class="hljs-string">'平镇市'</span>,      <span class="hljs-number">711489</span>: <span class="hljs-string">'龙潭乡'</span>,      <span class="hljs-number">711490</span>: <span class="hljs-string">'杨梅市'</span>,      <span class="hljs-number">711491</span>: <span class="hljs-string">'新屋乡'</span>,      <span class="hljs-number">711492</span>: <span class="hljs-string">'观音乡'</span>,      <span class="hljs-number">711493</span>: <span class="hljs-string">'桃园市'</span>,      <span class="hljs-number">711494</span>: <span class="hljs-string">'龟山乡'</span>,      <span class="hljs-number">711495</span>: <span class="hljs-string">'八德市'</span>,      <span class="hljs-number">711496</span>: <span class="hljs-string">'大溪镇'</span>,      <span class="hljs-number">711497</span>: <span class="hljs-string">'复兴乡'</span>,      <span class="hljs-number">711498</span>: <span class="hljs-string">'大园乡'</span>,      <span class="hljs-number">711499</span>: <span class="hljs-string">'芦竹乡'</span>,      <span class="hljs-number">711520</span>: <span class="hljs-string">'头份市'</span>,      <span class="hljs-number">711582</span>: <span class="hljs-string">'竹南镇'</span>,      <span class="hljs-number">711583</span>: <span class="hljs-string">'头份镇'</span>,      <span class="hljs-number">711584</span>: <span class="hljs-string">'三湾乡'</span>,      <span class="hljs-number">711585</span>: <span class="hljs-string">'南庄乡'</span>,      <span class="hljs-number">711586</span>: <span class="hljs-string">'狮潭乡'</span>,      <span class="hljs-number">711587</span>: <span class="hljs-string">'后龙镇'</span>,      <span class="hljs-number">711588</span>: <span class="hljs-string">'通霄镇'</span>,      <span class="hljs-number">711589</span>: <span class="hljs-string">'苑里镇'</span>,      <span class="hljs-number">711590</span>: <span class="hljs-string">'苗栗市'</span>,      <span class="hljs-number">711591</span>: <span class="hljs-string">'造桥乡'</span>,      <span class="hljs-number">711592</span>: <span class="hljs-string">'头屋乡'</span>,      <span class="hljs-number">711593</span>: <span class="hljs-string">'公馆乡'</span>,      <span class="hljs-number">711594</span>: <span class="hljs-string">'大湖乡'</span>,      <span class="hljs-number">711595</span>: <span class="hljs-string">'泰安乡'</span>,      <span class="hljs-number">711596</span>: <span class="hljs-string">'铜锣乡'</span>,      <span class="hljs-number">711597</span>: <span class="hljs-string">'三义乡'</span>,      <span class="hljs-number">711598</span>: <span class="hljs-string">'西湖乡'</span>,      <span class="hljs-number">711599</span>: <span class="hljs-string">'卓兰镇'</span>,      <span class="hljs-number">711736</span>: <span class="hljs-string">'员林市'</span>,      <span class="hljs-number">711774</span>: <span class="hljs-string">'彰化市'</span>,      <span class="hljs-number">711775</span>: <span class="hljs-string">'芬园乡'</span>,      <span class="hljs-number">711776</span>: <span class="hljs-string">'花坛乡'</span>,      <span class="hljs-number">711777</span>: <span class="hljs-string">'秀水乡'</span>,      <span class="hljs-number">711778</span>: <span class="hljs-string">'鹿港镇'</span>,      <span class="hljs-number">711779</span>: <span class="hljs-string">'福兴乡'</span>,      <span class="hljs-number">711780</span>: <span class="hljs-string">'线西乡'</span>,      <span class="hljs-number">711781</span>: <span class="hljs-string">'和美镇'</span>,      <span class="hljs-number">711782</span>: <span class="hljs-string">'伸港乡'</span>,      <span class="hljs-number">711783</span>: <span class="hljs-string">'员林镇'</span>,      <span class="hljs-number">711784</span>: <span class="hljs-string">'社头乡'</span>,      <span class="hljs-number">711785</span>: <span class="hljs-string">'永靖乡'</span>,      <span class="hljs-number">711786</span>: <span class="hljs-string">'埔心乡'</span>,      <span class="hljs-number">711787</span>: <span class="hljs-string">'溪湖镇'</span>,      <span class="hljs-number">711788</span>: <span class="hljs-string">'大村乡'</span>,      <span class="hljs-number">711789</span>: <span class="hljs-string">'埔盐乡'</span>,      <span class="hljs-number">711790</span>: <span class="hljs-string">'田中镇'</span>,      <span class="hljs-number">711791</span>: <span class="hljs-string">'北斗镇'</span>,      <span class="hljs-number">711792</span>: <span class="hljs-string">'田尾乡'</span>,      <span class="hljs-number">711793</span>: <span class="hljs-string">'埤头乡'</span>,      <span class="hljs-number">711794</span>: <span class="hljs-string">'溪州乡'</span>,      <span class="hljs-number">711795</span>: <span class="hljs-string">'竹塘乡'</span>,      <span class="hljs-number">711796</span>: <span class="hljs-string">'二林镇'</span>,      <span class="hljs-number">711797</span>: <span class="hljs-string">'大城乡'</span>,      <span class="hljs-number">711798</span>: <span class="hljs-string">'芳苑乡'</span>,      <span class="hljs-number">711799</span>: <span class="hljs-string">'二水乡'</span>,      <span class="hljs-number">711982</span>: <span class="hljs-string">'番路乡'</span>,      <span class="hljs-number">711983</span>: <span class="hljs-string">'梅山乡'</span>,      <span class="hljs-number">711984</span>: <span class="hljs-string">'竹崎乡'</span>,      <span class="hljs-number">711985</span>: <span class="hljs-string">'阿里山乡'</span>,      <span class="hljs-number">711986</span>: <span class="hljs-string">'中埔乡'</span>,      <span class="hljs-number">711987</span>: <span class="hljs-string">'大埔乡'</span>,      <span class="hljs-number">711988</span>: <span class="hljs-string">'水上乡'</span>,      <span class="hljs-number">711989</span>: <span class="hljs-string">'鹿草乡'</span>,      <span class="hljs-number">711990</span>: <span class="hljs-string">'太保市'</span>,      <span class="hljs-number">711991</span>: <span class="hljs-string">'朴子市'</span>,      <span class="hljs-number">711992</span>: <span class="hljs-string">'东石乡'</span>,      <span class="hljs-number">711993</span>: <span class="hljs-string">'六脚乡'</span>,      <span class="hljs-number">711994</span>: <span class="hljs-string">'新港乡'</span>,      <span class="hljs-number">711995</span>: <span class="hljs-string">'民雄乡'</span>,      <span class="hljs-number">711996</span>: <span class="hljs-string">'大林镇'</span>,      <span class="hljs-number">711997</span>: <span class="hljs-string">'溪口乡'</span>,      <span class="hljs-number">711998</span>: <span class="hljs-string">'义竹乡'</span>,      <span class="hljs-number">711999</span>: <span class="hljs-string">'布袋镇'</span>,      <span class="hljs-number">712180</span>: <span class="hljs-string">'斗南镇'</span>,      <span class="hljs-number">712181</span>: <span class="hljs-string">'大埤乡'</span>,      <span class="hljs-number">712182</span>: <span class="hljs-string">'虎尾镇'</span>,      <span class="hljs-number">712183</span>: <span class="hljs-string">'土库镇'</span>,      <span class="hljs-number">712184</span>: <span class="hljs-string">'褒忠乡'</span>,      <span class="hljs-number">712185</span>: <span class="hljs-string">'东势乡'</span>,      <span class="hljs-number">712186</span>: <span class="hljs-string">'台西乡'</span>,      <span class="hljs-number">712187</span>: <span class="hljs-string">'仑背乡'</span>,      <span class="hljs-number">712188</span>: <span class="hljs-string">'麦寮乡'</span>,      <span class="hljs-number">712189</span>: <span class="hljs-string">'斗六市'</span>,      <span class="hljs-number">712190</span>: <span class="hljs-string">'林内乡'</span>,      <span class="hljs-number">712191</span>: <span class="hljs-string">'古坑乡'</span>,      <span class="hljs-number">712192</span>: <span class="hljs-string">'莿桐乡'</span>,      <span class="hljs-number">712193</span>: <span class="hljs-string">'西螺镇'</span>,      <span class="hljs-number">712194</span>: <span class="hljs-string">'二仑乡'</span>,      <span class="hljs-number">712195</span>: <span class="hljs-string">'北港镇'</span>,      <span class="hljs-number">712196</span>: <span class="hljs-string">'水林乡'</span>,      <span class="hljs-number">712197</span>: <span class="hljs-string">'口湖乡'</span>,      <span class="hljs-number">712198</span>: <span class="hljs-string">'四湖乡'</span>,      <span class="hljs-number">712199</span>: <span class="hljs-string">'元长乡'</span>,      <span class="hljs-number">712451</span>: <span class="hljs-string">'崁顶乡'</span>,      <span class="hljs-number">712467</span>: <span class="hljs-string">'屏东市'</span>,      <span class="hljs-number">712468</span>: <span class="hljs-string">'三地门乡'</span>,      <span class="hljs-number">712469</span>: <span class="hljs-string">'雾台乡'</span>,      <span class="hljs-number">712470</span>: <span class="hljs-string">'玛家乡'</span>,      <span class="hljs-number">712471</span>: <span class="hljs-string">'九如乡'</span>,      <span class="hljs-number">712472</span>: <span class="hljs-string">'里港乡'</span>,      <span class="hljs-number">712473</span>: <span class="hljs-string">'高树乡'</span>,      <span class="hljs-number">712474</span>: <span class="hljs-string">'盐埔乡'</span>,      <span class="hljs-number">712475</span>: <span class="hljs-string">'长治乡'</span>,      <span class="hljs-number">712476</span>: <span class="hljs-string">'麟洛乡'</span>,      <span class="hljs-number">712477</span>: <span class="hljs-string">'竹田乡'</span>,      <span class="hljs-number">712478</span>: <span class="hljs-string">'内埔乡'</span>,      <span class="hljs-number">712479</span>: <span class="hljs-string">'万丹乡'</span>,      <span class="hljs-number">712480</span>: <span class="hljs-string">'潮州镇'</span>,      <span class="hljs-number">712481</span>: <span class="hljs-string">'泰武乡'</span>,      <span class="hljs-number">712482</span>: <span class="hljs-string">'来义乡'</span>,      <span class="hljs-number">712483</span>: <span class="hljs-string">'万峦乡'</span>,      <span class="hljs-number">712484</span>: <span class="hljs-string">'莰顶乡'</span>,      <span class="hljs-number">712485</span>: <span class="hljs-string">'新埤乡'</span>,      <span class="hljs-number">712486</span>: <span class="hljs-string">'南州乡'</span>,      <span class="hljs-number">712487</span>: <span class="hljs-string">'林边乡'</span>,      <span class="hljs-number">712488</span>: <span class="hljs-string">'东港镇'</span>,      <span class="hljs-number">712489</span>: <span class="hljs-string">'琉球乡'</span>,      <span class="hljs-number">712490</span>: <span class="hljs-string">'佳冬乡'</span>,      <span class="hljs-number">712491</span>: <span class="hljs-string">'新园乡'</span>,      <span class="hljs-number">712492</span>: <span class="hljs-string">'枋寮乡'</span>,      <span class="hljs-number">712493</span>: <span class="hljs-string">'枋山乡'</span>,      <span class="hljs-number">712494</span>: <span class="hljs-string">'春日乡'</span>,      <span class="hljs-number">712495</span>: <span class="hljs-string">'狮子乡'</span>,      <span class="hljs-number">712496</span>: <span class="hljs-string">'车城乡'</span>,      <span class="hljs-number">712497</span>: <span class="hljs-string">'牡丹乡'</span>,      <span class="hljs-number">712498</span>: <span class="hljs-string">'恒春镇'</span>,      <span class="hljs-number">712499</span>: <span class="hljs-string">'满州乡'</span>,      <span class="hljs-number">712584</span>: <span class="hljs-string">'台东市'</span>,      <span class="hljs-number">712585</span>: <span class="hljs-string">'绿岛乡'</span>,      <span class="hljs-number">712586</span>: <span class="hljs-string">'兰屿乡'</span>,      <span class="hljs-number">712587</span>: <span class="hljs-string">'延平乡'</span>,      <span class="hljs-number">712588</span>: <span class="hljs-string">'卑南乡'</span>,      <span class="hljs-number">712589</span>: <span class="hljs-string">'鹿野乡'</span>,      <span class="hljs-number">712590</span>: <span class="hljs-string">'关山镇'</span>,      <span class="hljs-number">712591</span>: <span class="hljs-string">'海端乡'</span>,      <span class="hljs-number">712592</span>: <span class="hljs-string">'池上乡'</span>,      <span class="hljs-number">712593</span>: <span class="hljs-string">'东河乡'</span>,      <span class="hljs-number">712594</span>: <span class="hljs-string">'成功镇'</span>,      <span class="hljs-number">712595</span>: <span class="hljs-string">'长滨乡'</span>,      <span class="hljs-number">712596</span>: <span class="hljs-string">'金峰乡'</span>,      <span class="hljs-number">712597</span>: <span class="hljs-string">'大武乡'</span>,      <span class="hljs-number">712598</span>: <span class="hljs-string">'达仁乡'</span>,      <span class="hljs-number">712599</span>: <span class="hljs-string">'太麻里乡'</span>,      <span class="hljs-number">712686</span>: <span class="hljs-string">'花莲市'</span>,      <span class="hljs-number">712687</span>: <span class="hljs-string">'新城乡'</span>,      <span class="hljs-number">712688</span>: <span class="hljs-string">'太鲁阁'</span>,      <span class="hljs-number">712689</span>: <span class="hljs-string">'秀林乡'</span>,      <span class="hljs-number">712690</span>: <span class="hljs-string">'吉安乡'</span>,      <span class="hljs-number">712691</span>: <span class="hljs-string">'寿丰乡'</span>,      <span class="hljs-number">712692</span>: <span class="hljs-string">'凤林镇'</span>,      <span class="hljs-number">712693</span>: <span class="hljs-string">'光复乡'</span>,      <span class="hljs-number">712694</span>: <span class="hljs-string">'丰滨乡'</span>,      <span class="hljs-number">712695</span>: <span class="hljs-string">'瑞穗乡'</span>,      <span class="hljs-number">712696</span>: <span class="hljs-string">'万荣乡'</span>,      <span class="hljs-number">712697</span>: <span class="hljs-string">'玉里镇'</span>,      <span class="hljs-number">712698</span>: <span class="hljs-string">'卓溪乡'</span>,      <span class="hljs-number">712699</span>: <span class="hljs-string">'富里乡'</span>,      <span class="hljs-number">712794</span>: <span class="hljs-string">'马公市'</span>,      <span class="hljs-number">712795</span>: <span class="hljs-string">'西屿乡'</span>,      <span class="hljs-number">712796</span>: <span class="hljs-string">'望安乡'</span>,      <span class="hljs-number">712797</span>: <span class="hljs-string">'七美乡'</span>,      <span class="hljs-number">712798</span>: <span class="hljs-string">'白沙乡'</span>,      <span class="hljs-number">712799</span>: <span class="hljs-string">'湖西乡'</span>,      <span class="hljs-number">712896</span>: <span class="hljs-string">'南竿乡'</span>,      <span class="hljs-number">712897</span>: <span class="hljs-string">'北竿乡'</span>,      <span class="hljs-number">712898</span>: <span class="hljs-string">'东引乡'</span>,      <span class="hljs-number">712899</span>: <span class="hljs-string">'莒光乡'</span>,      <span class="hljs-number">810101</span>: <span class="hljs-string">'中西区'</span>,      <span class="hljs-number">810102</span>: <span class="hljs-string">'湾仔区'</span>,      <span class="hljs-number">810103</span>: <span class="hljs-string">'东区'</span>,      <span class="hljs-number">810104</span>: <span class="hljs-string">'南区'</span>,      <span class="hljs-number">810201</span>: <span class="hljs-string">'九龙城区'</span>,      <span class="hljs-number">810202</span>: <span class="hljs-string">'油尖旺区'</span>,      <span class="hljs-number">810203</span>: <span class="hljs-string">'深水埗区'</span>,      <span class="hljs-number">810204</span>: <span class="hljs-string">'黄大仙区'</span>,      <span class="hljs-number">810205</span>: <span class="hljs-string">'观塘区'</span>,      <span class="hljs-number">810301</span>: <span class="hljs-string">'北区'</span>,      <span class="hljs-number">810302</span>: <span class="hljs-string">'大埔区'</span>,      <span class="hljs-number">810303</span>: <span class="hljs-string">'沙田区'</span>,      <span class="hljs-number">810304</span>: <span class="hljs-string">'西贡区'</span>,      <span class="hljs-number">810305</span>: <span class="hljs-string">'元朗区'</span>,      <span class="hljs-number">810306</span>: <span class="hljs-string">'屯门区'</span>,      <span class="hljs-number">810307</span>: <span class="hljs-string">'荃湾区'</span>,      <span class="hljs-number">810308</span>: <span class="hljs-string">'葵青区'</span>,      <span class="hljs-number">810309</span>: <span class="hljs-string">'离岛区'</span>,      <span class="hljs-number">820101</span>: <span class="hljs-string">'澳门半岛'</span>,      <span class="hljs-number">820201</span>: <span class="hljs-string">'离岛'</span>    &#125;  &#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>浅谈前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浅谈hexo加密问题（密码为guzhz）</title>
    <link href="/2020/10/28/%E6%B5%85%E8%B0%88hexo%E5%8A%A0%E5%AF%86%E9%97%AE%E9%A2%98/"/>
    <url>/2020/10/28/%E6%B5%85%E8%B0%88hexo%E5%8A%A0%E5%AF%86%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h1><ul><li>有时候我们可能需要写一些私密的博客，通过密码验证的方式让人不能随意浏览。</li><li>这在wordpress，emlog或其他博客系统中都很容易实现，然而hexo除外。:(</li><li>为了解决这个问题，我们需要安装“ hexo-blog-encrypt”扩展。</li></ul><h1 id="二、特性"><a href="#二、特性" class="headerlink" title="二、特性"></a>二、特性</h1><ul><li>一旦你输入了正确的密码，它就会被存储在本地浏览器的localStorage中。按个按钮，密码将会被清空。若博客中又脚本，它将被正确地执行。</li><li>支持按标签加密。</li><li>所有的核心功能都是由原生的API所提供的。在Node.js中，我们使用Crypto。在浏览器中，我们使用Web Crypto API。</li><li>PBKDF2，SHA256被用作复制密钥，AES256-CBC被用作加解密，我们还使用HMAC来验证密文的来源，并确保其纠正。</li><li>广泛地使用Promise来进行异步操作，从而确保线程不被杜塞。</li><li>过时的浏览器将无法正常显示，因此，请升级您的浏览器</li></ul><h1 id="三、安装"><a href="#三、安装" class="headerlink" title="三、安装"></a>三、安装</h1><blockquote><p>npm install –save hexo-blog-encrypt</p></blockquote><h1 id="四、简单使用"><a href="#四、简单使用" class="headerlink" title="四、简单使用"></a>四、简单使用</h1><ul><li>将 “password” 字段添加到文章信息头<pre><code class="hljs html">title: Hello Worlddate: 2020-03-30 21:18:02password: guzhz</code></pre></li></ul><h1 id="五、高级使用"><a href="#五、高级使用" class="headerlink" title="五、高级使用"></a>五、高级使用</h1><p><code>加密设置优先级：文章信息头 &gt; 按标签加密</code></p><ul><li><p>文章信息头加密</p><pre><code class="hljs html">title: Hello Worldtags:- 作为日记加密date: 2020-03-30 21:12:21password: guzhz# abstract: 有东西被加密了, 请输入密码查看.# message: 您好, 这里需要密码.# wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.# wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</code></pre></li><li><p>按标签加密</p><pre><code class="hljs html"># 主题目录_config补充以下字段encrypt:   abstract: 这里有东西被加密了，需要输入密码查看哦。  message: 您好, 这里需要密码.  tags:  - &#123;name: tagName, password: 密码A&#125;  - &#123;name: tagName, password: 密码B&#125;  template: <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"hexo-blog-encrypt"</span> <span class="hljs-attr">data-wpm</span>=<span class="hljs-string">"&#123;&#123;hbeWrongPassMessage&#125;&#125;"</span> <span class="hljs-attr">data-whm</span>=<span class="hljs-string">"&#123;&#123;hbeWrongHashMessage&#125;&#125;"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"hbe-input-container"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"password"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"hbePass"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"&#123;&#123;hbeMessage&#125;&#125;"</span> /&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span>&#123;&#123;hbeMessage&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"bottom-line"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"hbeData"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hbeData"</span> <span class="hljs-attr">data-hmacdigest</span>=<span class="hljs-string">"&#123;&#123;hbeHmacDigest&#125;&#125;"</span>&gt;</span><span class="undefined">&#123;&#123;hbeEncryptedData&#125;&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</code></pre></li><li><p>禁用标签加密</p><pre><code class="hljs html">只需要将博文头部的 password 设置为 "" 即可取消 Tag 加密.---title: Callback Testdate: 2019-12-21 11:54:07tags:    - A Tag should be encryptedpassword: ""---</code></pre></li></ul><h1 id="六、对文章TOC进行加密"><a href="#六、对文章TOC进行加密" class="headerlink" title="六、对文章TOC进行加密"></a>六、对文章TOC进行加密</h1><p>如果你有文章使用了 TOC，你需要修改模板的部分代码。</p><ul><li>你可以在 hexo/themes/landscape/layout/_partial/article.ejs 找到 article.ejs。</li><li>然后找到 &lt;% post.content %&gt; 这段代码，通常在30行左右。</li><li>使用如下的代码来替代它:</li></ul><pre><code class="hljs html">&lt;% if(post.toc == true)&#123; %&gt;  &lt;div id="toc-div" class="toc-article" &lt;% if (post.encrypt == true) &#123; %&gt;style="display:none" &lt;% &#125; %&gt;&gt;    &lt;strong class="toc-title"&gt;Index&lt;/strong&gt;      &lt;% if (post.encrypt == true) &#123; %&gt;        &lt;%- toc(post.origin, &#123;list_number: true&#125;) %&gt;      &lt;% &#125; else &#123; %&gt;        &lt;%- toc(post.content, &#123;list_number: true&#125;) %&gt;      &lt;% &#125; %&gt;  &lt;/div&gt;&lt;% &#125; %&gt;&lt;%- post.content %&gt;</code></pre><ul><li>如何你熟悉熟悉hexo的编写规范</li><li>那么你可以直接找到&lt;%- partial(‘_partial/toc’) %&gt;</li><li>用这段来替代它<pre><code class="hljs html"># 对使用了加密文章的toc的div加隐藏属性# 解密/没有加密，则不隐藏&lt;% if(post.toc == true)&#123; %&gt;    &lt;div id="toc-div" class="toc-article" &lt;% if (post.encrypt == true) &#123; %&gt;style="display:none" &lt;% &#125;%&gt;&gt;        &lt;%- partial('_partial/toc') %&gt;    &lt;/div&gt;&lt;% &#125; %&gt;</code></pre></li></ul>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微信小程序基础</title>
    <link href="/2020/09/10/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9F%BA%E7%A1%80/"/>
    <url>/2020/09/10/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9F%BA%E7%A1%80/</url>
    
    <content type="html"><![CDATA[<h1 id="一、配置小程序"><a href="#一、配置小程序" class="headerlink" title="一、配置小程序"></a>一、配置小程序</h1><h2 id="1、全局配置：app-json"><a href="#1、全局配置：app-json" class="headerlink" title="1、全局配置：app.json"></a>1、全局配置：app.json</h2><pre><code class="hljs json">&#123;  "pages": [//注册页面，默认显示第一个为主页面    "pages/home/home",    "pages/about/about",    "pages/profile/profile",    "pages/category/category"  ],  "window": &#123;//app.json才有的window参数    "navigationBarBackgroundColor": "#ff5777",    "navigationBarTextStyle": "white",    "navigationBarTitleText": "我的小程序",    "backgroundColor": "#eeeeee",    "backgroundTextStyle": "light",    "enablePullDownRefresh": false  &#125;,  "tabBar": &#123;//封装好的tabBar    "selectedColor": "#ff5777",//选中颜色    "list": [      &#123;        "pagePath": "pages/home/home",        "text": "首页",        "iconPath": "assets/tabbar/home.png",        "selectedIconPath": "assets/tabbar/home_active.png"      &#125;,      &#123;        "pagePath": "pages/category/category",        "text": "分类",        "iconPath": "assets/tabbar/category.png",        "selectedIconPath": "assets/tabbar/category_active.png"      &#125;    ]  &#125;,&#125;</code></pre><h2 id="2、页面配置"><a href="#2、页面配置" class="headerlink" title="2、页面配置"></a>2、页面配置</h2><pre><code class="hljs json">&#123;  "usingComponents": &#123;&#125;,  "enablePullDownRefresh": true&#125;当前页面的优先级高过app.json</code></pre><h2 id="3、sitemap-配置"><a href="#3、sitemap-配置" class="headerlink" title="3、sitemap 配置"></a>3、sitemap 配置</h2><p>小程序根目录下的 <code>sitemap.json</code> 文件用来配置小程序及其页面是否允许被微信索引。</p><pre><code class="hljs javascript">&#123;  <span class="hljs-string">"rules"</span>:[&#123;    <span class="hljs-string">"action"</span>: <span class="hljs-string">"allow"</span>,    <span class="hljs-string">"page"</span>: <span class="hljs-string">"*"</span>  &#125;]&#125;<span class="hljs-comment">//或者</span>&#123;  <span class="hljs-string">"rules"</span>:[&#123;    <span class="hljs-string">"action"</span>: <span class="hljs-string">"disallow"</span>,    <span class="hljs-string">"page"</span>: <span class="hljs-string">"path/to/page"</span>  &#125;]&#125;</code></pre><h1 id="二、逻辑层"><a href="#二、逻辑层" class="headerlink" title="二、逻辑层"></a>二、逻辑层</h1><h2 id="1、注册小程序app"><a href="#1、注册小程序app" class="headerlink" title="1、注册小程序app"></a>1、注册小程序app</h2><pre><code class="hljs javascript"><span class="hljs-comment">// app.js</span>App(&#123;  onLaunch (options) &#123;    <span class="hljs-comment">// Do something initial when launch.</span>  &#125;,  onShow (options) &#123;    <span class="hljs-comment">// Do something when show.</span>  &#125;,  onHide () &#123;    <span class="hljs-comment">// Do something when hide.</span>  &#125;,  onError (msg) &#123;    <span class="hljs-built_in">console</span>.log(msg)  &#125;,  <span class="hljs-attr">globalData</span>: &#123;    <span class="hljs-attr">name</span>: <span class="hljs-string">'Guzhz'</span>,    <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>  &#125;&#125;)整个小程序只有一个 App 实例，是全部页面共享的。开发者可以通过 getApp 方法获取到全局唯一的 App 实例，获取App上的数据或调用开发者注册在 App 上的函数。<span class="hljs-comment">//其他页面的js</span><span class="hljs-keyword">const</span> app = getApp()  <span class="hljs-comment">//拿到全局app</span><span class="hljs-built_in">console</span>.log(app.globalData.name);</code></pre><h2 id="2、注册页面page"><a href="#2、注册页面page" class="headerlink" title="2、注册页面page"></a>2、注册页面page</h2><pre><code class="hljs javascript">Page(&#123;  <span class="hljs-attr">onLoad</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">options</span>) </span>&#123;    <span class="hljs-comment">// 页面创建时执行</span>  &#125;,  <span class="hljs-attr">onShow</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-comment">// 页面出现在前台时执行</span>  &#125;,  <span class="hljs-attr">onReady</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-comment">// 页面首次渲染完毕时执行</span>  &#125;,  <span class="hljs-attr">onHide</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-comment">// 页面从前台变为后台时执行</span>  &#125;,  <span class="hljs-attr">onUnload</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-comment">// 页面销毁时执行</span>  &#125;,  <span class="hljs-attr">onPullDownRefresh</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-comment">// 触发下拉刷新时执行</span>  &#125;,  <span class="hljs-attr">onReachBottom</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-comment">// 页面触底时执行</span>  &#125;&#125;)</code></pre><h2 id="3、获取用户信息"><a href="#3、获取用户信息" class="headerlink" title="3、获取用户信息"></a>3、获取用户信息</h2><pre><code class="hljs javascript">//获取：&lt;button size="mini" open-type="getUserInfo" bindgetuserinfo="handGetUserInfo"&gt;  获取授权&lt;/button&gt;handGetUserInfo(event) &#123;    console.log(event)&#125;//展示：&lt;open-data type="userNickName" bindtap="nameClick"&gt;&lt;/open-data&gt;</code></pre><h2 id="4、回调函数中的this指向"><a href="#4、回调函数中的this指向" class="headerlink" title="4、回调函数中的this指向"></a>4、回调函数中的this指向</h2><pre><code class="hljs javascript">Page(&#123;  <span class="hljs-attr">data</span>: &#123;    <span class="hljs-attr">list</span>: []  &#125;,  onLoad() &#123;    wx.request(&#123;        <span class="hljs-attr">url</span>: <span class="hljs-string">''</span>,        <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;            <span class="hljs-keyword">const</span> data = res.data.data.list;            <span class="hljs-keyword">this</span>.setData(&#123;                <span class="hljs-keyword">this</span>.list: data;<span class="hljs-comment">//箭头函数的this会不断网上找，箭头函数这里找到的是page</span>            &#125;)        &#125;    &#125;)  &#125;, onLoad() &#123;    <span class="hljs-keyword">const</span> _this = <span class="hljs-keyword">this</span>;<span class="hljs-comment">//独立定义</span>    wx.request(&#123;        <span class="hljs-attr">url</span>: <span class="hljs-string">''</span>,        <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;<span class="hljs-comment">//如果是这种写法则this指向会找不到，则需要独立定义</span>            <span class="hljs-keyword">const</span> data = res.data.data.list;            <span class="hljs-keyword">this</span>.setData(&#123;                _this.list: data;<span class="hljs-comment">//箭头函数的this会不断网上找，箭头函数这里找到的是page</span>            &#125;)        &#125;    &#125;)  &#125;&#125;</code></pre><h1 id="二、组件"><a href="#二、组件" class="headerlink" title="二、组件"></a>二、组件</h1><h2 id="1、Text组件的基本使用-span"><a href="#1、Text组件的基本使用-span" class="headerlink" title="1、Text组件的基本使用(span)"></a>1、Text组件的基本使用(span)</h2><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 1.1、selectable: true //现在可以不加&#123;&#123;&#125;&#125; --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">selectable</span>=<span class="hljs-string">"&#123;&#123;true&#125;&#125;"</span>&gt;</span>Hello World\n<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-comment">&lt;!-- 1.2、只写属性，默认为true，不写为false --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">selectable</span>&gt;</span>你好小程序\n<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span>  <span class="hljs-comment">&lt;!-- 2、space：决定文本空格的大小 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>哈 哈\n<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">space</span>=<span class="hljs-string">"nbsp"</span>&gt;</span>哈 哈\n<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span>  <span class="hljs-comment">&lt;!-- 默认就是nbsp --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">space</span>=<span class="hljs-string">"ensp"</span>&gt;</span>哈 哈\n<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span>  <span class="hljs-comment">&lt;!-- 半个中文字符大小 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">space</span>=<span class="hljs-string">"emsp"</span>&gt;</span>哈 哈\n<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span>  <span class="hljs-comment">&lt;!-- 一个中文字符大小 --&gt;</span><span class="hljs-comment">&lt;!-- 3、decode属性：是否解码文本 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">decode</span>&gt;</span>5 &amp;gt; 3<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span></code></pre><h2 id="2、button组件的基本使用"><a href="#2、button组件的基本使用" class="headerlink" title="2、button组件的基本使用"></a>2、button组件的基本使用</h2><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 1、本身是块级元素，加了size变成行内块元素 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">'mini'</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-comment">&lt;!-- 2、type属性：bootstrap样式 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"mini"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"primary"</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-comment">&lt;!-- 3、plain：镂空效果 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"mini"</span> <span class="hljs-attr">plain</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-comment">&lt;!-- 4、disable：不可用 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"mini"</span> <span class="hljs-attr">disabled</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-comment">&lt;!-- 5、loading：加载效果 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"mini"</span> <span class="hljs-attr">loading</span>=<span class="hljs-string">"&#123;&#123;isLoading&#125;&#125;"</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-comment">&lt;!-- 6、hover-class --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"mini"</span> <span class="hljs-attr">hover-class</span>=<span class="hljs-string">"pressed"</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>.pressed &#123;  background: red;  color: white;&#125;</code></pre><h2 id="3、view组件的基本使用（div）"><a href="#3、view组件的基本使用（div）" class="headerlink" title="3、view组件的基本使用（div）"></a>3、view组件的基本使用（div）</h2><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 1、view的基本使用 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">text</span>&gt;</span>文本<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-comment">&lt;!-- 2、hover-class：用户按下组件时，显示的样式 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"box1"</span> <span class="hljs-attr">hover-class</span>=<span class="hljs-string">"hover-view"</span> <span class="hljs-attr">hover-stay-time</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">hover-start-time</span>=<span class="hljs-string">"1000"</span>&gt;</span>点下去<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-comment">&lt;!-- 3、组织传播：hover-stop-propagation：点里面的容器，外面的容器不反应 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">hover-stop-propagation</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span></code></pre><h2 id="4、image组件的基本使用"><a href="#4、image组件的基本使用" class="headerlink" title="4、image组件的基本使用"></a>4、image组件的基本使用</h2><pre><code class="hljs html"><span class="hljs-comment">&lt;!--   重点：    1、可以写成单标签    2、默认有大小：320px*240px    3、image组件是一个行内块元素（inline-block）--&gt;</span><span class="hljs-comment">&lt;!-- 相对路径 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../../assets/tabbar/cart.png"</span>/&gt;</span><span class="hljs-comment">&lt;!-- 绝对路径 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"/assets/tabbar/cart.png"</span>/&gt;</span><span class="hljs-comment">&lt;!-- 远程地址 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://res.wx.qq.com/wxdoc/dist/assets/img/0.4cb08bb4.jpg"</span>/&gt;</span><span class="hljs-comment">&lt;!-- 补充：相册中的图片 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">bindtap</span>=<span class="hljs-string">"handleChooseAlbum"</span>&gt;</span>选中图片<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"&#123;&#123;imagePath&#125;&#125;"</span>/&gt;</span>     data: &#123;        isLoading: true,        imagePath: ''      &#125;,      handleChooseAlbum() &#123;        //系统api        wx.chooseImage(&#123;          success: (res) =&gt; &#123;            this.setData(&#123;              imagePath: res.tempFilePaths[0]            &#125;)           &#125;        &#125;)      &#125;,<span class="hljs-comment">&lt;!-- bindload: 监听图片加载完成 --&gt;</span><span class="hljs-comment">&lt;!-- 图片懒加载 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">wx:for</span>=<span class="hljs-string">"&#123;&#123;1&#125;&#125;"</span>        <span class="hljs-attr">src</span>=<span class="hljs-string">"https://res.wx.qq.com/wxdoc/dist/assets/img/0.4cb08bb4.jpg"</span>        <span class="hljs-attr">bindload</span>=<span class="hljs-string">"handleImageLoad"</span>        <span class="hljs-attr">lazy-load</span>        /&gt;</span><span class="hljs-comment">&lt;!-- .show-menu-by-longpress:长按图片出现识别小程序码 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">image</span> <span class="hljs-attr">show-menu-by-longpress</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://res.wx.qq.com/wxdoc/dist/assets/img/0.4cb08bb4.jpg"</span>/&gt;</span></code></pre><h2 id="5、input组件的基本使用"><a href="#5、input组件的基本使用" class="headerlink" title="5、input组件的基本使用"></a>5、input组件的基本使用</h2><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 1.input的基本使用 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> /&gt;</span><span class="hljs-comment">&lt;!-- 2.value：input中的默认值 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"哈哈哈"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span><span class="hljs-comment">&lt;!-- 3.文本输入键盘 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"number "</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span><span class="hljs-comment">&lt;!-- 4.password类型 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">password</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span><span class="hljs-comment">&lt;!-- 5.提示内容 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"提示内容"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span><span class="hljs-comment">&lt;!-- 6.confire-type --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">confirm-type</span>=<span class="hljs-string">"search"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span><span class="hljs-comment">&lt;!-- 7.input绑定事件 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">bindinput</span>=<span class="hljs-string">"handleInput"</span> <span class="hljs-attr">bindfocus</span>=<span class="hljs-string">"handleFocus"</span> <span class="hljs-attr">bindblur</span>=<span class="hljs-string">"handleBlur"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">input</span>&gt;</span>  handleInput(event) &#123;    console.log("用户输入内容：",event);  &#125;,  handleFocus(event) &#123;    console.log("input获取焦点：",event);  &#125;,  handleBlur(event) &#123;    console.log("input失去焦点：",event);  &#125;</code></pre><h2 id="6、scroll-view组件的基本使用"><a href="#6、scroll-view组件的基本使用" class="headerlink" title="6、scroll-view组件的基本使用"></a>6、scroll-view组件的基本使用</h2><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 1.水平滚动：scroll-x --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">scroll-view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"container1"</span> <span class="hljs-attr">scroll-x</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:for</span>=<span class="hljs-string">"&#123;&#123;10&#125;&#125;"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"item1"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">scroll-view</span>&gt;</span><span class="hljs-comment">&lt;!-- 2.垂直滚动：scroll-y --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">scroll-view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"container2"</span> <span class="hljs-attr">scroll-y</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:for</span>=<span class="hljs-string">"&#123;&#123;10&#125;&#125;"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"item2"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">scroll-view</span>&gt;</span><span class="hljs-comment">&lt;!-- 3.其他补充 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">scroll-view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"container2"</span> <span class="hljs-attr">scroll-y</span> <span class="hljs-attr">bindscroll</span>=<span class="hljs-string">"handleScroll"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">wx:for</span>=<span class="hljs-string">"&#123;&#123;10&#125;&#125;"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"item2"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">scroll-view</span>&gt;</span>.container1 &#123;  background: pink;  white-space: nowrap;&#125;.item1 &#123;  width: 100px;  height: 100px;  background: red;  margin: 10px;  display: inline-block;&#125;.container2 &#123;  background: orange;  height: 100px;&#125;.item2 &#123;  width: 100px;  background: blue;  margin: 10px;&#125;</code></pre><h2 id="7、事件对象"><a href="#7、事件对象" class="headerlink" title="7、事件对象"></a>7、事件对象</h2><h3 id="1）常见事件监听"><a href="#1）常见事件监听" class="headerlink" title="1）常见事件监听"></a>1）常见事件监听</h3><ul><li>bindtouchstart：手指触摸开始</li><li>bindtouchmove：手指触摸移动</li><li>bindtouchend：手指触摸结束</li><li>bindtouchcancel：手指触摸取消</li><li>bindtap：起点手势 {两者只会触发一个}</li><li>bindlongpress：手指长按 {两者只会触发一个}</li></ul><h3 id="2）事件参数传递-data"><a href="#2）事件参数传递-data" class="headerlink" title="2）事件参数传递(data-)"></a>2）事件参数传递(data-)</h3><pre><code class="hljs html">for:<span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">data-index</span>=<span class="hljs-string">"&#123;&#123;index&#125;&#125;"</span> <span class="hljs-attr">data-item</span>=<span class="hljs-string">"&#123;&#123;item&#125;&#125;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>取：const dataset = event.currentTarget.dataset;const title = dataset.item;const index dataset.index;</code></pre><h3 id="3）事件捕获和冒泡"><a href="#3）事件捕获和冒泡" class="headerlink" title="3）事件捕获和冒泡"></a>3）事件捕获和冒泡</h3><p>捕获：事件从外到内依次进行捕获（capture-bind:tap）</p><p>冒泡：事件从内到外依次进行冒泡（bindtap）</p><p>阻止：事件一旦被当前标签阻止了，则不再进行捕获或者冒泡（catch-bind:tap、catchtap）</p><h1 id="三、样式"><a href="#三、样式" class="headerlink" title="三、样式"></a>三、样式</h1><h2 id="1、基本使用"><a href="#1、基本使用" class="headerlink" title="1、基本使用"></a>1、基本使用</h2><pre><code class="hljs css">&lt;!-- 1.1、内联样式 --&gt;&lt;view style="color: red"&gt;哈哈哈&lt;/view&gt;&lt;!-- 1.2、页内样式 --&gt;&lt;view class="box"&gt;呵呵呵&lt;/view&gt;&lt;!-- 1.3、全局样式 --&gt;&lt;view class="container"&gt;嘿嘿嘿&lt;/view&gt;&lt;!-- 2、权重：!important &gt; 内联 &gt; 页内 &gt; 全局 &gt; 元素 --&gt;&lt;!-- 3、wxss中的单位：rpx，用于做适配，默认是px的一半，所以要写成2倍--&gt;&lt;view class="box1"&gt;嗯嗯嗯&lt;/view&gt;</code></pre><h2 id="2、导入样式"><a href="#2、导入样式" class="headerlink" title="2、导入样式"></a>2、导入样式</h2><p>@import ‘路径’</p><h2 id="3、官方样式库"><a href="#3、官方样式库" class="headerlink" title="3、官方样式库"></a>3、官方样式库</h2><p><a href="https://github.com/Tencent/weui-wxss" target="_blank" rel="noopener">https://github.com/Tencent/weui-wxss</a> 的dist文件夹</p><h1 id="四、wxml基本语法"><a href="#四、wxml基本语法" class="headerlink" title="四、wxml基本语法"></a>四、wxml基本语法</h1><h2 id="1、wx-if"><a href="#1、wx-if" class="headerlink" title="1、wx:if"></a>1、wx:if</h2><h2 id="2、wx-if-wx-elif-wx-else"><a href="#2、wx-if-wx-elif-wx-else" class="headerlink" title="2、wx:if wx:elif wx:else"></a>2、wx:if wx:elif wx:else</h2><h2 id="3、hidden隐藏（wx-if不渲染）"><a href="#3、hidden隐藏（wx-if不渲染）" class="headerlink" title="3、hidden隐藏（wx:if不渲染）"></a>3、hidden隐藏（wx:if不渲染）</h2><h2 id="4、wx-for（item，index）"><a href="#4、wx-for（item，index）" class="headerlink" title="4、wx:for（item，index）"></a>4、wx:for（item，index）</h2><ul><li><p>item起别名：wx:for-item=”movie”</p></li><li><p>index起别名：wx:for-index=”i”，多用于多层遍历。</p></li><li>列表渲染，wx:key作为唯一标识，提高性能（diff算法）<ul><li>如果不加key，例如对数组dom进行插入的时候，则会使插入位置的后面的所有dom都进行改变</li><li>如果加了key，则会在对每个dom添加一个id标识，在插入的时候不会影响后面的dom，提高了性能</li></ul></li></ul><h2 id="5、block标签"><a href="#5、block标签" class="headerlink" title="5、block标签"></a>5、block标签</h2><p><block>这个标签不是组件，主要用于包裹元素，不会被渲染成dom</block>，提高性能。可以替代<view></view></p><h2 id="6、template模板（少用）"><a href="#6、template模板（少用）" class="headerlink" title="6、template模板（少用）"></a>6、template模板（少用）</h2><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"名字"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>使用：<span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">is</span>=<span class="hljs-string">"名字"</span>/&gt;</span>-------------------------------<span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"名字"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>&#123;&#123;btnText&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>&#123;&#123;content&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>类似插槽：<span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">is</span>=<span class="hljs-string">"名字"</span> <span class="hljs-attr">data</span>=<span class="hljs-string">"&#123;&#123;btnText: '按钮', content: '哈哈哈'&#125;&#125;"</span>/&gt;</span></code></pre><p>ps：wxml导入/引入，把模板抽离到单独的一个wxml文件里</p><ul><li>import可以导入模板，但不能循环导入</li><li>include不能引入模板，但是可以循环引入wxml文件</li></ul><h1 id="五、wxs模块（类似js，但不是js）"><a href="#五、wxs模块（类似js，但不是js）" class="headerlink" title="五、wxs模块（类似js，但不是js）"></a>五、wxs模块（类似js，但不是js）</h1><h2 id="1、当前页面的写法"><a href="#1、当前页面的写法" class="headerlink" title="1、当前页面的写法"></a>1、当前页面的写法</h2><pre><code class="hljs javascript">&lt;wxs module="info"&gt;  //es5语法  var message = "Hello, world";  var name = "hhh";  var sum = function(num1, num2) &#123;    return num1 + num2;  &#125;  module.exports = &#123;    message: message,    name: name,    sum: sum  &#125;&lt;/wxs&gt;&lt;view&gt;&#123;&#123;info.message&#125;&#125;&lt;/view&gt;&lt;view&gt;&#123;&#123;info.name&#125;&#125;&lt;/view&gt;&lt;view&gt;&#123;&#123;info.sum(10,20)&#125;&#125;&lt;/view&gt;</code></pre><h2 id="2、分离写法"><a href="#2、分离写法" class="headerlink" title="2、分离写法"></a>2、分离写法</h2><pre><code class="hljs javascript">类似js模块化开发//info.wxs文件：    var message = "Hello, world";    var name = "hhh";    var sum = function (num1, num2) &#123;      return num1 + num2;    &#125;    module.exports = &#123;      message: message,      name: name,      sum: sum    &#125;//导入使用&lt;wxs src="./mywxs.wxs" module="info"/&gt;  //只能是相对路径&lt;view&gt;&#123;&#123;info.message&#125;&#125;&lt;/view&gt;&lt;view&gt;&#123;&#123;info.name&#125;&#125;&lt;/view&gt;&lt;view&gt;&#123;&#123;info.sum(10,20)&#125;&#125;&lt;/view&gt;</code></pre><h1 id="六、组件化开发"><a href="#六、组件化开发" class="headerlink" title="六、组件化开发"></a>六、组件化开发</h1><h2 id="1、基本使用-1"><a href="#1、基本使用-1" class="headerlink" title="1、基本使用"></a>1、基本使用</h2><pre><code class="hljs html">//my-cpn.wxml，定义<span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"title"</span>&gt;</span>&#123;&#123;title&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">view</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"content"</span>&gt;</span>我是自定义组件的内容<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>//home.json注册&#123;  "usingComponents": &#123;    "mycpn": "/components/my-cpn/my-cpn"  &#125;&#125;//home.wxml使用<span class="hljs-tag">&lt;<span class="hljs-name">mycpn</span>/&gt;</span>//可以在app.json里面进行全局注册。但是不建议都放在app.json里面</code></pre><h2 id="2、样式问题"><a href="#2、样式问题" class="headerlink" title="2、样式问题"></a>2、样式问题</h2><ul><li><p>组件里面的样式和页面的样式互不影响，默认存在隔离。</p></li><li><p>组件里面不推荐使用id选择器，只用class选择器。</p></li><li><p>特殊需求：需要它们相互影响</p><pre><code class="hljs css">组件的<span class="hljs-selector-class">.js</span>文件<span class="hljs-selector-tag">Component</span>(&#123;    <span class="hljs-attribute">options</span>: &#123;        styleIsolation: <span class="hljs-string">"isolated"</span>      //默认是隔离的        styleIsolation: <span class="hljs-string">"apply-shared"</span>  //应用组件被分享，也就是页面影响了组件        styleIsolation: <span class="hljs-string">"shared"</span>  //互相影响    &#125;&#125;)</code></pre></li></ul><h2 id="3、组件和页面的通信"><a href="#3、组件和页面的通信" class="headerlink" title="3、组件和页面的通信"></a>3、组件和页面的通信</h2><h3 id="1）页面给组件传递参数"><a href="#1）页面给组件传递参数" class="headerlink" title="1）页面给组件传递参数"></a>1）页面给组件传递参数</h3><pre><code class="hljs js">//组件.js文件Component(&#123;  //定义属性  properties: &#123;    // title: String    title: &#123;      type: String,      value: "我是默认的标题",      observer: function(newValue, oldValue) &#123;  //观察者        console.log(newValue, oldValue);      &#125;    &#125;  &#125;&#125;)//组件&lt;view class="title"&gt;&#123;&#123;title&#125;&#125;&lt;/view&gt;&lt;view class="content"&gt;我是自定义组件的内容&lt;/view&gt;&lt;!-- 使用自定义组件 --&gt;&lt;mycpn title="hhh"/&gt;&lt;mycpn title="xxx"/&gt;&lt;mycpn /&gt;</code></pre><h3 id="2）页面给组件传递样式"><a href="#2）页面给组件传递样式" class="headerlink" title="2）页面给组件传递样式"></a>2）页面给组件传递样式</h3><pre><code class="hljs js">//1.组件js声明一个样式变量Component(&#123;  externalClasses: ['titleclass']&#125;)//2.组件wxml使用该变量&lt;view class="title titleclass"&gt;&#123;&#123;title&#125;&#125;&lt;/view&gt;//3.页面给变量赋值（传递），此时dom里面就有class="red"了&lt;mycpn title="hhh" titleclass="red"/&gt;    //4.在页面的wxss里面添加.red的样式，使其dom被作用了即可.red &#123;  color: red;&#125;</code></pre><h3 id="3）组件给页面传递事件-自定义事件"><a href="#3）组件给页面传递事件-自定义事件" class="headerlink" title="3）组件给页面传递事件 - 自定义事件"></a>3）组件给页面传递事件 - 自定义事件</h3><pre><code class="hljs javascript">//1.组件监听事件&lt;button size="mini" bind:tap="handleIncrement"&gt;+1&lt;/button&gt;//2.监听事件发射事件methods: &#123;     handleIncrement() &#123;    this.triggerEvent("increment",&#123;name: "hhh"&#125;,&#123;&#125;)//事件名，&#123;key:value 额外参数&#125;  &#125;&#125;//3.页面接收，然后绑定自己的方法&lt;my-event bind:increment="handleIncrement"/&gt;    //4.页面实现自己的方法handleIncrement(event) &#123;  console.log(event); //参数在event.detail里面  this.setData(&#123;    counter: this.data.counter+1  &#125;)&#125;,</code></pre><h2 id="4、获得组件对象"><a href="#4、获得组件对象" class="headerlink" title="4、获得组件对象"></a>4、获得组件对象</h2><p>需求：在页面上不通过传参的方式，修改组件的data数据，则需要获取组件对象从而setData()</p><p>方法：<code>this.selectComponent(&quot;#sel_id&quot;) //绑定id或者class</code></p><pre><code class="hljs html">//1.给使用的组件绑定一个id或者class<span class="hljs-tag">&lt;<span class="hljs-name">my-select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"sel_id"</span>/&gt;</span>//组件定义数据data: &#123;  counter: 0&#125;,//2.页面监听事件<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"mini"</span> <span class="hljs-attr">bind:tap</span>=<span class="hljs-string">"handleIncrementCpnData"</span>&gt;</span>修改组件内的数据+1<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code></pre><pre><code class="hljs javascript">handleIncrementCpnData() &#123;    <span class="hljs-comment">//修改my-select的counter</span>    <span class="hljs-comment">//想办法获得组件对象</span>    <span class="hljs-keyword">const</span> my_select = <span class="hljs-keyword">this</span>.selectComponent(<span class="hljs-string">"#sel_id"</span>) <span class="hljs-comment">//绑定id或者class</span>    my_select.setData(&#123;      <span class="hljs-attr">counter</span>: my_select.data.counter + <span class="hljs-number">1</span>    &#125;)&#125;,    <span class="hljs-comment">//------更优雅的方式------</span>让组件暴露出一个方法，页面调用方法来修改，而不是直接修改对象的数据methods: &#123;  incrementCounter(num) &#123;    <span class="hljs-keyword">this</span>.setData(&#123;      <span class="hljs-attr">counter</span>: <span class="hljs-keyword">this</span>.data.counter + num    &#125;)  &#125;&#125;handleIncrementCpnData() &#123;    <span class="hljs-keyword">const</span> my_select = <span class="hljs-keyword">this</span>.selectComponent(<span class="hljs-string">"#sel_id"</span>) <span class="hljs-comment">//绑定id或者class</span>    my_select.incrementCounter(<span class="hljs-number">10</span>)&#125;,</code></pre><h2 id="5、插槽的使用"><a href="#5、插槽的使用" class="headerlink" title="5、插槽的使用"></a>5、插槽的使用</h2><h3 id="1）单插槽"><a href="#1）单插槽" class="headerlink" title="1）单插槽"></a>1）单插槽</h3><pre><code class="hljs html">//1.组件预留插槽<span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>我的插槽的头部<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">slot</span>/&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>我的插槽的尾部<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span> //2.注册使用插槽<span class="hljs-tag">&lt;<span class="hljs-name">my-slot</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>我是插槽的按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">my-slot</span>&gt;</span></code></pre><h3 id="2）多插槽"><a href="#2）多插槽" class="headerlink" title="2）多插槽"></a>2）多插槽</h3><p>注意点：</p><ul><li>具名：组件插槽起名字：name=”名字”，页面使用slot=”名字”</li><li>Component添加options，开启多插槽：multipleSlots: true</li></ul><pre><code class="hljs html">//1.组件预留插槽<span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>我的插槽的头部<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"left"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"center"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">view</span>&gt;</span>我的插槽的尾部<span class="hljs-tag">&lt;/<span class="hljs-name">view</span>&gt;</span> //2.开启多插槽Component(&#123;  options: &#123;    multipleSlots: true  &#125;&#125;)//3.注册使用插槽<span class="hljs-tag">&lt;<span class="hljs-name">my-slot</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"left"</span>&gt;</span>我是左边<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"center"</span>&gt;</span>我是中间<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">text</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"right"</span>&gt;</span>我是右边<span class="hljs-tag">&lt;/<span class="hljs-name">text</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">my-slot</span>&gt;</span></code></pre><h2 id="6、component构造器"><a href="#6、component构造器" class="headerlink" title="6、component构造器"></a>6、component构造器</h2><ul><li><p>properties：可以让使用者给组件传入数据</p></li><li><p>data：定义主键内部的初始化数据</p></li><li><p>methods：定义组件内部函数</p></li><li><p>options：定义组件的配置选项</p></li><li><p>externalClasses：[]，外界给组件传入额外的样式</p></li><li><p>observers：可以监听属性properties/data的改变</p><pre><code class="hljs javascript">observers: &#123;<span class="hljs-attr">counter</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">newValue</span>) </span>&#123; &#125;   <span class="hljs-comment">//没有oldvalue</span>&#125;</code></pre></li><li><p>组件所在页面的生命周期</p><pre><code class="hljs javascript">pageLifetimes: &#123;    show() &#123;        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"监听组件所在页面显示出来时"</span>)    &#125;,    hide() &#123;        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"监听组件所在页面隐藏起来时"</span>)    &#125;,    resize() &#123;        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"监听组件所在页面尺寸的改变"</span>)    &#125;&#125;</code></pre></li><li><p>监听组件本身</p><pre><code class="hljs javascript">lifetimes: &#123;    created() &#123;&#125;,  <span class="hljs-comment">//创建出来</span>    attached() &#123;&#125;, <span class="hljs-comment">//被添加时</span>    ready() &#123;&#125;,    <span class="hljs-comment">//组件被渲染出来时</span>    moved() &#123;&#125;,    <span class="hljs-comment">//组件被移动到另外一个节点时</span>    detached() &#123;&#125; <span class="hljs-comment">//组件被移除</span>&#125;</code></pre></li></ul><h1 id="七、网络请求"><a href="#七、网络请求" class="headerlink" title="七、网络请求"></a>七、网络请求</h1><h2 id="1、基本使用-2"><a href="#1、基本使用-2" class="headerlink" title="1、基本使用"></a>1、基本使用</h2><pre><code class="hljs javascript">onLoad: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">options</span>) </span>&#123;    <span class="hljs-comment">//1.最简单的发送请求</span>     wx.request(&#123;       <span class="hljs-attr">url</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8/recommend'</span>,       <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;         <span class="hljs-built_in">console</span>.log(res)       &#125;     &#125;),    <span class="hljs-comment">//2.get请求，但是携带参数</span>    wx.request(&#123;      <span class="hljs-attr">url</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8/home/data'</span>,      <span class="hljs-attr">data</span>: &#123;        <span class="hljs-attr">type</span>: <span class="hljs-string">'sell'</span>,        <span class="hljs-attr">page</span>: <span class="hljs-number">1</span>      &#125;,      <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;        <span class="hljs-built_in">console</span>.log(res)      &#125;    &#125;)    <span class="hljs-comment">//3.post请求，并且携带参数</span>    wx.request(&#123;      <span class="hljs-attr">url</span>: <span class="hljs-string">'http://httpbin.org/post'</span>,      <span class="hljs-attr">method</span>: <span class="hljs-string">'POST'</span>,      <span class="hljs-attr">data</span>: &#123;        <span class="hljs-attr">name</span>: <span class="hljs-string">'guzhz'</span>,        <span class="hljs-attr">age</span>: <span class="hljs-number">18</span>      &#125;,      <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;        <span class="hljs-built_in">console</span>.log(res)      &#125;,      <span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err</span>) </span>&#123;        <span class="hljs-built_in">console</span>.log(err)      &#125;    &#125;)  &#125;</code></pre><h2 id="2、请求封装（promise）"><a href="#2、请求封装（promise）" class="headerlink" title="2、请求封装（promise）"></a>2、请求封装（promise）</h2><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">request</span>(<span class="hljs-params">options</span>) </span>&#123;  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;    wx.request(&#123;      <span class="hljs-attr">url</span>: options.url,      <span class="hljs-attr">method</span>: options.method || <span class="hljs-string">'GET'</span>,<span class="hljs-comment">//默认是get</span>      data: options.data || &#123;&#125;,      <span class="hljs-attr">success</span>: resolve,   <span class="hljs-comment">//本身就是回调函数</span>      fail: reject    &#125;)  &#125;)&#125;</code></pre><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> request <span class="hljs-keyword">from</span> <span class="hljs-string">'../../service/network.js'</span>onLoad: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">options</span>) </span>&#123;    <span class="hljs-comment">// get_data_origin();</span>    request(&#123;      <span class="hljs-attr">url</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8/recommend'</span>,    &#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;      <span class="hljs-built_in">console</span>.log(res)    &#125;).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;      <span class="hljs-built_in">console</span>.log(err)    &#125;)  &#125;,</code></pre><h1 id="八、界面交互"><a href="#八、界面交互" class="headerlink" title="八、界面交互"></a>八、界面交互</h1><h2 id="1、弹窗（showToast）"><a href="#1、弹窗（showToast）" class="headerlink" title="1、弹窗（showToast）"></a>1、弹窗（showToast）</h2><pre><code class="hljs javascript">handleShowToast() &#123;    wx.showToast(&#123;        <span class="hljs-attr">title</span>: <span class="hljs-string">'我是标题'</span>,        <span class="hljs-attr">duration</span>: <span class="hljs-number">1000</span>,        <span class="hljs-attr">icon</span>: <span class="hljs-string">'loading'</span>,        <span class="hljs-attr">mask</span>: <span class="hljs-literal">true</span>,  <span class="hljs-comment">//防止触摸蒙版，</span>        success: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"展示弹窗成功！"</span>);        &#125;,        <span class="hljs-attr">fail</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"展示弹窗失败！"</span>);        &#125;,        <span class="hljs-attr">complete</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"完成调用！"</span>);        &#125;    &#125;)&#125;,</code></pre><h2 id="2、模态框（showModal）"><a href="#2、模态框（showModal）" class="headerlink" title="2、模态框（showModal）"></a>2、模态框（showModal）</h2><pre><code class="hljs javascript">wx.showModal(&#123;    <span class="hljs-attr">title</span>: <span class="hljs-string">'标题'</span>,    <span class="hljs-attr">content</span>: <span class="hljs-string">'内容'</span>,    <span class="hljs-attr">cancelColor</span>: <span class="hljs-string">'red'</span>,    <span class="hljs-attr">showCancel</span>: <span class="hljs-literal">true</span>,    <span class="hljs-attr">cancelText</span>: <span class="hljs-string">'退出'</span>,    <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'展示成功！'</span>)        <span class="hljs-keyword">if</span>(res.cancel) &#123;            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"点击了取消"</span>)        &#125;        <span class="hljs-keyword">if</span>(res.confirm) &#123;            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"点击了确定"</span>)        &#125;    &#125;&#125;)</code></pre><h2 id="3、加载（showLoading）"><a href="#3、加载（showLoading）" class="headerlink" title="3、加载（showLoading）"></a>3、加载（showLoading）</h2><pre><code class="hljs javascript">wx.showLoading(&#123;    <span class="hljs-attr">title</span>: <span class="hljs-string">'加载ing'</span>,    <span class="hljs-attr">mask</span>: <span class="hljs-literal">true</span>&#125;)<span class="hljs-comment">//需手动取消加载才会消失</span>setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;    wx.hideLoading()&#125;, <span class="hljs-number">2000</span>)</code></pre><h2 id="4、下方活动表单（showActionSheet）"><a href="#4、下方活动表单（showActionSheet）" class="headerlink" title="4、下方活动表单（showActionSheet）"></a>4、下方活动表单（showActionSheet）</h2><pre><code class="hljs javascript">wx.showActionSheet(&#123;    <span class="hljs-attr">itemList</span>: [<span class="hljs-string">'相册'</span>,<span class="hljs-string">'拍照'</span>],    <span class="hljs-attr">itemColor</span>: <span class="hljs-string">'red'</span>,    <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">res</span>) </span>&#123;        <span class="hljs-built_in">console</span>.log(res)  <span class="hljs-comment">//res.tapIndex</span>    &#125;&#125;)</code></pre><h2 id="5、使用分享"><a href="#5、使用分享" class="headerlink" title="5、使用分享"></a>5、使用分享</h2><pre><code class="hljs javascript"><span class="hljs-comment">/**  * 用户点击右上角分享  */</span>onShareAppMessage: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">return</span> &#123;        <span class="hljs-attr">title</span>: <span class="hljs-string">'转发标题'</span>,        <span class="hljs-attr">path</span>: <span class="hljs-string">'/pages/about/about'</span>,        <span class="hljs-attr">imageUrl</span>: <span class="hljs-string">'本地图片/网络图片'</span>,  <span class="hljs-comment">//默认是首页的截图</span>    &#125;&#125;<span class="hljs-comment">//按钮直接分享</span>&lt;button size=<span class="hljs-string">"mini"</span> open-type=<span class="hljs-string">"share"</span>&gt;分享&lt;<span class="hljs-regexp">/button&gt;</span></code></pre><h1 id="九、登录流程"><a href="#九、登录流程" class="headerlink" title="九、登录流程"></a>九、登录流程</h1><ul><li>1.调用wx.login获取code</li><li>2.调用wx.request发送code到我们自己的服务器（返回一个标识token）</li><li>3.将登录态的标识token进行存储，以便下次使用</li><li>4.请求需要登录态接口时，携带token</li></ul><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> TOKEN = <span class="hljs-string">'token'</span>App(&#123;  <span class="hljs-attr">globalData</span>: &#123;    <span class="hljs-attr">token</span>: <span class="hljs-string">''</span>  &#125;,  <span class="hljs-comment">/**   * 当小程序初始化完成时，会触发 onLaunch（全局只触发一次）   */</span>  onLaunch: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-comment">//1.先判断缓存中取出token</span>    <span class="hljs-keyword">const</span> token = wx.getStorageSync(TOKEN)    <span class="hljs-comment">//2.判断是否token是否过期</span>    <span class="hljs-keyword">if</span> (token &amp;&amp; token.length !== <span class="hljs-number">0</span>) &#123;      <span class="hljs-comment">//判断是否过期</span>      <span class="hljs-keyword">this</span>.check_token()    &#125; <span class="hljs-keyword">else</span> &#123;      <span class="hljs-comment">//如果不存在则登录</span>      <span class="hljs-keyword">this</span>.login();    &#125;  &#125;,  check_token(token) &#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"执行了验证操作！"</span>)    wx.request(&#123;      <span class="hljs-attr">url</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8/auth'</span>,      <span class="hljs-attr">header</span>: &#123;        token   <span class="hljs-comment">//接口中用请求头的方式传递token</span>      &#125;,      <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;        <span class="hljs-comment">//正在验证</span>        <span class="hljs-keyword">if</span> (!res.data.errCode) &#123;          <span class="hljs-comment">//当前token有效</span>          <span class="hljs-keyword">this</span>.globalData.token = token  <span class="hljs-comment">//再次存储一遍</span>        &#125; <span class="hljs-keyword">else</span> &#123;          <span class="hljs-comment">//当前token无效：1001：没有传入token，1002：传入错误的token，1003：token过期</span>          <span class="hljs-keyword">this</span>.login();        &#125;      &#125;,      <span class="hljs-attr">fail</span>: <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;        <span class="hljs-built_in">console</span>.log(err)      &#125;    &#125;)  &#125;,  login() &#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"执行了登录操作！"</span>)    wx.login(&#123;      <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;        <span class="hljs-comment">//1.获取code，只有5分钟有效期</span>        <span class="hljs-keyword">const</span> code = res.code;        <span class="hljs-comment">//2.将code发送给我们的服务器</span>        wx.request(&#123;          <span class="hljs-attr">url</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8/login'</span>,          <span class="hljs-attr">method</span>: <span class="hljs-string">'post'</span>,          <span class="hljs-attr">data</span>: &#123;            code  <span class="hljs-comment">//可能还需要appid和appsecret</span>          &#125;,          <span class="hljs-attr">success</span>: <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;            <span class="hljs-comment">//1.取出token</span>            <span class="hljs-keyword">const</span> token = res.data.token            <span class="hljs-comment">//2.保存到全局方便实用</span>            <span class="hljs-keyword">this</span>.globalData.token = token            <span class="hljs-comment">//3.存储在缓存里，用于判断登录态</span>            wx.setStorageSync(<span class="hljs-string">'TOKEN'</span>, token)   <span class="hljs-comment">//同步</span>          &#125;        &#125;)      &#125;    &#125;)  &#125;&#125;)</code></pre><h1 id="十、页面跳转"><a href="#十、页面跳转" class="headerlink" title="十、页面跳转"></a>十、页面跳转</h1><h2 id="1）普通跳转"><a href="#1）普通跳转" class="headerlink" title="1）普通跳转"></a>1）普通跳转</h2><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 1、页面跳转，不支持跳转到导航页 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">url</span>=<span class="hljs-string">'/pages/category/category'</span>&gt;</span>跳转到category<span class="hljs-tag">&lt;/<span class="hljs-name">navigator</span>&gt;</span> //返回：<span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">open-type</span>=<span class="hljs-string">"navigateBack"</span> <span class="hljs-attr">dalta</span>=<span class="hljs-string">"2"</span>&gt;</span>返回层级，默认是1也就是上一级<span class="hljs-tag">&lt;/<span class="hljs-name">navigator</span>&gt;</span><span class="hljs-comment">&lt;!-- 2、重定向页面跳转，会把前一个页面销毁掉，不支持跳转到导航页 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">url</span>=<span class="hljs-string">'/pages/category/category'</span> <span class="hljs-attr">open-type</span>=<span class="hljs-string">"redirect"</span>&gt;</span>重定向<span class="hljs-tag">&lt;/<span class="hljs-name">navigator</span>&gt;</span> <span class="hljs-comment">&lt;!-- 3、switchTab，切换到导航的指定页--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">url</span>=<span class="hljs-string">'/pages/about/about'</span> <span class="hljs-attr">open-type</span>=<span class="hljs-string">"switchTab"</span>&gt;</span>切换到导航的指定页<span class="hljs-tag">&lt;/<span class="hljs-name">navigator</span>&gt;</span><span class="hljs-comment">&lt;!-- 4、reLaunch，不支持跳转到导航页 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">url</span>=<span class="hljs-string">'/pages/category/category'</span> <span class="hljs-attr">open-type</span>=<span class="hljs-string">"reLaunch"</span>&gt;</span>关闭所有页面再跳转<span class="hljs-tag">&lt;/<span class="hljs-name">navigator</span>&gt;</span></code></pre><h2 id="2）传参跳转"><a href="#2）传参跳转" class="headerlink" title="2）传参跳转"></a>2）传参跳转</h2><ul><li>往下一层传参</li></ul><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 页面跳转携带参数 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">navigator</span> <span class="hljs-attr">url</span>=<span class="hljs-string">'/pages/category/category?name=Guzhz&amp;age=15'</span>&gt;</span>跳转到category<span class="hljs-tag">&lt;/<span class="hljs-name">navigator</span>&gt;</span><span class="hljs-comment">&lt;!-- category取出参数，onload的options参数 --&gt;</span>onLoad: function (options) &#123;console.log(options);&#125;</code></pre><ul><li>往上一层传参，没有直接的方法，但是可以通过获得上一层的页面对象来进行操作</li></ul><pre><code class="hljs javascript"><span class="hljs-comment">//需求：从home跳转到category，通过category修改home的数据</span><span class="hljs-comment">//category的js</span>onUnload: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">const</span> pages = getCurrentPages(); <span class="hljs-comment">//获得活跃的页面，得到的是一个数组</span>    <span class="hljs-keyword">const</span> home = pages[pages.length<span class="hljs-number">-2</span>];  <span class="hljs-comment">//下标-2是获得上一个页面，不建议直接写0，因为不知道多少层</span>    home.setData(&#123;        <span class="hljs-attr">message</span>: <span class="hljs-string">'改变了'</span>   &#125;)&#125;,</code></pre><h2 id="3）通过方法跳转，利用同样的api"><a href="#3）通过方法跳转，利用同样的api" class="headerlink" title="3）通过方法跳转，利用同样的api"></a>3）通过方法跳转，利用同样的api</h2><pre><code class="hljs javascript"><span class="hljs-comment">//跳转</span>handlePushDetail() &#123;    wx.navigateTo(&#123;        <span class="hljs-attr">url</span>: <span class="hljs-string">'/pages/detail/detail?title=你好啊'</span>    &#125;)&#125;<span class="hljs-comment">//返回</span>handleBackHome() &#123;    wx.navigateBack(&#123;        <span class="hljs-attr">delta</span>: <span class="hljs-number">1</span> <span class="hljs-comment">//可以不写</span>    &#125;)&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>微信小程序</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE学习（八）：axios使用</title>
    <link href="/2020/08/04/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%85%AB%EF%BC%89%EF%BC%9Aaxios%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/08/04/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%85%AB%EF%BC%89%EF%BC%9Aaxios%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="axios：网络请求"><a href="#axios：网络请求" class="headerlink" title="axios：网络请求"></a>axios：网络请求</h1><h4 id="1、安装：npm-install-axios-–save"><a href="#1、安装：npm-install-axios-–save" class="headerlink" title="1、安装：npm install axios –save"></a>1、安装：npm install axios –save</h4><h4 id="2、基本使用"><a href="#2、基本使用" class="headerlink" title="2、基本使用"></a>2、基本使用</h4><pre><code class="hljs javascript"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">'axios'</span>axios(&#123;<span class="hljs-comment">//没有参数</span>  <span class="hljs-comment">//httpbin.org</span>  url: <span class="hljs-string">'http://152.136.185.210:8000/api/z8/home/multidata'</span>,  <span class="hljs-attr">method</span>: <span class="hljs-string">'get'</span> <span class="hljs-comment">//默认是post</span>&#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span>&#123;  <span class="hljs-built_in">console</span>.log(res)&#125;)axios(&#123;  <span class="hljs-attr">url</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8/home/data'</span>,  <span class="hljs-attr">params</span>: &#123;<span class="hljs-comment">//有参数</span>    type: <span class="hljs-string">'pop'</span>,    <span class="hljs-attr">page</span>: <span class="hljs-number">1</span>  &#125;&#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(res)&#125;)</code></pre><h4 id="3、并发请求（改使用全局配置）"><a href="#3、并发请求（改使用全局配置）" class="headerlink" title="3、并发请求（改使用全局配置）"></a>3、并发请求（改使用全局配置）</h4><pre><code class="hljs JavaScript">axios.defaults.baseURL = <span class="hljs-string">'http://152.136.185.210:8000/api/z8'</span>axios.defaults.timeout = <span class="hljs-number">5000</span><span class="hljs-comment">// 2.axios并发请求</span>axios.all([axios(&#123;<span class="hljs-comment">//axios.all()</span>  url: <span class="hljs-string">'/home/multidata'</span>&#125;), axios(&#123;  <span class="hljs-attr">url</span>: <span class="hljs-string">'/home/data'</span>,  <span class="hljs-attr">params</span>: &#123;    <span class="hljs-attr">type</span>: <span class="hljs-string">'pop'</span>,    <span class="hljs-attr">page</span>: <span class="hljs-number">4</span>  &#125;&#125;)])  <span class="hljs-comment">// .then(results =&gt; &#123;</span>  <span class="hljs-comment">//   console.log(results[0]);</span>  <span class="hljs-comment">//   console.log(results[1]);</span>  <span class="hljs-comment">// &#125;)</span>  <span class="hljs-comment">// 另一种写法</span>  .then(axios.spread(<span class="hljs-function">(<span class="hljs-params">res1, res2</span>) =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(res1);    <span class="hljs-built_in">console</span>.log(res2);  &#125;))</code></pre><h4 id="4、创建独立实例（解决多个全局配置问题）"><a href="#4、创建独立实例（解决多个全局配置问题）" class="headerlink" title="4、创建独立实例（解决多个全局配置问题）"></a>4、创建独立实例（解决多个全局配置问题）</h4><pre><code class="hljs javascript"><span class="hljs-comment">//创建实例并配置全局</span><span class="hljs-keyword">const</span> instance1 = axios.create(&#123;  <span class="hljs-attr">baseURL</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8'</span>,  <span class="hljs-attr">timeout</span>: <span class="hljs-number">5000</span>&#125;)<span class="hljs-comment">//使用实例</span>instance1(&#123;  <span class="hljs-attr">url</span>: <span class="hljs-string">'/home/multidata'</span>&#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(res);&#125;)<span class="hljs-comment">//使用实例</span>instance1(&#123;  <span class="hljs-attr">url</span>: <span class="hljs-string">'/home/data'</span>,  <span class="hljs-attr">params</span>: &#123;    <span class="hljs-attr">type</span>: <span class="hljs-string">'pop'</span>,    <span class="hljs-attr">page</span>: <span class="hljs-number">1</span>  &#125;&#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(res);&#125;)</code></pre><h4 id="5、封装模块"><a href="#5、封装模块" class="headerlink" title="5、封装模块"></a>5、封装模块</h4><p>network -&gt; request.js</p><h5 id="方法一：回调函数方式（config-success-failure）"><a href="#方法一：回调函数方式（config-success-failure）" class="headerlink" title="方法一：回调函数方式（config, success, failure）"></a>方法一：回调函数方式（config, success, failure）</h5><pre><code class="hljs JavaScript"><span class="hljs-comment">//request.js</span><span class="hljs-comment">//导出实例，为了保证拓展性，就不使用default</span><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">'axios'</span><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">request</span>(<span class="hljs-params">config, success, failure</span>) </span>&#123;  <span class="hljs-comment">//1、创建实例</span>  <span class="hljs-keyword">const</span> instance = axios.create(&#123;    <span class="hljs-attr">baseURL</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8'</span>,    <span class="hljs-attr">timeout</span>: <span class="hljs-number">5000</span>  &#125;)    <span class="hljs-comment">//2、真正发送网络请求，config为请求的数据</span>  instance(config)        .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;     success(res)   &#125;)   .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;     failure(err)   &#125;)&#125;<span class="hljs-comment">//使用</span><span class="hljs-keyword">import</span> &#123;request&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">"./network/request"</span>; request(&#123;  <span class="hljs-attr">url</span>: <span class="hljs-string">'/home/multidata'</span>&#125;, res =&gt; &#123;  <span class="hljs-built_in">console</span>.log(res);&#125;, err =&gt; &#123;  <span class="hljs-built_in">console</span>.log(err);&#125;)</code></pre><h5 id="方法二：回调函数方式（config）-gt-baseConfig-function-function"><a href="#方法二：回调函数方式（config）-gt-baseConfig-function-function" class="headerlink" title="方法二：回调函数方式（config） -&gt; (baseConfig, function(),function)"></a>方法二：回调函数方式（config） -&gt; (baseConfig, function(),function)</h5><pre><code class="hljs JavaScript"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">'axios'</span><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">request</span>(<span class="hljs-params">config</span>) </span>&#123;  <span class="hljs-comment">//1、创建实例</span>  <span class="hljs-keyword">const</span> instance = axios.create(&#123;    <span class="hljs-attr">baseURL</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8'</span>,    <span class="hljs-attr">timeout</span>: <span class="hljs-number">5000</span>  &#125;)  <span class="hljs-comment">//2、真正发送网络请求，config为请求的数据</span>  instance(config.baseConfig)    .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;      config.success(res)    &#125;)    .catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;      config.failure(err)    &#125;)&#125;<span class="hljs-comment">//使用</span><span class="hljs-keyword">import</span> &#123;request&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">"./network/request"</span>;request(&#123;  <span class="hljs-attr">baseConfig</span>: &#123;    <span class="hljs-attr">url</span>: <span class="hljs-string">'/home/multidata'</span>  &#125;,  <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">res</span>) </span>&#123;    <span class="hljs-built_in">console</span>.log(res);  &#125;,  <span class="hljs-attr">failure</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;    <span class="hljs-built_in">console</span>.log(err);  &#125;&#125;)</code></pre><h5 id="方法三：使用Promise方式"><a href="#方法三：使用Promise方式" class="headerlink" title="方法三：使用Promise方式"></a>方法三：使用Promise方式</h5><pre><code class="hljs JavaScript"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">'axios'</span><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">request</span>(<span class="hljs-params">config</span>) </span>&#123;  <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;    <span class="hljs-keyword">const</span> instance = axios.create(&#123;      <span class="hljs-attr">baseURL</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8'</span>,      <span class="hljs-attr">timeout</span>: <span class="hljs-number">5000</span>    &#125;)    instance(config)      .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;        resolve(res)      &#125;).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;        reject(err)    &#125;)  &#125;)&#125;<span class="hljs-comment">//使用</span><span class="hljs-keyword">import</span> &#123;request&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">"./network/request"</span>;request(&#123;  <span class="hljs-attr">url</span>: <span class="hljs-string">'/home/multidata'</span>&#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(res);&#125;).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(err);&#125;)</code></pre><h5 id="方法四：优化Promise方式"><a href="#方法四：优化Promise方式" class="headerlink" title="方法四：优化Promise方式"></a>方法四：优化Promise方式</h5><pre><code class="hljs JavaScript"><span class="hljs-keyword">import</span> axios <span class="hljs-keyword">from</span> <span class="hljs-string">'axios'</span><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">request</span>(<span class="hljs-params">config</span>) </span>&#123;  <span class="hljs-keyword">const</span> instance = axios.create(&#123;    <span class="hljs-attr">baseURL</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8'</span>,    <span class="hljs-attr">timeout</span>: <span class="hljs-number">5000</span>  &#125;)  <span class="hljs-keyword">return</span> instance(config)<span class="hljs-comment">//因为本身返回的就是Promise</span>&#125;<span class="hljs-comment">//使用</span><span class="hljs-keyword">import</span> &#123;request&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">"./network/request"</span>;request(&#123;  <span class="hljs-attr">url</span>: <span class="hljs-string">'/home/multidata'</span>&#125;).then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(res);&#125;).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(err);&#125;)</code></pre><h4 id="6、拦截器的使用"><a href="#6、拦截器的使用" class="headerlink" title="6、拦截器的使用"></a>6、拦截器的使用</h4><pre><code class="hljs javascript"><span class="hljs-keyword">export</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">request</span>(<span class="hljs-params">config</span>) </span>&#123;  <span class="hljs-keyword">const</span> instance = axios.create(&#123;    <span class="hljs-attr">baseURL</span>: <span class="hljs-string">'http://152.136.185.210:8000/api/z8'</span>,    <span class="hljs-attr">timeout</span>: <span class="hljs-number">5000</span>  &#125;)  <span class="hljs-comment">//axios请求拦截</span>  <span class="hljs-comment">//一般拦截：不符合服务器的要求的信息需要修改、在界面中显示请求图标结束后取消掉、某些请求需要特殊信息token</span>  instance.interceptors.request.use(<span class="hljs-function"><span class="hljs-params">config</span> =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(config);   <span class="hljs-comment">//成功走这里</span>    <span class="hljs-keyword">return</span> config   <span class="hljs-comment">//一定要放行</span>  &#125;, err =&gt; &#123;    <span class="hljs-comment">//失败走这里，一般不会走这里</span>    <span class="hljs-built_in">console</span>.log(err);  &#125;)  <span class="hljs-comment">//响应拦截</span>  instance.interceptors.response.use(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(res);    <span class="hljs-keyword">return</span> res.data   <span class="hljs-comment">//只需要取出data</span>  &#125;, err =&gt; &#123;    <span class="hljs-built_in">console</span>.log(err);  &#125;)  <span class="hljs-keyword">return</span> instance(config)&#125;</code></pre><p align="right"><br>2020年08月4日 下午<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE学习（七）：VueX的使用</title>
    <link href="/2020/08/03/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%83%EF%BC%89%EF%BC%9AVueX%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/08/03/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%83%EF%BC%89%EF%BC%9AVueX%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="VueX：管理组件间的共享资源"><a href="#VueX：管理组件间的共享资源" class="headerlink" title="VueX：管理组件间的共享资源"></a>VueX：管理组件间的共享资源</h1><h4 id="1、安装和使用：npm-install-vuex-3-0-1-–save"><a href="#1、安装和使用：npm-install-vuex-3-0-1-–save" class="headerlink" title="1、安装和使用：npm install vuex@3.0.1 –save"></a>1、安装和使用：npm install <a href="mailto:vuex@3.0.1" target="_blank" rel="noopener">vuex@3.0.1</a> –save</h4><blockquote><p>1、新建store包，放在index.js里</p></blockquote><pre><code class="hljs JavaScript"><span class="hljs-keyword">import</span> Vue <span class="hljs-keyword">from</span> <span class="hljs-string">'vue'</span><span class="hljs-keyword">import</span> Vuex <span class="hljs-keyword">from</span> <span class="hljs-string">'vuex'</span><span class="hljs-comment">//安装插件</span>Vue.use(Vuex)<span class="hljs-comment">//创建对象</span><span class="hljs-keyword">const</span> store = <span class="hljs-keyword">new</span> Vuex.Store(&#123;  <span class="hljs-attr">state</span>: &#123;    <span class="hljs-attr">counter</span>: <span class="hljs-number">1000</span>  &#125;,  <span class="hljs-attr">mutations</span>: &#123;  <span class="hljs-comment">//记录处理记录</span>  &#125;,  <span class="hljs-attr">actions</span>: &#123;   <span class="hljs-comment">//异步处理，对接后端</span>  &#125;,  <span class="hljs-attr">getters</span>:&#123;      &#125;,  <span class="hljs-attr">modules</span>: &#123;  &#125;&#125;)<span class="hljs-comment">//导出</span><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> store</code></pre><blockquote><p>2、main.js，通过vue使用vuex插件</p></blockquote><pre><code class="hljs JavaScript"><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">'./store'</span><span class="hljs-comment">//导入对应的包即可</span>Vue.prototype.$store = store</code></pre><blockquote><p>3、使用共享数据（不建议直接修改）</p></blockquote><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;$store.state.counter&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></code></pre><blockquote><p>4、安装devtools浏览器插件（谷歌商店）进行调试</p></blockquote><pre><code class="hljs html">//定义处理方法（这个方法经过vuex插件 mutations: &#123;  //记录处理记录    increment(state) &#123;      state.counter++    &#125;,    decrement(state) &#123;      state.counter--    &#125; &#125;,//通过提交的方式，字符串参数为方法名  methods: &#123;    add() &#123;      this.$store.commit('increment')    &#125;,    minus() &#123;      this.$store.commit('decrement')    &#125;  &#125;</code></pre><h4 id="2、state：管理状态"><a href="#2、state：管理状态" class="headerlink" title="2、state：管理状态"></a>2、state：管理状态</h4><blockquote><p>单一状态树，即vuex本身不建议创建多个，只需要一个即可，方便管理</p></blockquote><h4 id="3、getters：计算属性-函数参数：state、-getters"><a href="#3、getters：计算属性-函数参数：state、-getters" class="headerlink" title="3、getters：计算属性 | 函数参数：state、(getters)"></a>3、getters：计算属性 | 函数参数：state、(getters)</h4><blockquote><p>可以理解为计算属性，对数据的复杂处理，然后按照属性的方式进行调用</p></blockquote><pre><code class="hljs JavaScript">getters:&#123;  powerCounter(state) &#123;    <span class="hljs-keyword">return</span> state.counter * state.counter  &#125;&#125;,</code></pre><p>妙用：需要对已有的方法进行进一步处理，可以再写个方法传getters进去，然后调用指定的方法进行处理</p><pre><code class="hljs javascript">more20stu(state) &#123;  <span class="hljs-keyword">return</span> state.students.filter(<span class="hljs-function"><span class="hljs-params">s</span> =&gt;</span> s.age&gt;<span class="hljs-number">20</span>)&#125;,more20stuLength(state, getters) &#123;<span class="hljs-comment">//只接受state和getters，两个参数</span>  <span class="hljs-keyword">return</span> getters.more20stu.length;&#125;</code></pre><p>需求：调动getters的方法时，需要指定参数</p><p>思想：因为getters不接受自定义参数，则可以通过嵌套函数，由函数处理传进来的参数，然后return回去</p><pre><code class="hljs JavaScript">&lt;h2&gt;超过指定年龄的学生：&#123;&#123;$store.getters.moreAgeStu(17)&#125;&#125;&lt;/h2&gt;//17就传到function里面了moreAgeStu(state) &#123;  return function (age) &#123;    return state.students.filter(s =&gt; s.age &gt; age);  &#125;&#125;</code></pre><h4 id="4、mutations：-函数参数：state、-调用：commit"><a href="#4、mutations：-函数参数：state、-调用：commit" class="headerlink" title="4、mutations：| 函数参数：state、%| 调用：commit"></a>4、mutations：| 函数参数：state、%| 调用：commit</h4><blockquote><p>1、修改state参数时使用</p><p>2、传递参数</p></blockquote><pre><code class="hljs JavaScript"><span class="hljs-comment">//App.vue</span>addStudent() &#123;  <span class="hljs-keyword">const</span> stu = &#123;<span class="hljs-attr">id</span>: <span class="hljs-number">5</span>, <span class="hljs-attr">name</span>: <span class="hljs-string">'eee'</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">111</span>&#125;  <span class="hljs-keyword">this</span>.$store.commit(<span class="hljs-string">'addStudent'</span>,stu)&#125;addStudent(state, stu) &#123;  state.students.push(stu)&#125;</code></pre><blockquote><p>3、提交风格（传对象）</p></blockquote><pre><code class="hljs javascript">addCount(count) &#123;  <span class="hljs-comment">//直接传数字</span>  <span class="hljs-comment">// this.$store.commit('incrementCount',count)</span>  <span class="hljs-comment">//传对象</span>  <span class="hljs-keyword">this</span>.$store.commit(&#123;    <span class="hljs-attr">type</span>: <span class="hljs-string">'incrementCount'</span>,    count  &#125;)&#125;,<span class="hljs-comment">//接收的时候也是对象，需要在对象里取出对应的值，注意：传的type会自动查找指定函数</span>incrementCount(state,payload) &#123;  <span class="hljs-built_in">console</span>.log(payload);  state.counter += payload.count;&#125;,</code></pre><blockquote><p>4、响应式系统：需要提前初始化好才会是响应式；如果动态添加属性，则不会响应式（观察者模式）</p></blockquote><pre><code class="hljs javascript">解决：&gt; 添加：响应式：Vue.set(state.info, <span class="hljs-string">'key'</span>, <span class="hljs-string">'value'</span>) <span class="hljs-comment">//对象</span>&gt; 删除：非响应式：<span class="hljs-keyword">delete</span> state.info.age响应式：Vue.delete(state.info, <span class="hljs-string">'age'</span>)</code></pre><blockquote><p>5、类型常量（解决方法名可能写错的问题）</p></blockquote><pre><code class="hljs javascript"><span class="hljs-comment">//新建mutation-types.js，统一常量名然后导出</span><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> INCREMENT = <span class="hljs-string">'increment'</span><span class="hljs-keyword">import</span> &#123;INCREMENT&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">"./store/mutations-types"</span>;<span class="hljs-comment">//Vue.vue使用</span>  add() &#123;    <span class="hljs-keyword">this</span>.$store.commit(INCREMENT)  &#125;,<span class="hljs-comment">//index.js使用</span>  [INCREMENT](state) &#123;  <span class="hljs-comment">//用括号包起来</span>    state.counter++  &#125;,</code></pre><h4 id="5、actions：异步操作-函数参数：context，payload-调用：dispatch"><a href="#5、actions：异步操作-函数参数：context，payload-调用：dispatch" class="headerlink" title="5、actions：异步操作 | 函数参数：context，payload | 调用：dispatch"></a>5、actions：异步操作 | 函数参数：context，payload | 调用：dispatch</h4><p>原理：把异步请求放在actions里，在actions的方法里通过commit请求mutations，vue通过dispatch调用actions的方法</p><pre><code class="hljs javascript"><span class="hljs-comment">//按钮点击修改</span>updateInfo() &#123;     <span class="hljs-keyword">this</span>.$store.dispatch(<span class="hljs-string">'aUpdateInfo'</span>,<span class="hljs-string">'我是payload'</span>)&#125;<span class="hljs-comment">//来到actions</span>actions: &#123;   <span class="hljs-comment">//异步处理，对接后端</span>    <span class="hljs-comment">//上下文，理解为store对象</span>    aUpdateInfo(context,payload) &#123;      setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(payload);      context.commit(<span class="hljs-string">'updateInfo'</span>)    &#125;, <span class="hljs-number">1000</span>)  &#125;&#125;,<span class="hljs-comment">//来到mutations</span>updateInfo(state) &#123;  state.info.name = <span class="hljs-string">'hhh'</span>&#125;</code></pre><p>高操作：点击按钮后，来到actions发送请求，然后放回Promise对象，对象存放回调信息，然后在一开始的按钮函数里then()拿出信息</p><pre><code class="hljs javascript"><span class="hljs-comment">//按钮</span>updateInfo() &#123;  <span class="hljs-comment">//需求：请求完了，要返回一个回调信息 new Promise</span>  <span class="hljs-keyword">this</span>.$store      .dispatch(<span class="hljs-string">'aUpdateInfo'</span>,<span class="hljs-string">'我是携带的信息'</span>)      .then(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'----------------------'</span>)        <span class="hljs-built_in">console</span>.log(res);  &#125;)&#125;<span class="hljs-comment">//回调</span>aUpdateInfo(context,payload) &#123;    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;      setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;        <span class="hljs-built_in">console</span>.log(payload);        context.commit(<span class="hljs-string">'updateInfo'</span>)        resolve(<span class="hljs-string">'回调信息'</span>)      &#125;, <span class="hljs-number">1000</span>)    &#125;)&#125;我的payload我是携带的信息----------------------回调信息</code></pre><h4 id="6、modules：嵌套子模块"><a href="#6、modules：嵌套子模块" class="headerlink" title="6、modules：嵌套子模块"></a>6、modules：嵌套子模块</h4><pre><code class="hljs javascript">modules: &#123;  <span class="hljs-attr">a</span>: moduleA&#125;<span class="hljs-keyword">const</span> moduleA = &#123;  <span class="hljs-attr">state</span>: &#123;    <span class="hljs-attr">name</span>: <span class="hljs-string">'zhangsan'</span>,  &#125;,  <span class="hljs-attr">mutations</span>: &#123;    updateName(state, payload) &#123;<span class="hljs-comment">//使用方法一样： this.$store.commit('updateName','lisi')</span>      state.name = payload    &#125;  &#125;,  <span class="hljs-attr">getters</span>: &#123;<span class="hljs-comment">//使用方法一样：&#123;&#123;$store.getters.fullName&#125;&#125;</span>    fullName(state) &#123;      <span class="hljs-keyword">return</span> state.name + <span class="hljs-string">'1111'</span>    &#125;,    fullName2(state, getters) &#123;      <span class="hljs-keyword">return</span> getters.fullName + <span class="hljs-string">'2222'</span>    &#125;,    fullName3(state, gettters, rootState) &#123;<span class="hljs-comment">//多了一个参数，可以拿到根的state</span>      <span class="hljs-keyword">return</span> gettters.fullName2 + rootState.counter    &#125;  &#125;,  <span class="hljs-attr">actions</span>: &#123;    aUpdateName(context) &#123;  <span class="hljs-comment">//context不再是store对象，而是指本模块，commit也只能是自己的</span>      setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;        context.commit(<span class="hljs-string">'updateName'</span>,<span class="hljs-string">'wangwu'</span>)      &#125;,<span class="hljs-number">1000</span>)    &#125;  &#125;&#125;</code></pre><h4 id="7、文件目录组织"><a href="#7、文件目录组织" class="headerlink" title="7、文件目录组织"></a>7、文件目录组织</h4><h5 id="1、对象的解构"><a href="#1、对象的解构" class="headerlink" title="1、对象的解构"></a>1、对象的解构</h5><pre><code class="hljs html">const obj = &#123;  name: 'hh',  age: 18,  height: 1.88,  address: '洛杉矶'&#125;const &#123;name,height,age&#125; = obj; //不用按顺序，按需取出cosole.log(name)  //直接使用</code></pre><h5 id="2、拆分"><a href="#2、拆分" class="headerlink" title="2、拆分"></a>2、拆分</h5><pre><code class="hljs html">store  |--modules|--moduleA.js  |mutations.js  |mutations-types.js  |getters.js  |actions.js  |index.js</code></pre><p align="right"><br>2020年08月4日 下午<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE学习（六）：Promise的使用</title>
    <link href="/2020/08/01/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9APromise%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/08/01/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%85%AD%EF%BC%89%EF%BC%9APromise%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="Promise的使用"><a href="#Promise的使用" class="headerlink" title="Promise的使用"></a>Promise的使用</h1><h4 id="1-Promise的基本使用"><a href="#1-Promise的基本使用" class="headerlink" title="1. Promise的基本使用"></a>1. Promise的基本使用</h4><pre><code class="hljs javascript">&lt;script&gt;  <span class="hljs-comment">//Promise：优雅的解决嵌套请求问题，使代码看起来更清晰，即链式编程</span>  <span class="hljs-comment">//什么情况下会用到Promise？</span>  <span class="hljs-comment">//有异步操作时，用Promise对这个异步操作进行封装</span>  <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve,reject</span>) =&gt;</span> &#123;    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;      <span class="hljs-comment">//成功的时候执行，然后走then</span>      <span class="hljs-comment">// resolve('hello world')</span>      <span class="hljs-comment">//失败则调用reject</span>      reject(<span class="hljs-string">'error message'</span>)    &#125;, <span class="hljs-number">1000</span>)  &#125;).then(<span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;    <span class="hljs-comment">// 拿到数据，然后处理</span>    <span class="hljs-built_in">console</span>.log(data);    <span class="hljs-built_in">console</span>.log(data);    <span class="hljs-built_in">console</span>.log(data);    <span class="hljs-built_in">console</span>.log(data);    <span class="hljs-built_in">console</span>.log(data);  &#125;).catch(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(err);  &#125;)&lt;<span class="hljs-regexp">/script&gt;</span></code></pre><h4 id="2-Promise的另一种写法"><a href="#2-Promise的另一种写法" class="headerlink" title="2. Promise的另一种写法"></a>2. Promise的另一种写法</h4><pre><code class="hljs javascript">&lt;script&gt;  <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;      <span class="hljs-comment">// resolve('hello resolve')</span>      reject(<span class="hljs-string">'error message'</span>)    &#125;,<span class="hljs-number">1000</span>)  &#125;).then(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(data);  &#125;, err =&gt; &#123;    <span class="hljs-built_in">console</span>.log(err);  &#125;)&lt;<span class="hljs-regexp">/script&gt;</span></code></pre><h4 id="3-Promise的链式调用"><a href="#3-Promise的链式调用" class="headerlink" title="3. Promise的链式调用"></a>3. Promise的链式调用</h4><pre><code class="hljs javascript">&lt;script&gt;  <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;    <span class="hljs-comment">//1</span>    setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;      resolve()    &#125;,<span class="hljs-number">1000</span>)  &#125;).then(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'第一次处理'</span>);    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;      <span class="hljs-comment">//2</span>      setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;        resolve()      &#125;,<span class="hljs-number">1000</span>)    &#125;)  &#125;).then(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'第二次处理'</span>);    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve, reject</span>) =&gt;</span> &#123;      <span class="hljs-comment">//3</span>      setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;        resolve()      &#125;,<span class="hljs-number">1000</span>)    &#125;)  &#125;).then(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">"第三次处理"</span>);  &#125;)&lt;<span class="hljs-regexp">/script&gt;</span></code></pre><h4 id="4-Promise的简洁写法"><a href="#4-Promise的简洁写法" class="headerlink" title="4. Promise的简洁写法"></a>4. Promise的简洁写法</h4><pre><code class="hljs javascript">&lt;script&gt;  //需求：aaa-&gt;自己处理10行  //处理：aaa111-&gt;自己处理10行  //处理：aaa111222 -&gt; 自己处理  new Promise((resolve, reject) =&gt; &#123;    setTimeout(() =&gt; &#123;      resolve('aaa')    &#125;,1000)  &#125;).then(res =&gt; &#123;    //1    console.log(res + '第一次处理');    //2，对结果进行第一次处理    return Promise.resolve(res + '111')  &#125;).then(res =&gt; &#123;    console.log(res + '第二次处理');    return Promise.resolve(res + '222')  &#125;).then(res =&gt; &#123;    console.log(res + "第三次处理");  &#125;).catch(err =&gt; &#123;    console.log(err);  &#125;)&lt;/script&gt;//&gt;return new Promise((resolve, reject) =&gt; &#123;  resolve(res + '111')&#125;)//&gt;return Promise.resolve(res + '111')//reject同理//&gt;return res + '111'//throw 'err message'</code></pre><h4 id="5-Promise的all方法的使用"><a href="#5-Promise的all方法的使用" class="headerlink" title="5. Promise的all方法的使用"></a>5. Promise的all方法的使用</h4><pre><code class="hljs javascript">&lt;script&gt;  //处理多个请求的结果，传入可迭代的容器：数组，数组存放请求  //伪代码  Promise.all([      new Promise((resolve, reject) =&gt; &#123;        $ajax([            url: 'url1',            success: function (data) &#123;              resolve(data)            &#125;        ])      &#125;),    new Promise((resolve, reject) =&gt; &#123;      $ajax([        url: 'url2',          success: function (data) &#123;            resolve(data)        &#125;      ])    &#125;)  ]).then(results =&gt; &#123;  //这里的参数也是数组    console.log(results[0]);    console.log(results[1]);  &#125;)&lt;/script&gt;//模拟使用&lt;script&gt;  //处理多个请求的结果，传入可迭代的容器：数组，数组存放请求  Promise.all([    new Promise((resolve, reject) =&gt; &#123;      setTimeout(() =&gt; &#123;        resolve(&#123;name: 'result1', age: 18&#125;)      &#125;,2000)    &#125;),    new Promise((resolve, reject) =&gt; &#123;      setTimeout(() =&gt; &#123;        resolve("result2")      &#125;,1000)    &#125;)  ]).then(results =&gt; &#123;  //这里的参数也是数组    console.log(results[0].age);    console.log(results[1]);  &#125;)&lt;/script&gt;</code></pre><p align="right"><br>2020年08月4日 下午<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE学习（五）：vue-router的使用</title>
    <link href="/2020/07/29/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9Avue-router%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/07/29/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%94%EF%BC%89%EF%BC%9Avue-router%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一、vue-router的使用"><a href="#一、vue-router的使用" class="headerlink" title="一、vue-router的使用"></a>一、vue-router的使用</h1><h4 id="1、使用方法"><a href="#1、使用方法" class="headerlink" title="1、使用方法"></a>1、使用方法</h4><blockquote><p>1、components文件夹新建vue文件；</p><p>2、index.js添加映射路径（导入组件）；</p><p>3、App.vue使用组件</p></blockquote><h4 id="2、改hash路径为history路径"><a href="#2、改hash路径为history路径" class="headerlink" title="2、改hash路径为history路径"></a>2、改hash路径为history路径</h4><blockquote><p>index.js -&gt; Router对象：mode: ‘history’,</p></blockquote><h4 id="3、router-link的使用"><a href="#3、router-link的使用" class="headerlink" title="3、router-link的使用"></a>3、router-link的使用</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我是app组件<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-comment">&lt;!--默认a标签，tag指定标签，replace：replaceState（禁止来回返回）--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">"/home"</span> <span class="hljs-attr">tag</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">replace</span>&gt;</span>首页<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span>     <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">"/about"</span> <span class="hljs-attr">tag</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">replace</span>&gt;</span>关于<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></code></pre><h4 id="4、router-link-active"><a href="#4、router-link-active" class="headerlink" title="4、router-link-active"></a>4、router-link-active</h4><pre><code class="hljs html">//当<span class="hljs-tag">&lt;<span class="hljs-name">router-link</span>&gt;</span>对应的路由匹配成功时，会自动给元素设置一个router-link-active的class，可以对这个类进行样式设置.router-link-active &#123;color: red;&#125;//修改默认的名称：index.js，使用linkActiveClass: 'active'，则会修改陈active.active &#123;color: red;&#125;</code></pre><h4 id="5、绑定方法，使用this-router-push-‘-home’-跳转页面"><a href="#5、绑定方法，使用this-router-push-‘-home’-跳转页面" class="headerlink" title="5、绑定方法，使用this.$router.push(‘/home’)跳转页面"></a>5、绑定方法，使用this.$router.push(‘/home’)跳转页面</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我是app组件<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"clickHome"</span>&gt;</span>首页<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"clickAbout"</span>&gt;</span>关于<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>export default &#123;  name: 'App',  methods: &#123;    clickHome() &#123;      this.$router.replace('/home').catch(err =&gt; &#123;&#125;);  //区别push      console.log('clickHome');    &#125;,    clickAbout() &#123;      this.$router.replace('/about').catch(err =&gt; &#123;&#125;);      console.log('clickAbout');    &#125;  &#125;&#125;</code></pre><h4 id="6、-router、-route、routes的区别"><a href="#6、-router、-route、routes的区别" class="headerlink" title="6、$router、$route、routes的区别"></a>6、$router、$route、routes的区别</h4><blockquote><p>1、$router：代指Router对象，使用：this.$router；</p><p>2、$route：指当前正在活跃(使用)的路由：通过this.$route.params.参数，可以拿到参数</p><p>3、routes：index.js路由管理里面，Router对象里的属性，也是映射管理；</p></blockquote><h4 id="7、动态路由（路由传参）"><a href="#7、动态路由（路由传参）" class="headerlink" title="7、动态路由（路由传参）"></a>7、动态路由（路由传参）</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">v-bind:to</span>=<span class="hljs-string">"'/user/'+uId"</span>&gt;</span>用户<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span>data() &#123;  return &#123;    uId: 'ss'  &#125;&#125;,------User.vue------<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我是用户界面<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我是用户的相关信息，略略略<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;userId&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-comment">&lt;!--展示--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;$route.params.uId&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-comment">&lt;!--直接拿--&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;    <span class="hljs-attr">name</span>: <span class="hljs-string">"user"</span>,    <span class="hljs-attr">computed</span>: &#123;      userId() &#123;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.$route.params.uId<span class="hljs-comment">//获得参数</span>      &#125;    &#125;  &#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="8、路由的懒加载"><a href="#8、路由的懒加载" class="headerlink" title="8、路由的懒加载"></a>8、路由的懒加载</h4><blockquote><p>把不同的路由拆分为多个js文件，不一起打包，用到的时候再加载。</p></blockquote><pre><code class="hljs html">/*懒加载*/const Home = () =&gt; import('../components/Home')const About = () =&gt; import('../components/About')const User = () =&gt; import('../components/User')在index.js里，把之前直接引入的方式，改为声明为一个变量（常量），用到时候再引用，即加载</code></pre><h4 id="9、嵌套子路由"><a href="#9、嵌套子路由" class="headerlink" title="9、嵌套子路由"></a>9、嵌套子路由</h4><blockquote><p>1、新建vue：HomeNews.vue/HomeMessage.vue</p><p>2、配置子路由映射children[{},{}] ，不需要”/“</p><p>3、父vue模板，也加上<router-link><router-view></router-view></router-link></p><p>4、注意：router-link to=”完整路径”</p></blockquote><pre><code class="hljs html">&#123;  path: '/home',  component: Home,  children: [    &#123;      path: 'news',  //不需要加 '/'      component: HomeNews    &#125;,    &#123;      path: 'message',  //不需要加 '/'      component: HomeMessage    &#125;  ]&#125;,<span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我是首页<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我是首页内容，嘻嘻嘻<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">"/home/news"</span>&gt;</span>新闻<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">"/home/message"</span>&gt;</span>消息<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></code></pre><h4 id="10、路由参数传递"><a href="#10、路由参数传递" class="headerlink" title="10、路由参数传递"></a>10、路由参数传递</h4><h5 id="1-方式一：restful风格"><a href="#1-方式一：restful风格" class="headerlink" title="1. 方式一：restful风格"></a>1. 方式一：restful风格</h5><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">v-bind:to</span>=<span class="hljs-string">"'/user/'+uId"</span>&gt;</span>用户<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span>&#123;path: '/user/:uId',component: User&#125;,&#123;&#123;$route.params.uId&#125;&#125;</code></pre><h5 id="2-方式二：query传递"><a href="#2-方式二：query传递" class="headerlink" title="2. 方式二：query传递"></a>2. 方式二：query传递</h5><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">v-bind:to</span>=<span class="hljs-string">"&#123;path: '/profile', query: &#123;name: 'guzhz', age: 18&#125;&#125;"</span>&gt;</span>档案<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span>&#123;&#123;$route.query.name&#125;&#125;&#123;&#123;$route.query.age&#125;&#125;</code></pre><h4 id="11、全局导航守卫"><a href="#11、全局导航守卫" class="headerlink" title="11、全局导航守卫"></a>11、全局导航守卫</h4><h5 id="1-生命周期的方式实现"><a href="#1-生命周期的方式实现" class="headerlink" title="1. 生命周期的方式实现"></a>1. 生命周期的方式实现</h5><pre><code class="hljs javascript">created() &#123;<span class="hljs-built_in">console</span>.log(<span class="hljs-string">'组件被创建的时候回调'</span>);<span class="hljs-built_in">document</span>.title = <span class="hljs-string">'首页'</span>;&#125;,mounted() &#123;<span class="hljs-built_in">console</span>.log(<span class="hljs-string">'dom被挂载的时候回调'</span>);&#125;,updated() &#123;<span class="hljs-built_in">console</span>.log(<span class="hljs-string">'界面刷新则回调'</span>);&#125;</code></pre><h5 id="2-前置钩子：全局导航守卫（cil4里则用to-name即可）"><a href="#2-前置钩子：全局导航守卫（cil4里则用to-name即可）" class="headerlink" title="2. 前置钩子：全局导航守卫（cil4里则用to.name即可）"></a>2. 前置钩子：全局导航守卫（cil4里则用to.name即可）</h5><pre><code class="hljs javascript"><span class="hljs-comment">//router调用beforeEach，参数是一个函数</span><span class="hljs-comment">//matched[0],解决嵌套的时候undefined的问题</span>router.beforeEach(<span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span> ,next</span>) =&gt;</span> &#123;  <span class="hljs-built_in">document</span>.title = to.matched[<span class="hljs-number">0</span>].meta.title;  next(); <span class="hljs-comment">//必须调用，才能下一步</span>&#125;)<span class="hljs-comment">//在各自的route里面添加meta(元数据，描述数据的数据)</span>&#123;  <span class="hljs-attr">path</span>: <span class="hljs-string">'/user/:uId'</span>,  <span class="hljs-attr">component</span>: User,  <span class="hljs-attr">meta</span>: &#123;    <span class="hljs-attr">title</span>: <span class="hljs-string">'用户'</span>  &#125;&#125;,</code></pre><h5 id="3-补充：后置钩子（没有next）"><a href="#3-补充：后置钩子（没有next）" class="headerlink" title="3. 补充：后置钩子（没有next）"></a>3. 补充：后置钩子（没有next）</h5><pre><code class="hljs javascript">router.afterEach(<span class="hljs-function">(<span class="hljs-params">to,<span class="hljs-keyword">from</span></span>) =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'after'</span>);&#125;)</code></pre><h5 id="4-补充：独享钩子"><a href="#4-补充：独享钩子" class="headerlink" title="4. 补充：独享钩子"></a>4. 补充：独享钩子</h5><pre><code class="hljs javascript"><span class="hljs-comment">//对指定的route配置</span>beforeEnter: <span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'beforeEnter'</span>);  next();&#125;,</code></pre><h5 id="5-补充：组件补充"><a href="#5-补充：组件补充" class="headerlink" title="5. 补充：组件补充"></a>5. 补充：组件补充</h5><h4 id="12、keep-alive的使用：提供组件缓存"><a href="#12、keep-alive的使用：提供组件缓存" class="headerlink" title="12、keep-alive的使用：提供组件缓存"></a>12、keep-alive的使用：提供组件缓存</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span>//有缓存activated()和deactivated()才能使用</code></pre><h5 id="1-嵌套子组件引发问题"><a href="#1-嵌套子组件引发问题" class="headerlink" title="1. 嵌套子组件引发问题"></a>1. 嵌套子组件引发问题</h5><blockquote><p>问题：嵌套的子组件由于缺省设定的问题，导致切换回来的时候，子组件永远是缺省的那个</p><p>思路：去掉缺省值，动态添加默认显示的子组件，同时记录路径，使切换回来的时候仍然是切换走的时候那个子组件</p></blockquote><pre><code class="hljs javascript"><span class="hljs-comment">//index.js的Home的route去掉写死的缺省值</span>children: [        <span class="hljs-comment">// &#123;</span>        <span class="hljs-comment">//   path: '',</span>        <span class="hljs-comment">//   redirect: 'news'</span>        <span class="hljs-comment">// &#125;,</span>        &#123;          <span class="hljs-attr">path</span>: <span class="hljs-string">'news'</span>,  <span class="hljs-comment">//不需要加 '/'</span>          component: HomeNews        &#125;,        &#123;          <span class="hljs-attr">path</span>: <span class="hljs-string">'message'</span>,  <span class="hljs-comment">//不需要加 '/'</span>          component: HomeMessage        &#125;      ],<span class="hljs-comment">//Home.vue，data()添加一个路径变量记录路径：path</span>data() &#123;      <span class="hljs-keyword">return</span> &#123;        <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>,        <span class="hljs-attr">path</span>: <span class="hljs-string">'/home/news'</span>      &#125;    &#125;,<span class="hljs-comment">//Home.vue配合activated()活跃时动态创建，beforeRouteLeave()离开时记录path</span>activated() &#123;  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'activated'</span>);  <span class="hljs-keyword">this</span>.$router.push(<span class="hljs-keyword">this</span>.path).catch(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;&#125;);&#125;,deactivated()&#123;    <span class="hljs-comment">//这个方法来不及获取path路径，所以不能使用</span>&#125;beforeRouteLeave(to, <span class="hljs-keyword">from</span>, next) &#123;  <span class="hljs-keyword">this</span>.path = <span class="hljs-keyword">this</span>.$route.path;  next();&#125;</code></pre><h5 id="2-排除个别不需要缓存"><a href="#2-排除个别不需要缓存" class="headerlink" title="2. 排除个别不需要缓存"></a>2. 排除个别不需要缓存</h5><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">keep-alive</span> <span class="hljs-attr">exclude</span>=<span class="hljs-string">"Profile,User"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">keep-alive</span>&gt;</span></code></pre><h1 id="二、vue-router底部栏项目知识点"><a href="#二、vue-router底部栏项目知识点" class="headerlink" title="二、vue-router底部栏项目知识点"></a>二、vue-router底部栏项目知识点</h1><h4 id="1-目录文件管理与逻辑分离"><a href="#1-目录文件管理与逻辑分离" class="headerlink" title="1. 目录文件管理与逻辑分离"></a>1. 目录文件管理与逻辑分离</h4><blockquote><p>1、共同的vue放在components里</p><p>2、主要视图放在views里，然后详细页面再分包</p><p>3、App.vue如果太多代码，还可以继续抽离</p><p>4、大组件继续拆分小组件，用插槽</p><p>5、div(设置属性)包裹插槽，可以避免属性被覆盖</p></blockquote><h4 id="2-获得活跃路径和动态修改样式"><a href="#2-获得活跃路径和动态修改样式" class="headerlink" title="2. 获得活跃路径和动态修改样式"></a>2. 获得活跃路径和动态修改样式</h4><pre><code class="hljs html">//父传子<span class="hljs-tag">&lt;<span class="hljs-name">tab-bar-item</span> <span class="hljs-attr">path</span>=<span class="hljs-string">"/profile"</span> <span class="hljs-attr">activeColor</span>=<span class="hljs-string">"blue"</span>&gt;</span>props: &#123;    path: String,    activeColor: &#123;    type: String,    default: 'deeppink'    &#125;&#125;,computed: &#123;  isActive() &#123;    //获得活跃路径    return this.$route.path.indexOf(this.path) !== -1;  &#125;,  activeStyle() &#123;    return this.isActive ? &#123;color: this.activeColor&#125; : &#123;&#125;  &#125;&#125;,</code></pre><h4 id="3-点击跳转"><a href="#3-点击跳转" class="headerlink" title="3. 点击跳转"></a>3. 点击跳转</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"tab-bar-item"</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"itemClick"</span>&gt;</span>    //父传子，pathmethods: &#123;    itemClick() &#123;    this.$router.push(this.path).catch(err =&gt; &#123;&#125;);    &#125;&#125;</code></pre><h4 id="4-文件路径起别名"><a href="#4-文件路径起别名" class="headerlink" title="4. 文件路径起别名"></a>4. 文件路径起别名</h4><blockquote><p>1、webpack.base.conf.js修改</p><pre><code class="hljs JavaScript">&gt; resolve: &#123;&gt; extensions: [<span class="hljs-string">'.js'</span>, <span class="hljs-string">'.vue'</span>, <span class="hljs-string">'.json'</span>],&gt; alias: &#123;&gt;  <span class="hljs-string">'@'</span>: resolve(<span class="hljs-string">'src'</span>),&gt;  <span class="hljs-string">'assets'</span>: resolve(<span class="hljs-string">'src/assets'</span>),&gt;  <span class="hljs-string">'components'</span>: resolve(<span class="hljs-string">'src/components'</span>),&gt;  <span class="hljs-string">'views'</span>: resolve(<span class="hljs-string">'src/views'</span>),&gt; &#125;&gt; &#125;,&gt;</code></pre></blockquote><blockquote><p>2、使用</p><pre><code class="hljs html">&gt; //如果是import from 的路径则直接使用别名&gt; import TabBar from "components/tabbar/TabBar";&gt; import TabBarItem from "components/tabbar/TabBarItem";&gt; &gt; //src引用，则需要在别名前面加“~”&gt; <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"item-icon"</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"~assets/img/tabbar/category.svg"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">""</span>&gt;</span>&gt;</code></pre></blockquote><p align="right"><br>2020年08月4日 下午<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE学习（四）：脚手架和箭头函数的使用</title>
    <link href="/2020/07/28/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E8%84%9A%E6%89%8B%E6%9E%B6%E5%92%8C%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/07/28/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E8%84%9A%E6%89%8B%E6%9E%B6%E5%92%8C%E7%AE%AD%E5%A4%B4%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="一、脚手架2-3的使用"><a href="#一、脚手架2-3的使用" class="headerlink" title="一、脚手架2/3的使用"></a>一、脚手架2/3的使用</h1><h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1. 安装"></a>1. 安装</h4><p>cil3：npm install @vue/cli -g</p><p>拉取2.x：npm install @vue/cli-init -g</p><h4 id="2-初始化cli2：vue-init-webpack-xxx"><a href="#2-初始化cli2：vue-init-webpack-xxx" class="headerlink" title="2. 初始化cli2：vue init webpack xxx"></a>2. 初始化cli2：vue init webpack xxx</h4><p>runtime-compiler和runtime-only的区别</p><pre><code class="hljs html">runtime-compiler：template -&gt; ast -&gt; render -&gt; vdom -&gt; UI（）runtime-only：render -&gt; vdom -&gt; UI （性能高，代码量少）1、vue文件的template不需要解析了2、因为被vue-template-compiler解析成render函数了</code></pre><h4 id="3-初始化cil3：vue-create-xxx"><a href="#3-初始化cil3：vue-create-xxx" class="headerlink" title="3. 初始化cil3：vue create xxx"></a>3. 初始化cil3：vue create xxx</h4><ul><li><p>可视化界面 &gt; vue ui</p></li><li><p>cil3把许多配置文件隐藏起来了，需要配置则在根目录下创建：</p><ul><li>vue.config.js（固定名字，红色）</li><li>git commit -m “添加文件”（绿色）</li></ul></li></ul><h1 id="二、箭头函数的使用"><a href="#二、箭头函数的使用" class="headerlink" title="二、箭头函数的使用"></a>二、箭头函数的使用</h1><h4 id="1-基本使用"><a href="#1-基本使用" class="headerlink" title="1. 基本使用"></a>1. 基本使用</h4><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> sum = <span class="hljs-function">(<span class="hljs-params">num1, num2</span>) =&gt;</span> &#123;    <span class="hljs-keyword">return</span> num1 + num2;  &#125;<span class="hljs-built_in">console</span>.log(sum(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>));</code></pre><h4 id="2-只有一个参数，括号可以省略"><a href="#2-只有一个参数，括号可以省略" class="headerlink" title="2. 只有一个参数，括号可以省略"></a>2. 只有一个参数，括号可以省略</h4><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> power = <span class="hljs-function"><span class="hljs-params">num</span> =&gt;</span> &#123;  <span class="hljs-keyword">return</span> num * num;&#125;<span class="hljs-built_in">console</span>.log(power(<span class="hljs-number">100</span>));</code></pre><h4 id="3-内容只有一行代码"><a href="#3-内容只有一行代码" class="headerlink" title="3. 内容只有一行代码"></a>3. 内容只有一行代码</h4><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> mul = <span class="hljs-function">(<span class="hljs-params">num1,num2</span>) =&gt;</span> num1 * num2;<span class="hljs-built_in">console</span>.log(mul(<span class="hljs-number">20</span>, <span class="hljs-number">20</span>));</code></pre><h4 id="4-没有参数，没有返回值"><a href="#4-没有参数，没有返回值" class="headerlink" title="4. 没有参数，没有返回值"></a>4. 没有参数，没有返回值</h4><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> print = <span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'hello'</span>);print()</code></pre><h4 id="5-箭头函数的this的使用"><a href="#5-箭头函数的this的使用" class="headerlink" title="5. 箭头函数的this的使用"></a>5. 箭头函数的this的使用</h4><p>问题：箭头函数中的this是如何查找的？</p><p>答案：向外层作用域查找，一层层查找this，知道有this的定义</p><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> obj = &#123;    aaa() &#123;        setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;            setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;                <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>);      <span class="hljs-comment">//window，这种无参格式都是window</span>            &#125;);            setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;                <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>);      <span class="hljs-comment">//上一层是function()，所以this也是window</span>            &#125;);        &#125;);        setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;            setTimeout(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;                <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>);      <span class="hljs-comment">//window</span>            &#125;);            setTimeout(<span class="hljs-function"><span class="hljs-params">()</span> =&gt;</span> &#123;                <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>);      <span class="hljs-comment">//上一层没有，再上一层是aaa，所以this是aaa</span>            &#125;)        &#125;)    &#125;&#125;;</code></pre><p align="right"><br>2020年08月4日 下午<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE学习（三）：webpack详解</title>
    <link href="/2020/07/27/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9Awebpack%E8%AF%A6%E8%A7%A3/"/>
    <url>/2020/07/27/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9Awebpack%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="一、传统的模块化"><a href="#一、传统的模块化" class="headerlink" title="一、传统的模块化"></a>一、传统的模块化</h1><h4 id="1-导入导出"><a href="#1-导入导出" class="headerlink" title="1. 导入导出"></a>1. 导入导出</h4><pre><code class="hljs javascript"><span class="hljs-comment">//commonJS</span>导出：<span class="hljs-built_in">module</span>.exports = &#123;add&#125;导入：<span class="hljs-keyword">const</span> &#123;add&#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">'./mathUtils.js'</span>);<span class="hljs-comment">//es6</span>导出：<span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> name = <span class="hljs-string">'哈哈哈'</span>;导入：<span class="hljs-keyword">import</span> &#123;name&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">'./info'</span>;</code></pre><h4 id="2-打包"><a href="#2-打包" class="headerlink" title="2. 打包"></a>2. 打包</h4><blockquote><p>webpack ./src/main.js ./dist/bundle.js</p></blockquote><h1 id="二、webpack初体验"><a href="#二、webpack初体验" class="headerlink" title="二、webpack初体验"></a>二、webpack初体验</h1><h4 id="1-自定义打包命令：webpack（配置固定路径）"><a href="#1-自定义打包命令：webpack（配置固定路径）" class="headerlink" title="1. 自定义打包命令：webpack（配置固定路径）"></a>1. 自定义打包命令：webpack（配置固定路径）</h4><pre><code class="hljs javascript"><span class="hljs-comment">//npm init 生成 package.json</span><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">'path'</span>);<span class="hljs-comment">// 需要用到node依赖path</span><span class="hljs-built_in">module</span>.exports = &#123;  <span class="hljs-attr">entry</span>: <span class="hljs-string">'./src/main.js'</span>,  <span class="hljs-attr">output</span>: &#123;    <span class="hljs-attr">path</span>: path.resolve(__dirname,<span class="hljs-string">'dist'</span>),   <span class="hljs-comment">//绝对路径</span>    filename: <span class="hljs-string">'bundle.js'</span>  &#125;&#125;</code></pre><h4 id="2、映射路径为局部命令：npm-run-build"><a href="#2、映射路径为局部命令：npm-run-build" class="headerlink" title="2、映射路径为局部命令：npm run build"></a>2、映射路径为局部命令：npm run build</h4><pre><code class="hljs javascript"><span class="hljs-number">1.</span> 由于实际开发中大多数是用到局部webpack版本，则需要使用局部webpack<span class="hljs-number">2.</span> 使用局部命令    (<span class="hljs-number">1</span>)修改package.json里的scripts，添加自定义命令      <span class="hljs-string">"scripts"</span>: &#123;        <span class="hljs-string">"build"</span>: <span class="hljs-string">"webpack"</span>      &#125;,</code></pre><h4 id="3、配置开发环境-npm-install-webpack-3-6-0-–save-dev"><a href="#3、配置开发环境-npm-install-webpack-3-6-0-–save-dev" class="headerlink" title="3、配置开发环境 npm install webpack@3.6.0 –save-dev"></a>3、配置开发环境 npm install <a href="mailto:webpack@3.6.0" target="_blank" rel="noopener">webpack@3.6.0</a> –save-dev</h4><blockquote><p>安装开发环境的webpack，局部命令则优先去node_modules里面找webpack包</p></blockquote><h1 id="三、webpack的各种加载器"><a href="#三、webpack的各种加载器" class="headerlink" title="三、webpack的各种加载器"></a>三、webpack的各种加载器</h1><blockquote><p>webpack官网：<a href="https://www.webpackjs.com/loaders" target="_blank" rel="noopener">https://www.webpackjs.com/loaders</a></p></blockquote><h4 id="1-依赖css"><a href="#1-依赖css" class="headerlink" title="1. 依赖css"></a>1. 依赖css</h4><ol><li>main.js依赖：require(‘./css/normal.css’);</li><li>npm install <a href="mailto:css-loader@2.0.2" target="_blank" rel="noopener">css-loader@2.0.2</a> –save-dev</li><li>npm install style-loader –save-dev    //同时需要样式加载器</li><li>修改webpack.config.js</li></ol><pre><code class="hljs javascript"><span class="hljs-built_in">module</span>: &#123;    <span class="hljs-attr">rules</span>: [      &#123;        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.css$/</span>,        <span class="hljs-comment">// 使用多个loader，是从右向左读，先css在style</span>        use: [<span class="hljs-string">'style-loader'</span>,<span class="hljs-string">'css-loader'</span>]      &#125;    ]  &#125;</code></pre><h4 id="2-依赖less"><a href="#2-依赖less" class="headerlink" title="2. 依赖less"></a>2. 依赖less</h4><ol><li>npm install –save-dev <a href="mailto:less-loader@4.1.0" target="_blank" rel="noopener">less-loader@4.1.0</a> less</li></ol><pre><code class="hljs javascript"><span class="hljs-number">2.</span> &#123;            <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.less$/</span>,            <span class="hljs-attr">use</span>: [&#123;                <span class="hljs-attr">loader</span>: <span class="hljs-string">"style-loader"</span> <span class="hljs-comment">// creates style nodes from JS strings</span>            &#125;, &#123;                <span class="hljs-attr">loader</span>: <span class="hljs-string">"css-loader"</span> <span class="hljs-comment">// translates CSS into CommonJS</span>            &#125;, &#123;                <span class="hljs-attr">loader</span>: <span class="hljs-string">"less-loader"</span> <span class="hljs-comment">// compiles Less to CSS</span>            &#125;]    &#125;</code></pre><h4 id="3-1-依赖图片"><a href="#3-1-依赖图片" class="headerlink" title="3.1 依赖图片"></a>3.1 依赖图片</h4><ol><li>npm install –save-dev <a href="mailto:url-loader@1.1.2" target="_blank" rel="noopener">url-loader@1.1.2</a></li></ol><pre><code class="hljs javascript"><span class="hljs-number">2.</span> rules: [       &#123;         <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(png|jpg|gif)$/</span>,         <span class="hljs-attr">use</span>: [           &#123;             <span class="hljs-attr">loader</span>: <span class="hljs-string">'url-loader'</span>,             <span class="hljs-attr">options</span>: &#123;               <span class="hljs-comment">//图片大小，小于limit时，会转化成base64形式并直接使用</span>               limit: <span class="hljs-number">8192</span>             &#125;           &#125;         ]       &#125;     ]</code></pre><h4 id="3-2-依赖图片-gt-依赖文件"><a href="#3-2-依赖图片-gt-依赖文件" class="headerlink" title="3.2 依赖图片 -&gt; 依赖文件"></a>3.2 依赖图片 -&gt; 依赖文件</h4><ol><li>如果大于limit，需要用到file-loader但不需要配置</li><li><p>npm install <a href="mailto:file-loader@3.0.1" target="_blank" rel="noopener">file-loader@3.0.1</a> –save-dev</p><p>问题一：自动生成的图片在dist文件夹里，而写的路径在img里<br>解决：需要配置图片路径，自动拼接dist/才能显示</p></li></ol><pre><code class="hljs javascript"> webpack.config.js：  output: &#123;    <span class="hljs-attr">path</span>: path.resolve(__dirname,<span class="hljs-string">'dist'</span>),   <span class="hljs-comment">//绝对路径</span>    filename: <span class="hljs-string">'bundle.js'</span>,    <span class="hljs-attr">publicPath</span>: <span class="hljs-string">'dist/'</span>  &#125;,<span class="hljs-comment">//后续需要把index.html放到dist中，就不要配置了</span></code></pre><p>问题二：解决文件命名问题</p><pre><code class="hljs javascript">options: &#123;   <span class="hljs-attr">limit</span>: <span class="hljs-number">8192</span>,   <span class="hljs-attr">name</span>: <span class="hljs-string">'img/[name].[hash:8].[ext]'</span>&#125;</code></pre><h4 id="4-ES6转ES5"><a href="#4-ES6转ES5" class="headerlink" title="4. ES6转ES5"></a>4. ES6转ES5</h4><p>npm install –save-dev babel-loader@7 babel-core babel-preset-es2015</p><pre><code class="hljs javascript">    &#123;      <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.js$/</span>,      <span class="hljs-attr">exclude</span>: <span class="hljs-regexp">/(node_modules|bower_components)/</span>,      <span class="hljs-attr">use</span>: &#123;        <span class="hljs-attr">loader</span>: <span class="hljs-string">'babel-loader'</span>,        <span class="hljs-attr">options</span>: &#123;          <span class="hljs-attr">presets</span>: [<span class="hljs-string">'@babel/preset-env'</span>]        &#125;      &#125;    &#125;改：    options: &#123;        <span class="hljs-attr">presets</span>: [<span class="hljs-string">'es2015'</span>]    &#125;</code></pre><h1 id="四、依赖-vue"><a href="#四、依赖-vue" class="headerlink" title="四、依赖.vue"></a>四、依赖.vue</h1><ol><li>npm install vue –save（不加-dev，是因为开发和发布都需要用）</li><li>配置</li></ol><pre><code class="hljs javascript">resolve: &#123;    <span class="hljs-comment">//起别名，指定路径</span>    alias: &#123;      <span class="hljs-string">'vue$'</span>: <span class="hljs-string">'vue/dist/vue.esm.js'</span>  <span class="hljs-comment">//(runtime-compiler 而不使用 runtime-only（不能编译template）)</span>    &#125;&#125;resolve: &#123;    <span class="hljs-comment">//去后缀</span>    extensions: [<span class="hljs-string">'.js'</span>,<span class="hljs-string">'.css'</span>,<span class="hljs-string">'.vue'</span>],</code></pre><h1 id="五、index-js代码抽离"><a href="#五、index-js代码抽离" class="headerlink" title="五、index.js代码抽离"></a>五、index.js代码抽离</h1><h4 id="1-对象化"><a href="#1-对象化" class="headerlink" title="1. 对象化"></a>1. 对象化</h4><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">"app"</span>&gt;<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><span class="hljs-number">2.</span> 写成对象<span class="hljs-keyword">const</span> App = &#123;  <span class="hljs-attr">template</span>: <span class="hljs-string">`  &lt;div&gt;    &lt;h2&gt;&#123;&#123;message&#125;&#125;&lt;/h2&gt;    &lt;button @click="btnClick"&gt;按钮&lt;/button&gt;    &lt;h2&gt;&#123;&#123;name&#125;&#125;&lt;/h2&gt;  &lt;/div&gt;  `</span>,  data() &#123;    <span class="hljs-keyword">return</span> &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'Hello,Webpack'</span>,      <span class="hljs-attr">name</span>: <span class="hljs-string">'哈哈哈'</span>    &#125;  &#125;,  <span class="hljs-attr">methods</span>: &#123;    btnClick() &#123;&#125;  &#125;&#125;;<span class="hljs-number">3.</span> <span class="hljs-keyword">new</span> Vue(&#123;  <span class="hljs-attr">el</span>: <span class="hljs-string">'#app'</span>,  <span class="hljs-comment">//编译后，会直接把div替换掉</span>  template: <span class="hljs-string">'&lt;App/&gt;'</span>,  <span class="hljs-comment">//使用</span>  components: &#123;     <span class="hljs-comment">//注册</span>    App  &#125;&#125;);</code></pre><h4 id="2-文件化"><a href="#2-文件化" class="headerlink" title="2. 文件化"></a>2. 文件化</h4><blockquote><p>新建vue/app.js,把App代码拿过去，用导入导出的方式使用</p></blockquote><h4 id="3-演变成：使用app-vue"><a href="#3-演变成：使用app-vue" class="headerlink" title="3. 演变成：使用app.vue"></a>3. 演变成：使用app.vue</h4><ol><li><p>安装npm install –save-dev vue-loader vue-template-compiler</p></li><li><p>配置webpack.config.js</p></li></ol><pre><code class="hljs javascript">&#123;    <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.vue$/</span>,    <span class="hljs-attr">use</span>: [<span class="hljs-string">'vue-loader'</span>]&#125;<span class="hljs-comment">// webpack.config.js</span><span class="hljs-keyword">const</span> VueLoaderPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">'vue-loader/lib/plugin'</span>)<span class="hljs-built_in">module</span>.exports = &#123;  <span class="hljs-comment">// ...</span>  plugins: [    <span class="hljs-keyword">new</span> VueLoaderPlugin()  ]&#125;</code></pre><h1 id="六、插件的使用"><a href="#六、插件的使用" class="headerlink" title="六、插件的使用"></a>六、插件的使用</h1><h4 id="1-版权插件"><a href="#1-版权插件" class="headerlink" title="1. 版权插件"></a>1. 版权插件</h4><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> webpack = <span class="hljs-built_in">require</span>(<span class="hljs-string">'webpack'</span>);plugins: [    <span class="hljs-keyword">new</span> VueLoaderPlugin(),<span class="hljs-keyword">new</span> webpack.BannerPlugin(<span class="hljs-string">'最终版权归Guzhz所有'</span>)]</code></pre><h4 id="2-打包生成index-html到dist中的插件"><a href="#2-打包生成index-html到dist中的插件" class="headerlink" title="2. 打包生成index.html到dist中的插件"></a>2. 打包生成index.html到dist中的插件</h4><p>安装：npm install html-webpack-plugin –save-dev</p><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> HtmlWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">'html-webpack-plugin'</span>);<span class="hljs-keyword">new</span> HtmlWebpackPlugin(&#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">'index.html'</span> <span class="hljs-comment">//不在需要手动引入script（删除）</span>&#125;)</code></pre><p><code>注意：删除配置的 publicPath: &#39;dist/&#39;</code></p><h4 id="3-丑化插件uglifyjs"><a href="#3-丑化插件uglifyjs" class="headerlink" title="3. 丑化插件uglifyjs"></a>3. 丑化插件uglifyjs</h4><p>安装：npm install <a href="mailto:uglifyjs-webpack-plugin@1.1.1" target="_blank" rel="noopener">uglifyjs-webpack-plugin@1.1.1</a> –save-dev</p><pre><code class="hljs JavaScript"><span class="hljs-keyword">const</span> UglifyjsWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">'uglifyjs-webpack-plugin'</span>);    <span class="hljs-keyword">new</span> UglifyjsWebpackPlugin()</code></pre><h4 id="4-搭建本地服务器（热部署）"><a href="#4-搭建本地服务器（热部署）" class="headerlink" title="4. 搭建本地服务器（热部署）"></a>4. 搭建本地服务器（热部署）</h4><p>安装：<a href="mailto:webpack-dev-server@2.9.1" target="_blank" rel="noopener">webpack-dev-server@2.9.1</a></p><pre><code>devServer: {   contextBase: &apos;./dist&apos;,   inline: true    //实时监听}</code></pre><p><code>把上面注释掉，配置webpack.json命令&quot;dev&quot;: &quot;webpack-dev-server --open&quot;</code></p><p>启动：npm run dev</p><p>部署：npm run build</p><h4 id="5-合并插件：环境的分离"><a href="#5-合并插件：环境的分离" class="headerlink" title="5. 合并插件：环境的分离"></a>5. 合并插件：环境的分离</h4><p>安装：npm install <a href="mailto:webpack-merge@4.1.5" target="_blank" rel="noopener">webpack-merge@4.1.5</a> –save-dev</p><pre><code class="hljs javascript">prod:    <span class="hljs-keyword">const</span> UglifyjsWebpackPlugin = <span class="hljs-built_in">require</span>(<span class="hljs-string">'uglifyjs-webpack-plugin'</span>);    <span class="hljs-keyword">const</span> WebpackMerge = <span class="hljs-built_in">require</span>(<span class="hljs-string">'webpack-merge'</span>);    <span class="hljs-keyword">const</span> baseConfig = <span class="hljs-built_in">require</span>(<span class="hljs-string">'./base.config'</span>);    <span class="hljs-built_in">module</span>.exports = WebpackMerge(baseConfig, &#123;      <span class="hljs-attr">plugins</span>: [        <span class="hljs-keyword">new</span> UglifyjsWebpackPlugin()      ]    &#125;);dev:    <span class="hljs-keyword">const</span> WebpackMerge = <span class="hljs-built_in">require</span>(<span class="hljs-string">'webpack-merge'</span>);    <span class="hljs-keyword">const</span> baseConfig = <span class="hljs-built_in">require</span>(<span class="hljs-string">'./base.config'</span>);    <span class="hljs-built_in">module</span>.exports = WebpackMerge (baseConfig, &#123;      <span class="hljs-attr">devServer</span>: &#123;        <span class="hljs-attr">contextBase</span>: <span class="hljs-string">'./dist'</span>,        <span class="hljs-attr">inline</span>: <span class="hljs-literal">true</span>    <span class="hljs-comment">//实时监听</span>      &#125;    &#125;);</code></pre><p>配置：</p><pre><code class="hljs javascript">package.json  <span class="hljs-string">"scripts"</span>: &#123;    <span class="hljs-string">"test"</span>: <span class="hljs-string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span>,    <span class="hljs-string">"build"</span>: <span class="hljs-string">"webpack --config ./build/prod.config.js"</span>,    <span class="hljs-string">"dev"</span>: <span class="hljs-string">"webpack-dev-server --open --config ./build/dev.config.js"</span>  &#125;,  <span class="hljs-attr">path</span>: path.resolve(__dirname,<span class="hljs-string">'../dist'</span>),   <span class="hljs-comment">//绝对路径</span></code></pre><p align="right"><br>2020年08月4日 中午<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE学习（二）：组件化开发</title>
    <link href="/2020/07/26/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/"/>
    <url>/2020/07/26/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E7%BB%84%E4%BB%B6%E5%8C%96%E5%BC%80%E5%8F%91/</url>
    
    <content type="html"><![CDATA[<h1 id="一、组件使用"><a href="#一、组件使用" class="headerlink" title="一、组件使用"></a>一、组件使用</h1><h4 id="1-1、组件化的基本使用（Vue-extend）"><a href="#1-1、组件化的基本使用（Vue-extend）" class="headerlink" title="1.1、组件化的基本使用（Vue.extend）"></a>1.1、组件化的基本使用（Vue.extend）</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  //使用  <span class="hljs-tag">&lt;<span class="hljs-name">my-cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">my-cpn</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">my-cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">my-cpn</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">my-cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">my-cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-comment">//创建组件构造器对象</span>  <span class="hljs-keyword">const</span> cpnC = Vue.extend(&#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">`      &lt;div&gt;        &lt;h2&gt;我是标题&lt;/h2&gt;        &lt;p&gt;我的内容&lt;/p&gt;        &lt;p&gt;我的内容，嘻嘻嘻&lt;/p&gt;      &lt;/div&gt;`</span>  &#125;);  <span class="hljs-comment">//注册为全局组件</span>  Vue.component(<span class="hljs-string">'my-cpn'</span>, cpnC)  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>底层实现原理就是通过，Vue.extend实现的</code></pre><h4 id="1-2、全局组件和局部组件"><a href="#1-2、全局组件和局部组件" class="headerlink" title="1.2、全局组件和局部组件"></a>1.2、全局组件和局部组件</h4><pre><code class="hljs javascript">&lt;script&gt;  <span class="hljs-comment">//在外部则为全局组件，多个vue对象都可用</span>  <span class="hljs-keyword">const</span> cpnC = Vue.extend(&#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">`      &lt;div&gt;        &lt;h2&gt;我是标题&lt;/h2&gt;        &lt;p&gt;哈哈哈哈&lt;/p&gt;      &lt;/div&gt;    `</span>  &#125;);  <span class="hljs-comment">//全局注册</span>  <span class="hljs-comment">// Vue.component('cpn',cpnC);</span>  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>    &#125;,    <span class="hljs-comment">//局部注册</span>    components: &#123;      <span class="hljs-attr">cpn</span>: cpnC    &#125;  &#125;);    <span class="hljs-comment">//多个Vue对象可以使用全局组件</span>  <span class="hljs-keyword">const</span> app2 = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">'#app2'</span>  &#125;)&lt;<span class="hljs-regexp">/script&gt;</span></code></pre><h4 id="1-3、父组件和子组件"><a href="#1-3、父组件和子组件" class="headerlink" title="1.3、父组件和子组件"></a>1.3、父组件和子组件</h4><pre><code class="hljs javascript">&lt;script&gt;  <span class="hljs-keyword">const</span> cpnC1 = Vue.extend(&#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">`      &lt;div&gt;        &lt;h2&gt;子组件&lt;/h2&gt;        &lt;h2&gt;哈哈哈&lt;/h2&gt;      &lt;/div&gt;    `</span>  &#125;);  <span class="hljs-keyword">const</span> cpnC2 = Vue.extend(&#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">`      &lt;div&gt;        &lt;h2&gt;父组件&lt;/h2&gt;        &lt;h2&gt;哈哈哈&lt;/h2&gt;        &lt;cpn1&gt;&lt;/cpn1&gt;      &lt;/div&gt;    `</span>,    <span class="hljs-attr">components</span>: &#123;      <span class="hljs-comment">//C2注册C1</span>      cpn1: cpnC1    &#125;  &#125;);  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>    &#125;,    <span class="hljs-attr">components</span>: &#123;      <span class="hljs-comment">//root组件使用C2(同时使用了C1)</span>      cpn2: cpnC2,      <span class="hljs-comment">//root组件也使用C1，则也要注册</span>      cpn1: cpnC1    &#125;  &#125;)&lt;<span class="hljs-regexp">/script&gt;</span></code></pre><h4 id="1-4、组件的语法糖注册方式（Vue-component）"><a href="#1-4、组件的语法糖注册方式（Vue-component）" class="headerlink" title="1.4、组件的语法糖注册方式（Vue.component）"></a>1.4、组件的语法糖注册方式（Vue.component）</h4><pre><code class="hljs javascript"><span class="hljs-comment">//开发中也是用这种方式，但底层还是使用Vue.extend</span>&lt;script&gt;  <span class="hljs-comment">//全局创建并注册，名字叫cpn1</span>  Vue.component(<span class="hljs-string">'cpn1'</span>,&#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">`      &lt;div&gt;        &lt;h2&gt;语法糖写法&lt;/h2&gt;        &lt;h2&gt;哈哈哈&lt;/h2&gt;      &lt;/div&gt;    `</span>  &#125;);  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>    &#125;,    <span class="hljs-comment">//局部创建并注册，名字叫cpn2</span>    components: &#123;      <span class="hljs-string">'cpn2'</span>: &#123;        <span class="hljs-attr">template</span>: <span class="hljs-string">`          &lt;div&gt;            &lt;h2&gt;局部组件语法糖写法&lt;/h2&gt;            &lt;h2&gt;哈哈哈&lt;/h2&gt;          &lt;/div&gt;        `</span>      &#125;    &#125;  &#125;)&lt;<span class="hljs-regexp">/script&gt;</span></code></pre><h4 id="1-5、组件模板的分离写法（开发中使用）"><a href="#1-5、组件模板的分离写法（开发中使用）" class="headerlink" title="1.5、组件模板的分离写法（开发中使用）"></a>1.5、组件模板的分离写法（开发中使用）</h4><pre><code class="hljs html">1、分离创建<span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/x-template"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span><span class="xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我是标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>html分离写法<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>2、template标签创建<span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>       <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我是标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>template标签分离写法<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-comment">//创建并注册为全局</span>  Vue.component(<span class="hljs-string">'cpn'</span>,&#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">'#cpn'</span>  &#125;);  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="1-6、组件中的数据存放问题"><a href="#1-6、组件中的数据存放问题" class="headerlink" title="1.6、组件中的数据存放问题"></a>1.6、组件中的数据存放问题</h4><pre><code class="hljs html">//函数、返回值为对象（存放属性）<span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  Vue.component(<span class="hljs-string">'cpn'</span>,&#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">'#cpn'</span>,    data() &#123;        <span class="hljs-keyword">return</span> &#123;        <span class="hljs-attr">title</span>: <span class="hljs-string">'我是大标题ccc'</span>      &#125;    &#125;  &#125;);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="1-7、组件中的data为什么是函数"><a href="#1-7、组件中的data为什么是函数" class="headerlink" title="1.7、组件中的data为什么是函数"></a>1.7、组件中的data为什么是函数</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-comment">&lt;!--创建三个实例对象，互不影响--&gt;</span>  <span class="hljs-comment">&lt;!--所以设计data为函数。就是为了互不干扰--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>当前计数：&#123;&#123;counter&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"increment"</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"decrement"</span>&gt;</span>-<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  Vue.component(<span class="hljs-string">'cpn'</span>,&#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">'#cpn'</span>,    data() &#123;      <span class="hljs-keyword">return</span> &#123;        <span class="hljs-comment">//每次都new一个对象</span>        counter: <span class="hljs-number">0</span>      &#125;    &#125;,    <span class="hljs-attr">methods</span>: &#123;      increment() &#123;        <span class="hljs-keyword">this</span>.counter++;      &#125;,      decrement() &#123;        <span class="hljs-keyword">this</span>.counter--;      &#125;    &#125;  &#125;);  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h1 id="二、组件通信"><a href="#二、组件通信" class="headerlink" title="二、组件通信"></a>二、组件通信</h1><h4 id="2-1、父组件向子组件传递参数（props）"><a href="#2-1、父组件向子组件传递参数（props）" class="headerlink" title="2.1、父组件向子组件传递参数（props）"></a>2.1、父组件向子组件传递参数（props）</h4><pre><code class="hljs html">//在引用cpn时传递参数并起名字，子组件用的props接收，然后就在template里使用<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span> <span class="hljs-attr">:cmovies</span>=<span class="hljs-string">"movies"</span> <span class="hljs-attr">:cmessage</span>=<span class="hljs-string">"message"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123;cmovies&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;cmessage&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-comment">//父传子 props</span>  <span class="hljs-keyword">const</span> cpn = &#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">'#cpn'</span>,    <span class="hljs-comment">// props: ['cmovies','cmessage'],          //1 数组类型</span>    props: &#123;      <span class="hljs-comment">// cmovies: Array,  /*限定为数组*/         //2 限定类型</span>      <span class="hljs-comment">// cmessage: String</span>      cmovies: &#123;        <span class="hljs-comment">//3 限定类型同时设置默认值</span>        type: <span class="hljs-built_in">Array</span>,        <span class="hljs-keyword">default</span>() &#123;  <span class="hljs-comment">//高级版本必须以函数的形式返回</span>          <span class="hljs-keyword">return</span> []        &#125;      &#125;,      <span class="hljs-attr">cmessage</span>: &#123;                                        <span class="hljs-attr">type</span>: <span class="hljs-built_in">String</span>,        <span class="hljs-attr">default</span>: <span class="hljs-string">'aaaaaaaaaaa'</span>,        <span class="hljs-attr">required</span>: <span class="hljs-literal">true</span>  <span class="hljs-comment">//必须传值</span>      &#125;    &#125;  &#125;  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊1'</span>,      <span class="hljs-attr">movies</span>: [<span class="hljs-string">'aaa'</span>,<span class="hljs-string">'bbb'</span>,<span class="hljs-string">'ccc'</span>]<span class="hljs-comment">//定义数据</span>    &#125;,    <span class="hljs-attr">components</span>: &#123;      <span class="hljs-attr">cpn</span>: cpn    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="2-2、父传子（props中的驼峰标识）"><a href="#2-2、父传子（props中的驼峰标识）" class="headerlink" title="2.2、父传子（props中的驼峰标识）"></a>2.2、父传子（props中的驼峰标识）</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-comment">&lt;!--html不能识别驼峰，需要把cInfo - 改为c-info--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span> <span class="hljs-attr">:c-info</span>=<span class="hljs-string">"info"</span> <span class="hljs-attr">:child-my-message</span>=<span class="hljs-string">"message"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-comment">&lt;!--有多个参数需要显示，必须用东西包起来--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;cInfo&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;childMyMessage&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>props: &#123;cInfo: &#123;type: Object,default() &#123;return &#123;&#125;&#125;&#125;,    childMyMessage: &#123;   type: String,    default: ''    &#125;&#125;</code></pre><h4 id="2-3、子传父（自定义事件-emit）"><a href="#2-3、子传父（自定义事件-emit）" class="headerlink" title="2.3、子传父（自定义事件$emit）"></a>2.3、子传父（自定义事件$emit）</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-comment">&lt;!--不写参数默认传item过去--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span> @<span class="hljs-attr">item-click</span>=<span class="hljs-string">"cpnClick"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span> //使用方法名绑定自己的方法<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-comment">&lt;!--有多个参数需要显示，必须用东西包起来--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-comment">&lt;!--通过自定义事件，把参数传下去--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in categorys"</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"btnClick(item)"</span>&gt;</span>      &#123;&#123;item.name&#125;&#125;    <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">const</span> cpn = &#123;    <span class="hljs-attr">template</span>: <span class="hljs-string">'#cpn'</span>,    data() &#123;      <span class="hljs-keyword">return</span> &#123;        <span class="hljs-attr">categorys</span>: [          &#123;<span class="hljs-attr">id</span>: <span class="hljs-string">'aaa'</span>,<span class="hljs-attr">name</span>: <span class="hljs-string">'热门推荐'</span>&#125;,          &#123;<span class="hljs-attr">id</span>: <span class="hljs-string">'bbb'</span>,<span class="hljs-attr">name</span>: <span class="hljs-string">'手机数码'</span>&#125;,          &#123;<span class="hljs-attr">id</span>: <span class="hljs-string">'ccc'</span>,<span class="hljs-attr">name</span>: <span class="hljs-string">'家用家电'</span>&#125;,          &#123;<span class="hljs-attr">id</span>: <span class="hljs-string">'ddd'</span>,<span class="hljs-attr">name</span>: <span class="hljs-string">'电脑办公'</span>&#125;        ]      &#125;    &#125;,    <span class="hljs-attr">methods</span>: &#123;      <span class="hljs-comment">//在这里把具体参数传给父组件</span>      btnClick(item) &#123;        <span class="hljs-comment">//(方法名，参数)</span>        <span class="hljs-keyword">this</span>.$emit(<span class="hljs-string">'item-click'</span>,item);      &#125;    &#125;  &#125;  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>    &#125;,    <span class="hljs-attr">components</span>: &#123;      cpn    &#125;,    <span class="hljs-attr">methods</span>: &#123;      <span class="hljs-comment">//取得具体参数</span>      cpnClick(item)&#123;        <span class="hljs-built_in">console</span>.log(item.name);      &#125;    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="2-4、父子组件通信案例"><a href="#2-4、父子组件通信案例" class="headerlink" title="2.4、父子组件通信案例"></a>2.4、父子组件通信案例</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span> <span class="hljs-attr">:number1</span>=<span class="hljs-string">"num1"</span> <span class="hljs-attr">:number2</span>=<span class="hljs-string">"num2"</span> @<span class="hljs-attr">dnumber1tofather</span>=<span class="hljs-string">"num1change"</span> @<span class="hljs-attr">dnumber2tofather</span>=<span class="hljs-string">"num2change"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>父组件-传给props：&#123;&#123;number1&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-comment">&lt;!--    &lt;input type="text" v-model="dnumber1"&gt;--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>子组件-props赋值给data:&#123;&#123;dnumber1&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">"dnumber1"</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">"num1Input"</span>&gt;</span>  <span class="hljs-comment">&lt;!--拆分,通过方法发送$emit()--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>父组件-传给props：&#123;&#123;number2&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-comment">&lt;!--    &lt;input type="text" v-model="dnumber2"&gt;--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>子组件-props赋值给data:&#123;&#123;dnumber2&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">"dnumber2"</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">"num2Input"</span>&gt;</span>  <span class="hljs-comment">&lt;!--拆分,通过方法发送$emit()--&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">num1</span>: <span class="hljs-number">1</span>,      <span class="hljs-attr">num2</span>: <span class="hljs-number">0</span>    &#125;,    <span class="hljs-attr">methods</span>: &#123;      num1change(value) &#123;        <span class="hljs-keyword">this</span>.num1 = <span class="hljs-built_in">parseFloat</span>(value);      &#125;,      num2change(value) &#123;        <span class="hljs-keyword">this</span>.num2 = <span class="hljs-built_in">parseFloat</span>(value);      &#125;    &#125;,    <span class="hljs-attr">components</span>: &#123;      <span class="hljs-attr">cpn</span>: &#123;        <span class="hljs-attr">template</span>: <span class="hljs-string">'#cpn'</span>,        <span class="hljs-comment">//不能直接绑定到props里，会报错，需要绑定到data里</span>        props: &#123;          <span class="hljs-attr">number1</span>: <span class="hljs-built_in">Number</span>,          <span class="hljs-attr">number2</span>: <span class="hljs-built_in">Number</span>        &#125;,        data() &#123;          <span class="hljs-keyword">return</span> &#123;            <span class="hljs-attr">dnumber1</span>: <span class="hljs-keyword">this</span>.number1,            <span class="hljs-attr">dnumber2</span>: <span class="hljs-keyword">this</span>.number2          &#125;        &#125;,        <span class="hljs-attr">methods</span>: &#123;          num1Input(event) &#123;            <span class="hljs-keyword">this</span>.dnumber1 = event.target.value;            <span class="hljs-keyword">this</span>.$emit(<span class="hljs-string">'dnumber1tofather'</span>,<span class="hljs-keyword">this</span>.dnumber1);            <span class="hljs-keyword">this</span>.dnumber2 = <span class="hljs-keyword">this</span>.dnumber1*<span class="hljs-number">100</span>;  <span class="hljs-comment">//num1 * 100 -&gt; num2  ，控制num2</span>            <span class="hljs-keyword">this</span>.$emit(<span class="hljs-string">'dnumber2tofather'</span>,<span class="hljs-keyword">this</span>.dnumber2);          &#125;,          num2Input(event) &#123;            <span class="hljs-keyword">this</span>.dnumber2 = event.target.value;            <span class="hljs-keyword">this</span>.$emit(<span class="hljs-string">'dnumber2tofather'</span>,<span class="hljs-keyword">this</span>.dnumber2);            <span class="hljs-keyword">this</span>.dnumber1 = <span class="hljs-keyword">this</span>.dnumber2/<span class="hljs-number">100</span>;  <span class="hljs-comment">//num1 * 100 -&gt; num2  ，控制num2</span>            <span class="hljs-keyword">this</span>.$emit(<span class="hljs-string">'dnumber1tofather'</span>,<span class="hljs-keyword">this</span>.dnumber1);          &#125;        &#125;      &#125;    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>需求：1、父传子2、子双向绑定3、子同步父4、通过子参数1修改子参数2，子参数参数1是子参数2的100倍，子参数2是子参数1的1/100，同时子同步父总结：1、父传子，子取得的参数不能直接绑定到子的props中，会报错，需要绑定到子的data中。2、拆分v-model为v-bind和v-on，并通过@input="num1Input"实时监听输入的数据，绑定方法，通过$emit修改父3、父接受，修改父参数。4、父参数修改时要注意类型不同的问题，需要把string转化为int</code></pre><h4 id="2-5、父子组件通信案例watch的使用"><a href="#2-5、父子组件通信案例watch的使用" class="headerlink" title="2.5、父子组件通信案例watch的使用"></a>2.5、父子组件通信案例watch的使用</h4><pre><code class="hljs html">//不拆分，直接双向绑定<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"dnumber1"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"dnumber2"</span>&gt;</span>//使用watch自己监听变量是否改变：有两个参数（newVaule，oldValue）watch: &#123;    //配合v-model，实时绑定，监听变量是否发生改变    dnumber1(newValue) &#123;        this.dnumber2 = this.dnumber1*100;        //一旦改变，就可以监听到dnumber2        this.$emit('dnumber1tofather',newValue);  //改变自身的props    &#125;,    dnumber2(newValue) &#123;        this.dnumber1 = this.dnumber2/100;       //num1 * 100 -&gt; num2  ，控制num2        this.$emit('dnumber2tofather',newValue);    &#125;&#125;</code></pre><h4 id="2-6、父访问子（-children和-refs）"><a href="#2-6、父访问子（-children和-refs）" class="headerlink" title="2.6、父访问子（$children和$refs）"></a>2.6、父访问子（$children和$refs）</h4><pre><code class="hljs html">//需求：多个子组件，点击按钮获得子组件的参数<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">"aaa"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">"bbb"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">"ccc"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"btnClick"</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是子组件<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>    &#125;,    <span class="hljs-attr">methods</span>: &#123;      btnClick() &#123;        <span class="hljs-comment">//$children 不好，不常用，一旦多个子组件顺序发生变化，则可能获得的组件会错乱</span>        <span class="hljs-comment">// console.log(this.$children);</span>        <span class="hljs-comment">// for (let c of this.$children) &#123;</span>        <span class="hljs-comment">//   console.log(c.name);</span>        <span class="hljs-comment">//   c.showMessage();</span>        <span class="hljs-comment">// &#125;</span>        <span class="hljs-comment">//开发中用$ref，绑定ref属性作为key，可以不受索引的影响 =&gt; 默认是空对象</span>        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.$refs.aaa.name);      &#125;    &#125;,    <span class="hljs-attr">components</span>: &#123;      <span class="hljs-attr">cpn</span>: &#123;        <span class="hljs-attr">template</span>: <span class="hljs-string">'#cpn'</span>,        data() &#123;          <span class="hljs-keyword">return</span> &#123;            <span class="hljs-attr">name</span>: <span class="hljs-string">'我是子组件的name'</span>          &#125;        &#125;,        <span class="hljs-attr">methods</span>: &#123;          showMessage() &#123;            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'showMessage的内容被访问了'</span>);          &#125;        &#125;      &#125;    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="2-7-子访问父（-parent和-root）"><a href="#2-7-子访问父（-parent和-root）" class="headerlink" title="2.7 子访问父（$parent和$root）"></a>2.7 子访问父（$parent和$root）</h4><pre><code class="hljs html">//代码大意：ccpn通过按钮访问cpn的参数，和vue(root)的参数<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    我是cpn组件    <span class="hljs-tag">&lt;<span class="hljs-name">ccpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ccpn</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"ccpn"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我是子子组件<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"btnClick"</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>    &#125;,    <span class="hljs-comment">//cpn------------</span>    components: &#123;      <span class="hljs-attr">cpn</span>: &#123;        <span class="hljs-attr">template</span>: <span class="hljs-string">'#cpn'</span>,        data() &#123;          <span class="hljs-keyword">return</span> &#123;            <span class="hljs-attr">name</span>: <span class="hljs-string">'我的cpn的name'</span>          &#125;        &#125;,        <span class="hljs-comment">//ccpn---------------</span>        components: &#123;          <span class="hljs-attr">ccpn</span>: &#123;            <span class="hljs-attr">template</span>: <span class="hljs-string">'#ccpn'</span>,            <span class="hljs-attr">methods</span>: &#123;              btnClick() &#123;                <span class="hljs-comment">//1、访问父组件</span>                <span class="hljs-comment">// console.log(this.$parent);</span>                <span class="hljs-comment">// console.log(this.$parent.name);</span>                <span class="hljs-comment">//2、直接访问根组件$root</span>                <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.$root);                <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.$root.message);              &#125;            &#125;          &#125;        &#125;      &#125;    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h1 id="三、插槽使用"><a href="#三、插槽使用" class="headerlink" title="三、插槽使用"></a>三、插槽使用</h1><h4 id="3-1、slot-插槽的基本使用"><a href="#3-1、slot-插槽的基本使用" class="headerlink" title="3.1、slot-插槽的基本使用"></a>3.1、slot-插槽的基本使用</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span>//直接替代  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span>  //多个一起替代    <span class="hljs-tag">&lt;<span class="hljs-name">i</span>&gt;</span>嘻嘻嘻<span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>可以多个<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>一起替代<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我是组件<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>我是组件、哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">slot</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span>  <span class="hljs-comment">&lt;!--插槽并有默认值--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></code></pre><h4 id="3-2、slot-具名插槽的使用"><a href="#3-2、slot-具名插槽的使用" class="headerlink" title="3.2、slot-具名插槽的使用"></a>3.2、slot-具名插槽的使用</h4><pre><code class="hljs html">//顾名思义，为了解决多个插槽，如何指定使用某个插槽，的问题<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-comment">&lt;!--不指定名字则把没有名字的都替换掉--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span>    //先插入，再指定名字    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"center"</span>&gt;</span>标题<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-comment">&lt;!--指定使用中间那个--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">"left"</span>&gt;</span>返回<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span> <span class="hljs-comment">&lt;!--指定使用左边那个--&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-comment">&lt;!--name：指定哪一个--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"left"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>左边<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"center"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>中间<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"right"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>右边<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></code></pre><h4 id="3-3、关于插槽，父子参数的编译作用域"><a href="#3-3、关于插槽，父子参数的编译作用域" class="headerlink" title="3.3、关于插槽，父子参数的编译作用域"></a>3.3、关于插槽，父子参数的编译作用域</h4><pre><code class="hljs html">//总结：是谁，就用谁的参数，父不能直接使用子的参数，反之亦然<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-comment">&lt;!--变量是在vue实例里找的，这些cpn当于普通标签--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">"isShow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span>  //可以显示<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>我是标题<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>我是内容，哈哈哈<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-comment">&lt;!--这个变量就在组件里找，这里是false--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">"isShow"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>const app = new Vue(&#123;    el: "#app",    data: &#123;      isShow: true    &#125;,    components: &#123;      cpn: &#123;        template: '#cpn'      &#125;,      data() &#123;        return &#123;          isShow: false        &#125;      &#125;    &#125;&#125;)</code></pre><h4 id="3-4、编译作用域插槽的案例（解决参数传递）"><a href="#3-4、编译作用域插槽的案例（解决参数传递）" class="headerlink" title="3.4、编译作用域插槽的案例（解决参数传递）"></a>3.4、编译作用域插槽的案例（解决参数传递）</h4><pre><code class="hljs html"><span class="hljs-comment">&lt;!--需求：获得子组件的data，另起格式排列，主要是获得data--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span>    <span class="hljs-comment">&lt;!--通过slot传递参数，2.5.x以下必须使用template包裹--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">slot-scope</span>=<span class="hljs-string">"slot"</span>&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;slot.data.join(' - ')&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">cpn</span>&gt;</span>    <span class="hljs-comment">&lt;!--通过slot传递参数，2.5.x以下必须使用template包裹--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">slot-scope</span>=<span class="hljs-string">"slot"</span>&gt;</span>  <span class="hljs-comment">&lt;!--拿到插槽对象--&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>&#123;&#123;slot.data.join(' * ')&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">cpn</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"cpn"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-comment">&lt;!--把数据传上去--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">slot</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">"pLanguages"</span>&gt;</span>  <span class="hljs-comment">&lt;!--起名字为data（随意）--&gt;</span>      <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in pLanguages"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>      <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">slot</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>    &#125;,    <span class="hljs-attr">components</span>: &#123;      <span class="hljs-attr">cpn</span>: &#123;        <span class="hljs-attr">template</span>: <span class="hljs-string">'#cpn'</span>,        data() &#123;          <span class="hljs-keyword">return</span> &#123;            <span class="hljs-attr">pLanguages</span>: [<span class="hljs-string">'C'</span>,<span class="hljs-string">'Javascript'</span>,<span class="hljs-string">'C++'</span>,<span class="hljs-string">'C#'</span>,<span class="hljs-string">'Python'</span>]          &#125;        &#125;      &#125;    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><p align="right"><br>2020年07月26日 晚上<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>VUE学习（一）：基础语法</title>
    <link href="/2020/07/26/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <url>/2020/07/26/VUE%E5%AD%A6%E4%B9%A0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>前言：本笔记为VUE基础语法的使用。<a href="https://www.bilibili.com/video/BV15741177Eh" title="点击查看" target="_blank" rel="noopener">B站视频链接</a></p><hr><h1 id="一、插值的操作"><a href="#一、插值的操作" class="headerlink" title="一、插值的操作"></a>一、插值的操作</h1><h4 id="1-1、Mustache语法"><a href="#1-1、Mustache语法" class="headerlink" title="1.1、Mustache语法"></a>1.1、Mustache语法</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;，嘻嘻嘻！<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;first + " " + end&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;counter * 3&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>直接包裹变量、变量拼接、变量数学运算</code></pre><h4 id="1-2、v-once指令的使用"><a href="#1-2、v-once指令的使用" class="headerlink" title="1.2、v-once指令的使用"></a>1.2、v-once指令的使用</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-once</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span> <span class="hljs-comment">&lt;!--不可以被修改--&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>使用了v-once后，变量被修改，值不影响</code></pre><h4 id="1-3、v-html指令的使用"><a href="#1-3、v-html指令的使用" class="headerlink" title="1.3、v-html指令的使用"></a>1.3、v-html指令的使用</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-html</span>=<span class="hljs-string">"url"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>url: '<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://www.baidu.com"</span>&gt;</span>百度一下<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>'</code></pre><h4 id="1-4、v-text指令的使用"><a href="#1-4、v-text指令的使用" class="headerlink" title="1.4、v-text指令的使用"></a>1.4、v-text指令的使用</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-text</span>=<span class="hljs-string">"message"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>不用Mustache语法包裹</code></pre><h4 id="1-5、v-pre指令的使用"><a href="#1-5、v-pre指令的使用" class="headerlink" title="1.5、v-pre指令的使用"></a>1.5、v-pre指令的使用</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-pre</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span> <span class="hljs-comment">&lt;!--不解析 Previous--&gt;</span>原样输出内容：&#123;&#123;message&#125;&#125; -&gt; &#123;&#123;message&#125;&#125;</code></pre><h4 id="1-6、v-cloak指令的使用"><a href="#1-6、v-cloak指令的使用" class="headerlink" title="1.6、v-cloak指令的使用"></a>1.6、v-cloak指令的使用</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">    <span class="hljs-selector-attr">[v-cloak]</span> &#123;        <span class="hljs-attribute">display</span>: none;    &#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span> <span class="hljs-attr">v-cloak</span>&gt;</span>  <span class="hljs-comment">&lt;!--消除闪烁问题，斗篷--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><h1 id="二、动态绑定属性：v-bind"><a href="#二、动态绑定属性：v-bind" class="headerlink" title="二、动态绑定属性：v-bind"></a>二、动态绑定属性：v-bind</h1><h4 id="2-1、v-bind（-）"><a href="#2-1、v-bind（-）" class="headerlink" title="2.1、v-bind（:）"></a>2.1、v-bind（:）</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">v-bind:href</span>=<span class="hljs-string">"myhref"</span>&gt;</span>bilibili<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>   <span class="hljs-comment">&lt;!--语法糖：只写“:”--&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>data: &#123;message: '你好啊',myhref: 'https://www.bilibili.com/'&#125;VUE托管属性、绑定属性</code></pre><h4 id="2-2、v-bind动态绑定class属性（对象语法）"><a href="#2-2、v-bind动态绑定class属性（对象语法）" class="headerlink" title="2.2、v-bind动态绑定class属性（对象语法）"></a>2.2、v-bind动态绑定class属性（对象语法）</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"title"</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">"&#123;active: isActive, line: isLine&#125;"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"title"</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">"getClasses()"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">v-on:click</span>=<span class="hljs-string">"btnClick"</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>data: &#123; message: '你好啊',     isActive: true,     isLine: true&#125;,methods: &#123;btnClick: function () &#123;this.isActive = !this.isActive;&#125;,getClasses: function () &#123;return &#123;active: this.isActive, line: this.isLine&#125;&#125;&#125;效果：点击按钮，切换active</code></pre><h4 id="2-3、v-bind动态绑定class属性（数组语法）"><a href="#2-3、v-bind动态绑定class属性（数组语法）" class="headerlink" title="2.3、v-bind动态绑定class属性（数组语法）"></a>2.3、v-bind动态绑定class属性（数组语法）</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"title"</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">"['active','line']"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>//这里为字符串  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"title"</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">"[active,line]"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>//这里为数组变量  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"title"</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">"getClasses()"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>//通过方法获得数组变量<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>,      <span class="hljs-attr">active</span>: <span class="hljs-string">'aaa'</span>,      <span class="hljs-attr">line</span>: <span class="hljs-string">'bbb'</span>    &#125;,    <span class="hljs-attr">methods</span>: &#123;      <span class="hljs-attr">getClasses</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">return</span> [<span class="hljs-keyword">this</span>.active,<span class="hljs-keyword">this</span>.line]      &#125;    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="2-4、v-bind动态绑定style属性（对象语法）"><a href="#2-4、v-bind动态绑定style属性（对象语法）" class="headerlink" title="2.4、v-bind动态绑定style属性（对象语法）"></a>2.4、v-bind动态绑定style属性（对象语法）</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">"&#123;fontSize: finalSize + 'px',background: finalColor&#125;"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">"getStyle()"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">"&#123;'font-size': '50px'&#125;"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>,      <span class="hljs-attr">finalSize</span>: <span class="hljs-number">100</span>,      <span class="hljs-attr">finalColor</span>: <span class="hljs-string">'red'</span>    &#125;,    <span class="hljs-attr">methods</span>: &#123;      <span class="hljs-attr">getStyle</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">return</span> &#123;<span class="hljs-attr">fontSize</span>: <span class="hljs-keyword">this</span>.finalSize + <span class="hljs-string">'px'</span>,<span class="hljs-attr">background</span>: <span class="hljs-keyword">this</span>.finalColor&#125;      &#125;    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="2-5、v-bind动态绑定style属性（数组语法）"><a href="#2-5、v-bind动态绑定style属性（数组语法）" class="headerlink" title="2.5、v-bind动态绑定style属性（数组语法）"></a>2.5、v-bind动态绑定style属性（数组语法）</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">"[baseStyle]"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">message</span>: <span class="hljs-string">'你好啊'</span>,      <span class="hljs-attr">baseStyle</span>: &#123;<span class="hljs-attr">background</span>: <span class="hljs-string">'red'</span>&#125;    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>比较少用、这种用法相当于套娃</code></pre><h1 id="三、计算属性：computed（有缓存、效率高）"><a href="#三、计算属性：computed（有缓存、效率高）" class="headerlink" title="三、计算属性：computed（有缓存、效率高）"></a>三、计算属性：computed（有缓存、效率高）</h1><h4 id="3-1、计算属性的基本用法"><a href="#3-1、计算属性的基本用法" class="headerlink" title="3.1、计算属性的基本用法"></a>3.1、计算属性的基本用法</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>computed: &#123;//计算属性，注重“属性”，命名方式不用get set，直接用就可以了fullName: function () &#123;return this.firstName + ' ' + this.lastName&#125;&#125;</code></pre><h4 id="3-2、计算属性的复杂操作"><a href="#3-2、计算属性的复杂操作" class="headerlink" title="3.2、计算属性的复杂操作"></a>3.2、计算属性的复杂操作</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>总价格：&#123;&#123;totalPrice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">books</span>: [        &#123;<span class="hljs-attr">id</span>: <span class="hljs-number">110</span>,<span class="hljs-attr">name</span>: <span class="hljs-string">'Unix编程艺术'</span>,<span class="hljs-attr">price</span>: <span class="hljs-number">119</span>&#125;,        &#123;<span class="hljs-attr">id</span>: <span class="hljs-number">111</span>,<span class="hljs-attr">name</span>: <span class="hljs-string">'代码大全'</span>,<span class="hljs-attr">price</span>: <span class="hljs-number">105</span>&#125;,        &#123;<span class="hljs-attr">id</span>: <span class="hljs-number">112</span>,<span class="hljs-attr">name</span>: <span class="hljs-string">'计算机原理'</span>,<span class="hljs-attr">price</span>: <span class="hljs-number">98</span>&#125;,        &#123;<span class="hljs-attr">id</span>: <span class="hljs-number">113</span>,<span class="hljs-attr">name</span>: <span class="hljs-string">'现代操作系统'</span>,<span class="hljs-attr">price</span>: <span class="hljs-number">97</span>&#125;,      ]    &#125;,    <span class="hljs-comment">//有缓存，效率高</span>    computed: &#123;      <span class="hljs-attr">totalPrice</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">let</span> result = <span class="hljs-number">0</span>;        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i&lt;<span class="hljs-keyword">this</span>.books.length; i++)&#123;          result += <span class="hljs-keyword">this</span>.books[i].price;        &#125;        <span class="hljs-keyword">return</span> result;      &#125;    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="3-3、计算属性的setter和getter"><a href="#3-3、计算属性的setter和getter" class="headerlink" title="3.3、计算属性的setter和getter"></a>3.3、计算属性的setter和getter</h4><pre><code class="hljs js">computed: &#123;<span class="hljs-comment">//简写,默认是get</span>fullName: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<span class="hljs-built_in">console</span>.log(<span class="hljs-string">'fullName'</span>);<span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.firstName +<span class="hljs-string">' '</span>+ <span class="hljs-keyword">this</span>.lastName;&#125;&#125;<span class="hljs-comment">// 原理写法，一般我们用不到set，所以省略</span>computed: &#123;<span class="hljs-attr">fullName</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;<span class="hljs-keyword">set</span>() &#123;<span class="hljs-built_in">console</span>.log(<span class="hljs-string">'只要值改变，就会默认调用'</span>)&#125;<span class="hljs-keyword">get</span>() &#123;<span class="hljs-built_in">console</span>.log(<span class="hljs-string">'fullName'</span>);<span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.firstName +<span class="hljs-string">' '</span>+ <span class="hljs-keyword">this</span>.lastName;&#125;&#125;&#125;</code></pre><h1 id="四、事件监听：v-on"><a href="#四、事件监听：v-on" class="headerlink" title="四、事件监听：v-on"></a>四、事件监听：v-on</h1><h4 id="4-1、v-on的基本使用：计数器"><a href="#4-1、v-on的基本使用：计数器" class="headerlink" title="4.1、v-on的基本使用：计数器"></a>4.1、v-on的基本使用：计数器</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>计数器：&#123;&#123;counter&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"increment"</span>&gt;</span>+<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"decrement"</span>&gt;</span>-<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../js/vue.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">  <span class="hljs-keyword">const</span> app = <span class="hljs-keyword">new</span> Vue(&#123;    <span class="hljs-attr">el</span>: <span class="hljs-string">"#app"</span>,    <span class="hljs-attr">data</span>: &#123;      <span class="hljs-attr">counter</span>: <span class="hljs-number">0</span>    &#125;,    <span class="hljs-attr">methods</span>: &#123;      increment() &#123;        <span class="hljs-keyword">this</span>.counter++;      &#125;,      decrement() &#123;        <span class="hljs-keyword">this</span>.counter--;      &#125;    &#125;  &#125;)</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="4-2、v-on的参数问题"><a href="#4-2、v-on的参数问题" class="headerlink" title="4.2、v-on的参数问题"></a>4.2、v-on的参数问题</h4><pre><code class="hljs html">无参：两者一样@click="btn1Click"@click="btn1Click()" 有参：正常：    @click="btn2Click(123)"undefined：   @click="btn2Click()"传进去了event：@click="btn2Click"指定获得event：@click="btn3Click(123,$event)"</code></pre><h4 id="4-3、v-on的修饰符"><a href="#4-3、v-on的修饰符" class="headerlink" title="4.3、v-on的修饰符"></a>4.3、v-on的修饰符</h4><pre><code class="hljs html">1：.stop的使用：阻止冒泡，点击div不冒泡button（div包裹button）<span class="hljs-tag">&lt;<span class="hljs-name">div</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"divClick"</span>&gt;</span>    aa    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.stop</span>=<span class="hljs-string">"btnClick"</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>2：.prevent的使用：阻止提交<span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">"http://www.baidu.com"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"submit"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"提交"</span> @<span class="hljs-attr">click.prevent</span>=<span class="hljs-string">"submitClick"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>3：@keyup键帽监听：弹起键帽执行事件<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> @<span class="hljs-attr">keyup.enter</span>=<span class="hljs-string">"keyUp"</span>&gt;</span> //指定为enter键4：.once：只能点击一次<span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.once</span>=<span class="hljs-string">"btn2Click"</span>&gt;</span>按钮2<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code></pre><h1 id="五、条件判断"><a href="#五、条件判断" class="headerlink" title="五、条件判断"></a>五、条件判断</h1><h4 id="5-1、if-else-if-else"><a href="#5-1、if-else-if-else" class="headerlink" title="5.1、if else-if else"></a>5.1、if else-if else</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">"score&gt;=90"</span>&gt;</span>优秀<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">"score&gt;=80"</span>&gt;</span>良好<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-else-if</span>=<span class="hljs-string">"score&gt;=60"</span>&gt;</span>及格<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">v-else</span>&gt;</span>不及格<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span></code></pre><h4 id="5-2、用户登录切换案例：问题（组件复用导致input值滞留）"><a href="#5-2、用户登录切换案例：问题（组件复用导致input值滞留）" class="headerlink" title="5.2、用户登录切换案例：问题（组件复用导致input值滞留）"></a>5.2、用户登录切换案例：问题（组件复用导致input值滞留）</h4><pre><code class="hljs html">需求：不需要复用，则加入key属性，给每个input添加key后则不会被复用<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">"isUser"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"username"</span>&gt;</span>用户账号<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"username"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"账号"</span> <span class="hljs-attr">key</span>=<span class="hljs-string">"username"</span>&gt;</span> <span class="hljs-comment">&lt;!--标识，不一样则不复用--&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">v-else</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"email"</span>&gt;</span>用户邮箱<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"email"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"邮箱"</span> <span class="hljs-attr">key</span>=<span class="hljs-string">"email"</span>&gt;</span>  <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>    //思想：直接取反即可，不需要写方法  <span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click</span>=<span class="hljs-string">"isUser = !isUser"</span>&gt;</span>切换类型<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>data: &#123;isUser: true&#125;</code></pre><h4 id="5-3、v-if和v-show的区别"><a href="#5-3、v-if和v-show的区别" class="headerlink" title="5.3、v-if和v-show的区别"></a>5.3、v-if和v-show的区别</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"app"</span>&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"aaa"</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">"false"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>  <span class="hljs-comment">&lt;!--修改样式 display:none--&gt;</span>  <span class="hljs-tag">&lt;<span class="hljs-name">h2</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"bbb"</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">"false"</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>    <span class="hljs-comment">&lt;!--移除dom 不解析--&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><h1 id="六、循环遍历：v-for"><a href="#六、循环遍历：v-for" class="headerlink" title="六、循环遍历：v-for"></a>六、循环遍历：v-for</h1><h4 id="6-1、v-for遍历数组"><a href="#6-1、v-for遍历数组" class="headerlink" title="6.1、v-for遍历数组"></a>6.1、v-for遍历数组</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"(i,index) in names"</span>&gt;</span>&#123;&#123;index+1&#125;&#125;.&#123;&#123;i&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>//取得下标从1开始显示<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>data: &#123;names: ['aa','bb','cc','dd']&#125;</code></pre><h4 id="6-2、v-for遍历对象"><a href="#6-2、v-for遍历对象" class="headerlink" title="6.2、v-for遍历对象"></a>6.2、v-for遍历对象</h4><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- value在左 ，一个item默认取value值--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>          <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"(value,key) in info"</span>&gt;</span>&#123;&#123;key&#125;&#125; = &#123;&#123;value&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><span class="hljs-comment">&lt;!-- 也取下标 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>      =    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"(value,key,index) in info"</span>&gt;</span>&#123;&#123;index&#125;&#125;.&#123;&#123;key&#125;&#125; = &#123;&#123;value&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>data: &#123;    info: &#123;        name: 'aa',        age: 18,        height: 1.88    &#125;&#125;</code></pre><h4 id="6-3、哪些数组方法是响应式"><a href="#6-3、哪些数组方法是响应式" class="headerlink" title="6.3、哪些数组方法是响应式"></a>6.3、哪些数组方法是响应式</h4><pre><code class="hljs js">响应式：<span class="hljs-number">1</span>、追加push()：<span class="hljs-keyword">this</span>.letters.push(<span class="hljs-string">'aaa'</span>);    <span class="hljs-number">2</span>、删除最后一个pop()：<span class="hljs-keyword">this</span>.letters.pop();    <span class="hljs-number">3</span>、删除第一个shift()：<span class="hljs-keyword">this</span>.letters.shift();<span class="hljs-number">4</span>、在前面追加unshift()：<span class="hljs-keyword">this</span>.letters.unshift(<span class="hljs-string">'aaa'</span>,<span class="hljs-string">'bbb'</span>);  * <span class="hljs-number">5</span>、切片splice(位置、删除个数（空则删除后面所有）、插入)：- <span class="hljs-keyword">this</span>.letters.splice(<span class="hljs-number">1</span>,<span class="hljs-number">1</span>);  <span class="hljs-comment">//删除第二个元素</span>- <span class="hljs-keyword">this</span>.letters.splice(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-string">'cc'</span>,<span class="hljs-string">'dd'</span>,<span class="hljs-string">'ee'</span>) <span class="hljs-comment">//替换三个</span>- <span class="hljs-keyword">this</span>.letters.splice(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-string">"aaa"</span>,<span class="hljs-string">'ccc'</span>);      <span class="hljs-comment">//二号位插入两个</span><span class="hljs-number">6</span>、排序：sort()：<span class="hljs-keyword">this</span>.letters.sort();<span class="hljs-number">7</span>、反转：reverse()：<span class="hljs-keyword">this</span>.letters.reverse();非响应式：直接通过下标修改值：<span class="hljs-keyword">this</span>.letters[<span class="hljs-number">0</span>] = <span class="hljs-string">'aaa'</span>;解决：<span class="hljs-number">1</span>、<span class="hljs-keyword">this</span>.letters.splice(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-string">"aaa"</span>);   <span class="hljs-comment">//替换</span> <span class="hljs-number">2</span>、Vue.set(<span class="hljs-keyword">this</span>.letters,<span class="hljs-number">0</span>,<span class="hljs-string">'aaaaaa'</span>); <span class="hljs-comment">//对象、索引、修改值</span></code></pre><h1 id="七、书籍购物车案例知识点"><a href="#七、书籍购物车案例知识点" class="headerlink" title="七、书籍购物车案例知识点"></a>七、书籍购物车案例知识点</h1><h4 id="7-1、for循环的另一种用法（js"><a href="#7-1、for循环的另一种用法（js" class="headerlink" title="7.1、for循环的另一种用法（js)"></a>7.1、for循环的另一种用法（js)</h4><pre><code class="hljs js"><span class="hljs-comment">//of直接取值</span><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> book <span class="hljs-keyword">of</span> <span class="hljs-keyword">this</span>.books) &#123;totalPrice += book.price * book.count;&#125;</code></pre><h4 id="7-2、VUE高级函数用法"><a href="#7-2、VUE高级函数用法" class="headerlink" title="7.2、VUE高级函数用法"></a>7.2、VUE高级函数用法</h4><pre><code class="hljs js">需求：过滤数组的为<span class="hljs-number">100</span>以内然后乘<span class="hljs-number">2</span>的累加值。<span class="hljs-keyword">const</span> nums = [<span class="hljs-number">10</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>,<span class="hljs-number">50</span>,<span class="hljs-number">100</span>,<span class="hljs-number">200</span>,<span class="hljs-number">300</span>];<span class="hljs-comment">//分开写法</span><span class="hljs-keyword">let</span> newNums = nums.filter(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) </span>&#123;    <span class="hljs-keyword">return</span> n&lt;<span class="hljs-number">100</span>;<span class="hljs-comment">//条件过滤</span>&#125;);<span class="hljs-keyword">let</span> newNums2 = newNums.map(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">n</span>) </span>&#123;    <span class="hljs-keyword">return</span> n*<span class="hljs-number">2</span>;<span class="hljs-comment">//进一步操作</span>&#125;);<span class="hljs-comment">//两个参数，第一个与上一个的返回值有关。默认从0为第一次遍历的上一个个值，</span><span class="hljs-keyword">let</span> total = newNums2.reduce(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">previousValue,n</span>) </span>&#123;    <span class="hljs-keyword">return</span> previousValue + n;<span class="hljs-comment">//递归遍历</span>&#125;,<span class="hljs-number">0</span>);<span class="hljs-comment">//合并写法：</span><span class="hljs-keyword">let</span> total = nums.filter(<span class="hljs-function"><span class="hljs-params">n</span> =&gt;</span> n&lt;<span class="hljs-number">100</span>).map(<span class="hljs-function"><span class="hljs-params">n</span> =&gt;</span> n*<span class="hljs-number">2</span>).reduce(<span class="hljs-function">(<span class="hljs-params">pre,n</span>) =&gt;</span> pre+n);</code></pre><h4 id="7-3、filters过滤器"><a href="#7-3、filters过滤器" class="headerlink" title="7.3、filters过滤器"></a>7.3、filters过滤器</h4><pre><code class="hljs html">//使用<span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>&#123;&#123;item.price | showPrice&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>//指定格式显示filters: &#123;    showPrice(price) &#123;    return "￥" + price.toFixed(2); //保留两位小数    &#125;&#125;</code></pre><h1 id="八、双向绑定：v-model"><a href="#八、双向绑定：v-model" class="headerlink" title="八、双向绑定：v-model"></a>八、双向绑定：v-model</h1><h4 id="8-1、v-model的基本使用"><a href="#8-1、v-model的基本使用" class="headerlink" title="8.1、v-model的基本使用"></a>8.1、v-model的基本使用</h4><pre><code class="hljs html"><span class="hljs-comment">&lt;!--双向绑定：同步修改--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"message"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>message: '你好啊'</code></pre><h4 id="8-2、v-model的原理"><a href="#8-2、v-model的原理" class="headerlink" title="8.2、v-model的原理"></a>8.2、v-model的原理</h4><pre><code class="hljs html">//v-bind和v-on的结合体：原理就是修改了input内容的值，通过v-on绑定事件修改了值，然后用v-bind显示值<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">"message"</span> @<span class="hljs-attr">input</span>=<span class="hljs-string">"message = $event.target.value"</span>&gt;</span>//内容监听的简写</code></pre><h4 id="8-3、v-model结合radio类型"><a href="#8-3、v-model结合radio类型" class="headerlink" title="8.3、v-model结合radio类型"></a>8.3、v-model结合radio类型</h4><pre><code class="hljs html"><span class="hljs-comment">&lt;!--双向绑定同一个变量，默认就互斥，可以不需要name--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"male"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"男"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"sex"</span>&gt;</span>男<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"female"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"女"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"sex"</span>&gt;</span>女<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>性别：&#123;&#123;sex&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>sex: '女'  //默认</code></pre><h4 id="8-4、v-model结合checkbox类型"><a href="#8-4、v-model结合checkbox类型" class="headerlink" title="8.4、v-model结合checkbox类型"></a>8.4、v-model结合checkbox类型</h4><pre><code class="hljs html">//checkbox单选：同意协议场景，同意了则给点击<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"agree"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"isAgree"</span>&gt;</span>同意协议<span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">:disabled</span>=<span class="hljs-string">"!isAgree"</span>&gt;</span>下一步<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>isAgree: false, //选中了则改为true</code></pre><pre><code class="hljs html">//checkbox多选<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"唱"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"hobbies"</span>&gt;</span>唱<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"跳"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"hobbies"</span>&gt;</span>跳<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"rap"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"hobbies"</span>&gt;</span>rap<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"篮球"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"hobbies"</span>&gt;</span>篮球<span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>您的爱好是：&#123;&#123;hobbies&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>hobbies: [],   //选中了则存到数组中</code></pre><pre><code class="hljs html">//值绑定：使用场景为，不写死，动态获取，给定初始值<span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">:for</span>=<span class="hljs-string">"item"</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">"item in originHobbies"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">"item"</span> <span class="hljs-attr">:id</span>=<span class="hljs-string">"item"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"hobbies"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>originHobbies: ['唱','跳','rap','篮球','足球','排球']</code></pre><h4 id="8-5、v-model结合select类型"><a href="#8-5、v-model结合select类型" class="headerlink" title="8.5、v-model结合select类型"></a>8.5、v-model结合select类型</h4><pre><code class="hljs html"> <span class="hljs-comment">&lt;!--单选--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"fruit"</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"fruit"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"苹果"</span>&gt;</span>苹果<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"香蕉"</span>&gt;</span>香蕉<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"榴莲"</span>&gt;</span>榴莲<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"葡萄"</span>&gt;</span>葡萄<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"西瓜"</span>&gt;</span>西瓜<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>你选中的是：&#123;&#123;fruit&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>fruit: '香蕉', //默认选中香蕉<span class="hljs-comment">&lt;!--多选--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"fruits"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">""</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">"fruits"</span> <span class="hljs-attr">multiple</span>&gt;</span>//按住ctrl多选    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"苹果"</span>&gt;</span>苹果<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"香蕉"</span>&gt;</span>香蕉<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"榴莲"</span>&gt;</span>榴莲<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"葡萄"</span>&gt;</span>葡萄<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"西瓜"</span>&gt;</span>西瓜<span class="hljs-tag">&lt;/<span class="hljs-name">option</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>你选中的是：&#123;&#123;fruits&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>fruits: []  //用数组存值</code></pre><h4 id="8-6、v-model修饰符的使用"><a href="#8-6、v-model修饰符的使用" class="headerlink" title="8.6、v-model修饰符的使用"></a>8.6、v-model修饰符的使用</h4><pre><code class="hljs html">//1、修饰符.lazy：懒加载<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">v-model.lazy</span>=<span class="hljs-string">"message"</span>&gt;</span>  <span class="hljs-comment">&lt;!--不实时，回车、或者失去焦点才同步--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;message&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>//2、修饰符.number：改变input默认获得string类型为number类型（免去转化）<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"number"</span> <span class="hljs-attr">v-model.number</span>=<span class="hljs-string">"age"</span>&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>&#123;&#123;typeof age&#125;&#125;类型：&#123;&#123;age&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span>//3、修饰符.trim：去首尾空格<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">v-model.trim</span>=<span class="hljs-string">"name"</span>&gt;</span>message: '你好啊',age: 0,name: ''</code></pre><p align="right"><br>2020年07月26日 凌晨<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在线订餐系统知识点总结</title>
    <link href="/2020/07/12/%E5%9C%A8%E7%BA%BF%E8%AE%A2%E9%A4%90%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/"/>
    <url>/2020/07/12/%E5%9C%A8%E7%BA%BF%E8%AE%A2%E9%A4%90%E7%B3%BB%E7%BB%9F%E7%9F%A5%E8%AF%86%E7%82%B9%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p>项目背景：在线订餐系统是基于springboot和bootstrap的JavaEE项目，主要实现用户订餐，管理员接单等操作。</p><h1 id="SpringBoot基本配置"><a href="#SpringBoot基本配置" class="headerlink" title="SpringBoot基本配置"></a>SpringBoot基本配置</h1><h4 id="1、阿里巴巴druid配置"><a href="#1、阿里巴巴druid配置" class="headerlink" title="1、阿里巴巴druid配置"></a>1、阿里巴巴druid配置</h4><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.alibaba<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>druid<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.1.22<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></code></pre><pre><code class="hljs properties">spring:  datasource:    username: root    password: 123456    driver-class-name: com.mysql.cj.jdbc.Driver    url: jdbc:mysql://localhost:3306/springboot_orderfood_end?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8&amp;allowPublicKeyRetrieval=true    type: com.alibaba.druid.pool.DruidDataSource    initialSize: 5    minIdle: 5    maxActive: 20    maxWait: 60000    timeBetweenEvictionRunsMillis: 60000    minEvictableIdleTimeMillis: 300000    validationQuery: SELECT 1 FROM DUAL    testWhileIdle: true    testOnBorrow: false    testOnReturn: false    poolPreparedStatements: true    filters: stat,wall    maxPoolPreparedStatementPerConnectionSize: 20    useGlobalDataSourceStat: true    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</code></pre><h4 id="2、整合swagger"><a href="#2、整合swagger" class="headerlink" title="2、整合swagger"></a>2、整合swagger</h4><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.springfox<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springfox-swagger2<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.9.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>io.springfox<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.9.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>Config配置类添加注解：@EnableSwagger2使用 http://localhost:8080/swagger-ui.html#/</code></pre><h1 id="MybatisPlus以及代码生成器"><a href="#MybatisPlus以及代码生成器" class="headerlink" title="MybatisPlus以及代码生成器"></a>MybatisPlus以及代码生成器</h1><h4 id="1、基本依赖"><a href="#1、基本依赖" class="headerlink" title="1、基本依赖"></a>1、基本依赖</h4><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-comment">&lt;!--代码生成器--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.3.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.apache.velocity<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>velocity-engine-core<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.2<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">resources</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">resource</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">directory</span>&gt;</span>src/main/java<span class="hljs-tag">&lt;/<span class="hljs-name">directory</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">includes</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">include</span>&gt;</span>**/*.xml<span class="hljs-tag">&lt;/<span class="hljs-name">include</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">includes</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">filtering</span>&gt;</span>false<span class="hljs-tag">&lt;/<span class="hljs-name">filtering</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">resource</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">resources</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span></code></pre><h4 id="2、配置文件"><a href="#2、配置文件" class="headerlink" title="2、配置文件"></a>2、配置文件</h4><pre><code class="hljs properties">mybatis-plus:       # 日志log    configuration:      log-impl: org.apache.ibatis.logging.stdout.StdOutImpl    global-config:  # 配置逻辑删除      db-config:        logic-delete-value: 1        logic-not-delete-value: 0    # 如果手写mapper映射文件，需要配置扫描路径    mapper-locations: classpath:/com/guzhz/mapper/xml/*.xml</code></pre><h4 id="3、代码生成器类"><a href="#3、代码生成器类" class="headerlink" title="3、代码生成器类"></a>3、代码生成器类</h4><pre><code class="hljs java"><span class="hljs-comment">//代码生成器CodeGenerator</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CodeGenerator</span> </span>&#123;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;        String tableName = <span class="hljs-string">"order_detail"</span>;        String deletedCol = <span class="hljs-string">"md_deleted"</span>;        String versionCol = <span class="hljs-string">"md_version"</span>;        AutoGenerator mpg = <span class="hljs-keyword">new</span> AutoGenerator();        GlobalConfig gc = <span class="hljs-keyword">new</span> GlobalConfig();        String projectPath = System.getProperty(<span class="hljs-string">"user.dir"</span>);        gc.setOutputDir(projectPath + <span class="hljs-string">"/src/main/java"</span>);        gc.setAuthor(<span class="hljs-string">"Guzhz"</span>);        gc.setFileOverride(<span class="hljs-keyword">false</span>);        gc.setOpen(<span class="hljs-keyword">false</span>);        gc.setSwagger2(<span class="hljs-keyword">true</span>);        gc.setBaseResultMap(<span class="hljs-keyword">true</span>);        gc.setBaseColumnList(<span class="hljs-keyword">true</span>);        gc.setServiceName(<span class="hljs-string">"%sService"</span>);        gc.setIdType(IdType.AUTO);        gc.setDateType(DateType.ONLY_DATE);        mpg.setGlobalConfig(gc);        <span class="hljs-comment">// 数据源配置</span>        DataSourceConfig dsc = <span class="hljs-keyword">new</span> DataSourceConfig();        dsc.setUrl(<span class="hljs-string">"jdbc:mysql://localhost:3306/springboot_orderfood_end?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8&amp;allowPublicKeyRetrieval=true"</span>);        dsc.setDriverName(<span class="hljs-string">"com.mysql.cj.jdbc.Driver"</span>);        dsc.setUsername(<span class="hljs-string">"root"</span>);        dsc.setPassword(<span class="hljs-string">"123456"</span>);        dsc.setDbType(DbType.MYSQL);        mpg.setDataSource(dsc);        <span class="hljs-comment">// 包配置</span>        PackageConfig pc = <span class="hljs-keyword">new</span> PackageConfig();        pc.setParent(<span class="hljs-string">"com.guzhz"</span>);        pc.setEntity(<span class="hljs-string">"entity"</span>);        pc.setMapper(<span class="hljs-string">"mapper"</span>);        pc.setService(<span class="hljs-string">"service"</span>);        pc.setController(<span class="hljs-string">"controller"</span>);        mpg.setPackageInfo(pc);        <span class="hljs-comment">//4、策略配置（只需要改这里的表名即可）</span>        StrategyConfig strategy = <span class="hljs-keyword">new</span> StrategyConfig();        strategy.setNaming(NamingStrategy.underline_to_camel);        strategy.setColumnNaming(NamingStrategy.underline_to_camel);        strategy.setEntityLombokModel(<span class="hljs-keyword">true</span>); <span class="hljs-comment">// 自动lombok；</span>        strategy.setLogicDeleteFieldName(deletedCol);  <span class="hljs-comment">//逻辑删除字段</span>        strategy.setInclude(<span class="hljs-keyword">new</span> String[]&#123;tableName&#125;);   <span class="hljs-comment">//可以传入多个值</span>        <span class="hljs-comment">//5、自动填充配置</span>        TableFill gmtCreate = <span class="hljs-keyword">new</span> TableFill(<span class="hljs-string">"gmt_create"</span>, FieldFill.INSERT);        TableFill gmtModified = <span class="hljs-keyword">new</span> TableFill(<span class="hljs-string">"gmt_modified"</span>, FieldFill.INSERT_UPDATE);        ArrayList&lt;TableFill&gt; tableFills = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();        tableFills.add(gmtCreate);        tableFills.add(gmtModified);        strategy.setTableFillList(tableFills);        <span class="hljs-comment">//6、乐观锁</span>        strategy.setVersionFieldName(versionCol);           <span class="hljs-comment">//乐观锁字段名</span>        strategy.setRestControllerStyle(<span class="hljs-keyword">true</span>);               <span class="hljs-comment">//restful api风格控制器</span>        strategy.setControllerMappingHyphenStyle(<span class="hljs-keyword">true</span>);       <span class="hljs-comment">//url中驼峰转连字符</span>        mpg.setStrategy(strategy);        mpg.execute();    &#125;&#125;</code></pre><h4 id="4、实体类关键成员的注解"><a href="#4、实体类关键成员的注解" class="headerlink" title="4、实体类关键成员的注解"></a>4、实体类关键成员的注解</h4><pre><code class="hljs java"><span class="hljs-meta">@TableLogic</span><span class="hljs-keyword">private</span> Integer mdDeleted;<span class="hljs-meta">@Version</span><span class="hljs-keyword">private</span> Integer mdVersion;<span class="hljs-meta">@JsonFormat</span>(pattern=<span class="hljs-string">"yyyy-MM-dd HH:mm:ss"</span>,timezone = <span class="hljs-string">"GMT+8"</span>)<span class="hljs-meta">@DateTimeFormat</span>(pattern=<span class="hljs-string">"yyyy-MM-dd HH:mm:ss"</span>)<span class="hljs-meta">@TableField</span>(value = <span class="hljs-string">"od_createTime"</span>,fill = FieldFill.INSERT)<span class="hljs-keyword">private</span> Date odCreateTime;</code></pre><h4 id="5、配置分页、乐观锁的配置类"><a href="#5、配置分页、乐观锁的配置类" class="headerlink" title="5、配置分页、乐观锁的配置类"></a>5、配置分页、乐观锁的配置类</h4><pre><code class="hljs java"><span class="hljs-meta">@MapperScan</span>(<span class="hljs-string">"com.guzhz.mapper"</span>)<span class="hljs-meta">@ConditionalOnClass</span>(value = &#123;PaginationInterceptor.class&#125;)<span class="hljs-meta">@Configuration</span> <span class="hljs-comment">// 配置类</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Config</span> </span>&#123;    <span class="hljs-comment">// 注册乐观锁插件</span>    <span class="hljs-meta">@Bean</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> OptimisticLockerInterceptor <span class="hljs-title">optimisticLockerInterceptor</span><span class="hljs-params">()</span> </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> OptimisticLockerInterceptor();    &#125;    <span class="hljs-comment">/*配置分页插件*/</span>    <span class="hljs-meta">@Bean</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> PaginationInterceptor <span class="hljs-title">paginationInterceptor</span><span class="hljs-params">()</span> </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> PaginationInterceptor();    &#125;&#125;</code></pre><h4 id="6、自动更新时间配置类"><a href="#6、自动更新时间配置类" class="headerlink" title="6、自动更新时间配置类"></a>6、自动更新时间配置类</h4><pre><code class="hljs java"><span class="hljs-comment">//自动更新时间</span><span class="hljs-meta">@Slf</span>4j      <span class="hljs-comment">//日志注解</span><span class="hljs-meta">@Component</span> <span class="hljs-comment">// 一定不要忘记把处理器加到IOC容器中！</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyMetaObjectHandler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">MetaObjectHandler</span> </span>&#123;    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">insertFill</span><span class="hljs-params">(MetaObject metaObject)</span> </span>&#123;        <span class="hljs-comment">//实体类成员</span>        <span class="hljs-keyword">this</span>.setFieldValByName(<span class="hljs-string">"odCreateTime"</span>,<span class="hljs-keyword">new</span> Date(),metaObject);    &#125;    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">updateFill</span><span class="hljs-params">(MetaObject metaObject)</span> </span>&#123;    &#125;&#125;</code></pre><h4 id="7、时间个格式化json包"><a href="#7、时间个格式化json包" class="headerlink" title="7、时间个格式化json包"></a>7、时间个格式化json包</h4><pre><code class="hljs xml">//时间格式化<span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>jackson-databind<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.11.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span>th:text="$&#123;#dates.format(order.getOdCreateTime(),'yyyy-MM-dd HH:mm:ss')&#125;"</code></pre><h1 id="SpringSecurity5"><a href="#SpringSecurity5" class="headerlink" title="SpringSecurity5"></a>SpringSecurity5</h1><h4 id="1、基本依赖-1"><a href="#1、基本依赖-1" class="headerlink" title="1、基本依赖"></a>1、基本依赖</h4><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>thymeleaf-extras-springsecurity5<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.0.3.RELEASE<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-security<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span></code></pre><h4 id="2、配置类"><a href="#2、配置类" class="headerlink" title="2、配置类"></a>2、配置类</h4><pre><code class="hljs java"><span class="hljs-meta">@EnableWebSecurity</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SecurityConfig</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">WebSecurityConfigurerAdapter</span> </span>&#123;    <span class="hljs-meta">@Resource</span>    TbUserServiceImpl tbUserService;    <span class="hljs-meta">@Override</span>   <span class="hljs-comment">//授权规则</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">configure</span><span class="hljs-params">(HttpSecurity http)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;        http.authorizeRequests().antMatchers(<span class="hljs-string">"/"</span>,<span class="hljs-string">"/index"</span>,<span class="hljs-string">"/main"</span>,<span class="hljs-string">"/search"</span>).permitAll()                .antMatchers(<span class="hljs-string">"/userInfo"</span>,<span class="hljs-string">"/insertUserInfo"</span>,<span class="hljs-string">"/edUserInfo"</span>,<span class="hljs-string">"/deleteUser/**"</span>).hasAnyRole(<span class="hljs-string">"admin"</span>)                .antMatchers(<span class="hljs-string">"/menuManage"</span>,<span class="hljs-string">"/deleteOneMenu/**"</span>,<span class="hljs-string">"/upLoadImg"</span>,<span class="hljs-string">"/insertMenu"</span>,<span class="hljs-string">"/updateMenu"</span>).hasAnyRole(<span class="hljs-string">"admin"</span>)                .antMatchers(<span class="hljs-string">"/insertType"</span>,<span class="hljs-string">"/updateType"</span>,<span class="hljs-string">"/deleteType"</span>).hasAnyRole(<span class="hljs-string">"admin"</span>)                .antMatchers(<span class="hljs-string">"/orderManage"</span>,<span class="hljs-string">"/changeStatusToOne"</span>).hasAnyRole(<span class="hljs-string">"admin"</span>)                .antMatchers(<span class="hljs-string">"/myInfo"</span>,<span class="hljs-string">"/updateMyImg"</span>,<span class="hljs-string">"/updateMyInfo"</span>).hasAnyRole(<span class="hljs-string">"admin"</span>,<span class="hljs-string">"user"</span>)                .antMatchers(<span class="hljs-string">"/shoppingCart"</span>,<span class="hljs-string">"/shoppingCart-plus"</span>,<span class="hljs-string">"/shoppingCart-minus"</span>,<span class="hljs-string">"/addShoppingCart"</span>).hasAnyRole(<span class="hljs-string">"user"</span>)                .antMatchers(<span class="hljs-string">"/toOrder"</span>,<span class="hljs-string">"/myOrder"</span>,<span class="hljs-string">"/changeStatusToTwo"</span>).hasAnyRole(<span class="hljs-string">"user"</span>);        http.formLogin().loginPage(<span class="hljs-string">"/toLogin"</span>).usernameParameter(<span class="hljs-string">"uUsername"</span>).passwordParameter(<span class="hljs-string">"uPassword"</span>)                .loginProcessingUrl(<span class="hljs-string">"/login"</span>)   <span class="hljs-comment">//表单提交的请求，可以不需要路由（走security的路由）</span>                .failureUrl(<span class="hljs-string">"/toLogin?error=true"</span>);                http.csrf().disable();  <span class="hljs-comment">//取消ajax拦截（post），如果改为post/get则可能不会报错</span>        http.logout().logoutSuccessUrl(<span class="hljs-string">"/toLogin"</span>);        <span class="hljs-comment">//解决中文乱码问题</span>        CharacterEncodingFilter filter = <span class="hljs-keyword">new</span> CharacterEncodingFilter();        filter.setEncoding(<span class="hljs-string">"UTF-8"</span>); filter.setForceEncoding(<span class="hljs-keyword">true</span>);        http.addFilterBefore(filter, CsrfFilter.class);<span class="hljs-comment">/*        //开启记住我功能        http.rememberMe().rememberMeParameter("remember");*/</span>    &#125;    <span class="hljs-meta">@Override</span>    <span class="hljs-comment">//验证规则</span>    <span class="hljs-function"><span class="hljs-keyword">protected</span> <span class="hljs-keyword">void</span> <span class="hljs-title">configure</span><span class="hljs-params">(AuthenticationManagerBuilder auth)</span> <span class="hljs-keyword">throws</span> Exception </span>&#123;        auth.userDetailsService(tbUserService).passwordEncoder(<span class="hljs-keyword">new</span> NoPasswordEncoder());    &#125;&#125;</code></pre><h4 id="3、取消加密类"><a href="#3、取消加密类" class="headerlink" title="3、取消加密类"></a>3、取消加密类</h4><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NoPasswordEncoder</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">PasswordEncoder</span> </span>&#123;    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">encode</span><span class="hljs-params">(CharSequence charSequence)</span> </span>&#123;        <span class="hljs-comment">//不做任何加密处理</span>        <span class="hljs-keyword">return</span> charSequence.toString();    &#125;    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">boolean</span> <span class="hljs-title">matches</span><span class="hljs-params">(CharSequence charSequence, String s)</span> </span>&#123;        <span class="hljs-comment">//charSequence是前端传过来的密码，s是数据库中查到的密码</span>        <span class="hljs-keyword">if</span> (charSequence.toString().equals(s)) &#123;            <span class="hljs-keyword">return</span> <span class="hljs-keyword">true</span>;        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">false</span>;    &#125;&#125;</code></pre><h4 id="4、TbUserServiceImpl实现类对接数据库（implements-TbUserService）"><a href="#4、TbUserServiceImpl实现类对接数据库（implements-TbUserService）" class="headerlink" title="4、TbUserServiceImpl实现类对接数据库（implements TbUserService）"></a>4、TbUserServiceImpl实现类对接数据库（implements TbUserService）</h4><pre><code class="hljs java"><span class="hljs-meta">@Service</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">TbUserServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">ServiceImpl</span>&lt;<span class="hljs-title">TbUserMapper</span>, <span class="hljs-title">TbUser</span>&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title">TbUserService</span> , <span class="hljs-title">UserDetailsService</span></span>&#123;    <span class="hljs-comment">//security验证用户名</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> UserDetails <span class="hljs-title">loadUserByUsername</span><span class="hljs-params">(String uUsername)</span> <span class="hljs-keyword">throws</span> UsernameNotFoundException </span>&#123;        <span class="hljs-comment">//我们自己定义的 TbUserServiceImpl 需要实现 UserDetailsService 接口，实现该接口，就要实现接口中的方法，</span>        <span class="hljs-comment">// 也就是 loadUserByUsername ，这个方法的参数就是用户在登录的时候传入的用户名，</span>        <span class="hljs-comment">// 根据用户名去查询用户信息（查出来之后，系统会自动进行密码比对）</span>        <span class="hljs-comment">//根据前端传过来的uUsername找到对应的user</span>        TbUser user = tbUserMapper.selectOne(<span class="hljs-keyword">new</span> QueryWrapper&lt;TbUser&gt;().eq(<span class="hljs-string">"u_username"</span>, uUsername));        <span class="hljs-keyword">if</span> (user==<span class="hljs-keyword">null</span>)&#123;            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> UsernameNotFoundException(<span class="hljs-string">"用户不存在!"</span>);        &#125;        <span class="hljs-keyword">return</span> user;    &#125;&#125;</code></pre><h4 id="5、在后台获取当前用户的session信息"><a href="#5、在后台获取当前用户的session信息" class="headerlink" title="5、在后台获取当前用户的session信息"></a>5、在后台获取当前用户的session信息</h4><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UpdateSession</span> </span>&#123;    <span class="hljs-comment">//刷新权限</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">reloadUserAuthority</span><span class="hljs-params">(HttpSession session , TbUser user)</span></span>&#123;        <span class="hljs-comment">//1.从HttpServletRequest中获取SecurityContextImpl对象</span>        SecurityContextImpl securityContextImpl = (SecurityContextImpl) session.getAttribute(<span class="hljs-string">"SPRING_SECURITY_CONTEXT"</span>);        <span class="hljs-comment">//2.从SecurityContextImpl中获取Authentication对象</span>        Authentication authentication = securityContextImpl.getAuthentication();        <span class="hljs-comment">//3.初始化UsernamePasswordAuthenticationToken实例 ，这里的参数user就是我们要更新的用户信息</span>        UsernamePasswordAuthenticationToken auth = <span class="hljs-keyword">new</span> UsernamePasswordAuthenticationToken(user, authentication.getCredentials());        auth.setDetails(authentication.getDetails());        <span class="hljs-comment">//4.重新设置SecurityContextImpl对象的Authentication</span>        securityContextImpl.setAuthentication(auth);    &#125;    <span class="hljs-comment">//获得当前session对象，用于判断是否跨用户访问,返回当前所登录的用户的id；</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Integer <span class="hljs-title">getSessionUId</span><span class="hljs-params">(HttpSession session)</span></span>&#123;        SecurityContextImpl securityContextImpl = (SecurityContextImpl) session.getAttribute(<span class="hljs-string">"SPRING_SECURITY_CONTEXT"</span>);        Authentication authentication = securityContextImpl.getAuthentication();        TbUser user = (TbUser) authentication.getPrincipal();        <span class="hljs-keyword">return</span> user.getUId();    &#125;&#125;</code></pre><h4 id="6、前端获取权限"><a href="#6、前端获取权限" class="headerlink" title="6、前端获取权限"></a>6、前端获取权限</h4><pre><code class="hljs java">//导入命名空间xmlns:th="http://www.thymeleaf.org"xmlns:sec="http://www.thymeleaf.org/thymeleaf-extras-springsecurity5"//获得权限sec:authorize="hasRole('admin')"//获得内存中的值$&#123;#authentication.getPrincipal().uId&#125;&#125;</code></pre><h1 id="多表联合查询"><a href="#多表联合查询" class="headerlink" title="多表联合查询"></a>多表联合查询</h1><pre><code class="hljs java"><span class="hljs-comment">//自定义接口</span><span class="hljs-meta">@Mapper</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">MenuDetailMapper</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseMapper</span>&lt;<span class="hljs-title">MenuDetail</span>&gt; </span>&#123;    <span class="hljs-function">List&lt;MenuDetail&gt; <span class="hljs-title">selectByType</span><span class="hljs-params">(<span class="hljs-keyword">int</span> mtId)</span></span>;&#125;</code></pre><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span><span class="hljs-meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">"com.guzhz.mapper.MenuDetailMapper"</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 通用查询映射结果 --&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"BaseResultMap"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"com.guzhz.entity.MenuDetail"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"md_id"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mdId"</span> /&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"md_name"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mdName"</span> /&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"md_price"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mdPrice"</span> /&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"md_amount"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mdAmount"</span> /&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"md_url"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mdUrl"</span> /&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"md_new"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mdNew"</span> /&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"md_star"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mdStar"</span> /&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"md_deleted"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mdDeleted"</span> /&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"md_version"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mdVersion"</span> /&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"mt_id"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mtId"</span>/&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">association</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"menuType"</span> <span class="hljs-attr">javaType</span>=<span class="hljs-string">"com.guzhz.entity.MenuType"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"mt_id"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mtId"</span>/&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"mt_name"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mtName"</span>/&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"mt_deleted"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mtDeleted"</span>/&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">"mt_version"</span> <span class="hljs-attr">property</span>=<span class="hljs-string">"mtVersion"</span>/&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">association</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span>    <span class="hljs-comment">&lt;!-- 通用查询结果列 --&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">sql</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"Base_Column_List"</span>&gt;</span>        md_id, md_name, md_price, md_amount, md_url, md_new, md_star, md_deleted, md_version    <span class="hljs-tag">&lt;/<span class="hljs-name">sql</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"selectByType"</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">"int"</span> <span class="hljs-attr">resultMap</span>=<span class="hljs-string">"BaseResultMap"</span>&gt;</span>        select md_id, md_name, md_price, md_amount, md_url, md_new, md_star, md_deleted, md_version,               b.mt_id, mt_name, mt_deleted, mt_version        from menu_detail a, menu_type b        where a.mt_id = b.mt_id and b.mt_id = #&#123;mtId&#125;    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span></code></pre><h1 id="文件上传"><a href="#文件上传" class="headerlink" title="文件上传"></a>文件上传</h1><h4 id="1、配置类"><a href="#1、配置类" class="headerlink" title="1、配置类"></a>1、配置类</h4><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyWebAppConfigurer</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">WebMvcConfigurer</span> </span>&#123;    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addResourceHandlers</span><span class="hljs-params">(ResourceHandlerRegistry registry)</span> </span>&#123;        registry.addResourceHandler(<span class="hljs-string">"/images/**"</span>).addResourceLocations(<span class="hljs-string">"file:F:/Study/Book6/JavaEE/images/"</span>);    &#125;&#125;</code></pre><h4 id="2、实现类"><a href="#2、实现类" class="headerlink" title="2、实现类"></a>2、实现类</h4><pre><code class="hljs java"><span class="hljs-meta">@Repository</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileUpload</span> </span>&#123;        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">uploadFile</span><span class="hljs-params">(MultipartFile upLoadFile)</span></span>&#123;        <span class="hljs-keyword">if</span> (upLoadFile.isEmpty()) &#123;            System.out.println(<span class="hljs-string">"文件为空空"</span>);            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;        &#125;        String filePath = <span class="hljs-string">"F:\\Study\\Book6\\JavaEE\\images"</span>;                <span class="hljs-comment">//获取原始文件名</span>        String fileName = upLoadFile.getOriginalFilename();        <span class="hljs-comment">/*新的文件名*/</span>        fileName =  UUID.randomUUID().toString().replace(<span class="hljs-string">"-"</span>, <span class="hljs-string">""</span>) + fileName.substring(fileName.lastIndexOf(<span class="hljs-string">"."</span>));        File file = <span class="hljs-keyword">new</span> File(filePath,fileName);        <span class="hljs-keyword">if</span> (!file.getParentFile().exists()) &#123;            file.getParentFile().mkdirs();            System.out.println(<span class="hljs-string">"创建成功！"</span>);        &#125;        <span class="hljs-keyword">try</span> &#123;            upLoadFile.transferTo(file);        &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;            e.printStackTrace();        &#125;        String imgPath = <span class="hljs-string">"/images/"</span>+fileName;        <span class="hljs-keyword">return</span> imgPath;    &#125;&#125;</code></pre><h4 id="3、工具类"><a href="#3、工具类" class="headerlink" title="3、工具类"></a>3、工具类</h4><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">RandomNo</span> </span>&#123;    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">getRandomNo</span><span class="hljs-params">()</span></span>&#123;        SimpleDateFormat sdf=<span class="hljs-keyword">new</span> SimpleDateFormat(<span class="hljs-string">"yyyyMMddHHmmss"</span>);        String newDate=sdf.format(<span class="hljs-keyword">new</span> Date());        String result=<span class="hljs-string">""</span>;        Random random=<span class="hljs-keyword">new</span> Random();        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;            result+=random.nextInt(<span class="hljs-number">10</span>);        &#125;        <span class="hljs-keyword">return</span> newDate+result;    &#125;&#125;</code></pre><h1 id="前端知识总结"><a href="#前端知识总结" class="headerlink" title="前端知识总结"></a>前端知识总结</h1><h4 id="1、bootStrap、JQuery三件套"><a href="#1、bootStrap、JQuery三件套" class="headerlink" title="1、bootStrap、JQuery三件套"></a>1、bootStrap、JQuery三件套</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>//semantic-ui<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://cdn.bootcss.com/semantic-ui/2.4.1/semantic.min.css"</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span>&gt;</span>//图标库<span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://use.fontawesome.com/releases/v5.0.9/css/all.css"</span>&gt;</span></code></pre><h4 id="2、思想：获得循环出来的值，通过Ajax请求"><a href="#2、思想：获得循环出来的值，通过Ajax请求" class="headerlink" title="2、思想：获得循环出来的值，通过Ajax请求"></a>2、思想：获得循环出来的值，通过Ajax请求</h4><pre><code class="hljs html">把必要元素放进a标签里，设置为input hidden，绑定点击事件<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"getDetail(this)"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"getDetail"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#successTips"</span> <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">"modal"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"add-to-cart"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hidden"</span>  <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;menu.getMdName()&#125;"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hidden"</span>  <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;menu.getMdAmount()&#125;"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hidden"</span>  <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;menu.getMdPrice()&#125;"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hidden"</span>  <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;menu.getMdUrl()&#125;"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hidden"</span>  <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;menu.getMdId()&#125;"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hidden"</span>  <span class="hljs-attr">sec:authorize</span>=<span class="hljs-string">"isAuthenticated()"</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;#authentication.getPrincipal().uId&#125; "</span>&gt;</span>   <span class="hljs-comment">&lt;!--登录后获得用户id--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hidden"</span>  <span class="hljs-attr">sec:authorize</span>=<span class="hljs-string">"isAuthenticated()"</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;#authentication.getPrincipal().uRole&#125;   "</span>&gt;</span>   <span class="hljs-comment">&lt;!--登录后判断账号权限--&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getDetail</span>(<span class="hljs-params">a</span>) </span>&#123;        <span class="hljs-keyword">let</span> list = $(a).children(<span class="hljs-string">'input'</span>);      <span class="hljs-comment">//获得当前元素下的所有子input</span>        <span class="hljs-keyword">if</span> (list.length == <span class="hljs-number">5</span>)&#123;                  <span class="hljs-comment">//5个说明处于未登录状态</span>            alert(<span class="hljs-string">"请先登录，再订餐哦~"</span>);            $(a).attr(<span class="hljs-string">"href"</span>,<span class="hljs-string">"#"</span>);            <span class="hljs-keyword">return</span> ;        &#125;        <span class="hljs-keyword">if</span>($(list[<span class="hljs-number">6</span>]).val() == <span class="hljs-string">"ROLE_admin"</span>)&#123;            alert(<span class="hljs-string">"你就是老板啦，你不能下单哦~"</span>);            $(a).attr(<span class="hljs-string">"href"</span>,<span class="hljs-string">"#"</span>);            <span class="hljs-keyword">return</span> ;        &#125;<span class="hljs-keyword">if</span>($(list[<span class="hljs-number">1</span>]).val() == <span class="hljs-string">"0"</span>)&#123;            alert(<span class="hljs-string">"加入购物车失败！该菜品已售罄，等待补货！"</span>);            $(a).attr(<span class="hljs-string">"href"</span>,<span class="hljs-string">"#"</span>);            <span class="hljs-keyword">return</span> ;        &#125; <span class="hljs-keyword">else</span>&#123;            <span class="hljs-keyword">let</span> mdName = $(list[<span class="hljs-number">0</span>]).val();            <span class="hljs-keyword">let</span> mdPrice = $(list[<span class="hljs-number">2</span>]).val();            $(<span class="hljs-string">'#tips-name'</span>).html(<span class="hljs-string">"【名称】"</span>+mdName);            $(<span class="hljs-string">'#tips-price'</span>).html(<span class="hljs-string">"【价格】"</span>+mdPrice+<span class="hljs-string">'元'</span>);            <span class="hljs-comment">/*发起请求*/</span>            <span class="hljs-keyword">let</span> postData = &#123;&#125;;            postData[<span class="hljs-string">'scName'</span>] = mdName;            postData[<span class="hljs-string">'scAmount'</span>] = <span class="hljs-number">1</span>;            postData[<span class="hljs-string">'scPrice'</span>] = mdPrice;            postData[<span class="hljs-string">'scImg'</span>] = $(list[<span class="hljs-number">3</span>]).val();            postData[<span class="hljs-string">'mdId'</span>] = $(list[<span class="hljs-number">4</span>]).val();            postData[<span class="hljs-string">'uId'</span>] = $(list[<span class="hljs-number">5</span>]).val();            $.ajax(&#123;                <span class="hljs-attr">url</span>: <span class="hljs-string">"/addShoppingCart"</span>,                <span class="hljs-attr">type</span>: <span class="hljs-string">'POST'</span>,                <span class="hljs-attr">data</span>: postData,                <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">arg</span>) </span>&#123;                    <span class="hljs-keyword">if</span>(arg == <span class="hljs-string">"0"</span>)&#123;                        $(<span class="hljs-string">'#myModalLabel'</span>).text(<span class="hljs-string">"当前菜品加购已达到上限！"</span>)                    &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(arg == <span class="hljs-string">"1"</span>)&#123;                        $(<span class="hljs-string">'#myModalLabel'</span>).text(<span class="hljs-string">"加入成功！"</span>)                    &#125;<span class="hljs-keyword">else</span>&#123;                        $(<span class="hljs-string">'#myModalLabel'</span>).text(<span class="hljs-string">"数量加+1成功！"</span>)                    &#125;                    <span class="hljs-comment">// window.location.reload();</span>                &#125;            &#125;)        &#125;    &#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="3、技巧：修改头像"><a href="#3、技巧：修改头像" class="headerlink" title="3、技巧：修改头像"></a>3、技巧：修改头像</h4><pre><code class="hljs html"><span class="hljs-comment">&lt;!--更新头像模态框--&gt;</span>//修改点：模态框的id，img的id，模块脚的button<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal fade"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"headImgModal"</span> <span class="hljs-attr">tabindex</span>=<span class="hljs-string">"-1"</span> <span class="hljs-attr">role</span>=<span class="hljs-string">"dialog"</span> <span class="hljs-attr">aria-labelledby</span>=<span class="hljs-string">"myModalLabel"</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">"true"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-dialog"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-content"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"margin: 0 auto;width: 450px"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-header"</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"close"</span> <span class="hljs-attr">data-dismiss</span>=<span class="hljs-string">"modal"</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">"true"</span>&gt;</span>&amp;times;<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-title"</span>&gt;</span>修改头像<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">""</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-body text-center"</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">span</span>&gt;</span>                        <span class="hljs-comment">&lt;!--预览图片位置，默认图片--&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"headImg"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"width: 250px;height: 250px"</span> <span class="hljs-attr">th:src</span>=<span class="hljs-string">"@&#123;$&#123;#authentication.getPrincipal().uUrl&#125;&#125;"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"img-rounded"</span>&gt;</span>                    <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-footer"</span>&gt;</span>                    <span class="hljs-comment">&lt;!--点击选择文件 触发隐藏form，通过id--&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-default"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"$('#updateHeadImg').click();"</span>&gt;</span>浏览<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>                    <span class="hljs-comment">&lt;!--点击提交表单--&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-primary"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"submitBtn"</span>&gt;</span>提交<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-comment">&lt;!-- 隐藏form --&gt;</span>//修改点：form的id，form的action，input的id<span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"updateHeadImgForm"</span> <span class="hljs-attr">th:action</span>=<span class="hljs-string">"@&#123;'/updateMyImg?uId='+$&#123;#authentication.getPrincipal().uId&#125;&#125;"</span> <span class="hljs-attr">method</span>=<span class="hljs-string">"post"</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">"multipart/form-data"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"file"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"updateHeadImg"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"updateHeadImg"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"display: none"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><span class="hljs-comment">&lt;!-- 触发模态框按钮 --&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"tips()"</span> <span class="hljs-attr">th:name</span>=<span class="hljs-string">"$&#123;#authentication.getPrincipal().uId&#125;"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"margin-right: 75px; float: right"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-primary"</span> <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">"modal"</span> <span class="hljs-attr">data-target</span>=<span class="hljs-string">"#headImgModal"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"glyphicon glyphicon-picture"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>修改头像<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></code></pre><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    $(<span class="hljs-string">"#updateHeadImg"</span>).change(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-comment">//点击“浏览”后会触发隐藏文件表单。监听一旦发生改变则</span>        <span class="hljs-keyword">var</span> file = <span class="hljs-keyword">this</span>.files[<span class="hljs-number">0</span>];                   <span class="hljs-comment">// 获取input上传的图片数据;</span>        <span class="hljs-built_in">console</span>.log(file);        <span class="hljs-keyword">var</span> url = <span class="hljs-built_in">window</span>.URL.createObjectURL(file);  <span class="hljs-comment">// 得到file对象路径，可当成普通的文件路径一样使用，赋值给src;</span>        $(<span class="hljs-string">"#headImg"</span>).attr(<span class="hljs-string">"src"</span>, url);                <span class="hljs-comment">//修改模态框的头像</span>    &#125;);    <span class="hljs-comment">//  JQ点击提交表单</span>    $(<span class="hljs-string">"#submitBtn"</span>).on(<span class="hljs-string">"click"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">var</span> file = $(<span class="hljs-string">"#updateHeadImg"</span>).val();                   <span class="hljs-comment">// 获取input上传的图片数据;</span>        <span class="hljs-keyword">if</span>(file!=<span class="hljs-string">''</span>)&#123;            alert(<span class="hljs-string">"修改头像成功，正在前往登录页~"</span>);            $(<span class="hljs-string">'#updateHeadImgForm'</span>).submit();        &#125;<span class="hljs-keyword">else</span>&#123;            alert(<span class="hljs-string">'请先浏览图片！'</span>)        &#125;    &#125;);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="4、简单的模态框的使用"><a href="#4、简单的模态框的使用" class="headerlink" title="4、简单的模态框的使用"></a>4、简单的模态框的使用</h4><pre><code class="hljs html">//关键点：id，下单按钮的事件绑定<span class="hljs-comment">&lt;!--填充收货信息模态框--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal fade"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"fillInfoModal"</span> <span class="hljs-attr">tabindex</span>=<span class="hljs-string">"-1"</span> <span class="hljs-attr">role</span>=<span class="hljs-string">"dialog"</span> <span class="hljs-attr">aria-labelledby</span>=<span class="hljs-string">"exampleModalLabel"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-dialog"</span> <span class="hljs-attr">role</span>=<span class="hljs-string">"document"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-content"</span>  <span class="hljs-attr">style</span>=<span class="hljs-string">"margin: 0 auto;width: 450px"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-header"</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"close"</span> <span class="hljs-attr">data-dismiss</span>=<span class="hljs-string">"modal"</span> <span class="hljs-attr">aria-label</span>=<span class="hljs-string">"Close"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">"true"</span>&gt;</span>&amp;times;<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">h4</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-title"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"addTypeModalLabel"</span>&gt;</span>请编辑收货信息（可前往个人中心修改）：<span class="hljs-tag">&lt;/<span class="hljs-name">h4</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-body"</span>&gt;</span>                <span class="hljs-comment">&lt;!--模块体填充数据--&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">""</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"hidden"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"fill-uId"</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;#authentication.getPrincipal().uId&#125;"</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form-group"</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"fill-name"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"control-label"</span>&gt;</span>姓名：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>  <span class="hljs-attr">id</span>=<span class="hljs-string">"fill-name"</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;#authentication.getPrincipal().uName&#125;"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"odName"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form-control"</span>&gt;</span>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form-group"</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"fill-phone"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"control-label"</span>&gt;</span>手机号：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span>  <span class="hljs-attr">id</span>=<span class="hljs-string">"fill-phone"</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;#authentication.getPrincipal().uPhone&#125;"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"odPhone"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form-control"</span>&gt;</span>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form-group"</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"fill-address"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"control-label"</span>&gt;</span>地址：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"fill-address"</span> <span class="hljs-attr">th:value</span>=<span class="hljs-string">"$&#123;#authentication.getPrincipal().uAddress&#125;"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"odAddress"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form-control"</span> &gt;</span>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form-group"</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">"fill-remarks"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"control-label"</span>&gt;</span>备注：<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>                        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"fill-remarks"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"odRemarks"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"form-control"</span>  <span class="hljs-attr">placeholder</span>=<span class="hljs-string">"有啥要求可以备注说明哦~"</span>&gt;</span>                    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"modal-footer"</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-default"</span> <span class="hljs-attr">data-dismiss</span>=<span class="hljs-string">"modal"</span>&gt;</span>关闭<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-primary"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"toOrder()"</span>&gt;</span>确认下单<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">toOrder</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">let</span> postData = &#123;&#125;;        <span class="hljs-keyword">let</span> uId = $(<span class="hljs-string">'#fill-uId'</span>).val();        <span class="hljs-keyword">let</span> odName = $(<span class="hljs-string">'#fill-name'</span>).val();        <span class="hljs-keyword">let</span> odPhone = $(<span class="hljs-string">'#fill-phone'</span>).val();        <span class="hljs-keyword">let</span> odAddress = $(<span class="hljs-string">'#fill-address'</span>).val();        <span class="hljs-keyword">let</span> odRemarks = $(<span class="hljs-string">'#fill-remarks'</span>).val();        <span class="hljs-keyword">if</span> (odName === <span class="hljs-string">""</span>) &#123;            alert(<span class="hljs-string">"姓名不能为空！"</span>);            <span class="hljs-keyword">return</span>;        &#125;        <span class="hljs-keyword">if</span> (odPhone === <span class="hljs-string">""</span>) &#123;            alert(<span class="hljs-string">"手机号不能为空"</span>);            <span class="hljs-keyword">return</span>;        &#125;        <span class="hljs-keyword">if</span> (odAddress === <span class="hljs-string">""</span>) &#123;            alert(<span class="hljs-string">"地址不能为空"</span>);            <span class="hljs-keyword">return</span>;        &#125;        postData[<span class="hljs-string">'odName'</span>] = odName;        postData[<span class="hljs-string">'odPhone'</span>] = odPhone;        postData[<span class="hljs-string">'odAddress'</span>] = odAddress;        postData[<span class="hljs-string">'odRemarks'</span>] = odRemarks;        postData[<span class="hljs-string">'uId'</span>] = uId;        <span class="hljs-built_in">console</span>.log(postData);        $.ajax(&#123;            <span class="hljs-attr">url</span>: <span class="hljs-string">"/toOrder"</span>,            <span class="hljs-attr">type</span>: <span class="hljs-string">'POST'</span>,            <span class="hljs-attr">data</span>: postData,            <span class="hljs-attr">success</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">arg</span>) </span>&#123;                alert(arg);                <span class="hljs-built_in">window</span>.location.reload();            &#125;        &#125;);    &#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><h4 id="5、表格获取单元数据、简单的删除提示"><a href="#5、表格获取单元数据、简单的删除提示" class="headerlink" title="5、表格获取单元数据、简单的删除提示"></a>5、表格获取单元数据、简单的删除提示</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-warning"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"edit_table_btn"</span> <span class="hljs-attr">data-toggle</span>=<span class="hljs-string">"modal"</span> <span class="hljs-attr">data-target</span>=<span class="hljs-string">"#edUser"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"getData()"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"glyphicon glyphicon-pencil"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>编辑<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript"><span class="hljs-comment">/*被绑定的按钮，先执行onclick，获得表格当前行的值并设置为模态框的值*/</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getData</span>(<span class="hljs-params"></span>) </span>&#123;    $(<span class="hljs-string">"#userInfoTable tbody"</span>).on(<span class="hljs-string">"click"</span>, <span class="hljs-string">"tr"</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">let</span> data = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>();        <span class="hljs-keyword">let</span> td = $(<span class="hljs-keyword">this</span>).find(<span class="hljs-string">"td"</span>);        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; td.length; i++) &#123;            data.push(td.eq(i).text());        &#125;        $(<span class="hljs-string">'#ed-uId'</span>).attr(<span class="hljs-string">'value'</span>,data[<span class="hljs-number">0</span>]);        <span class="hljs-built_in">console</span>.log(data[<span class="hljs-number">0</span>]);        $(<span class="hljs-string">'#ed-uUsername'</span>).attr(<span class="hljs-string">'value'</span>,data[<span class="hljs-number">2</span>]);        $(<span class="hljs-string">'#ed-uPassword'</span>).attr(<span class="hljs-string">'value'</span>,data[<span class="hljs-number">3</span>]);        $(<span class="hljs-string">'#ed-uName'</span>).attr(<span class="hljs-string">'value'</span>,data[<span class="hljs-number">4</span>]);        $(<span class="hljs-string">'#ed-uPhone'</span>).attr(<span class="hljs-string">'value'</span>,data[<span class="hljs-number">5</span>]);        $(<span class="hljs-string">'#ed-uAddress'</span>).attr(<span class="hljs-string">'value'</span>,data[<span class="hljs-number">6</span>]);    &#125;);</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></code></pre><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">"@&#123;'/deleteUser/'+$&#123;user.getUId()&#125;&#125;"</span> <span class="hljs-attr">onClick</span>=<span class="hljs-string">"return confirm('确定删除?');"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"btn btn-danger"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"glyphicon glyphicon-remove"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> 删除<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><h4 id="6、翻页"><a href="#6、翻页" class="headerlink" title="6、翻页"></a>6、翻页</h4><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"container"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"row clearfix"</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"col-md-12 column"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"text-align: center;"</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"font-size: 16px;color:grey;"</span>&gt;</span>                总查询到&amp;nbsp;<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">"$&#123;page.getTotal()&#125;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>&amp;nbsp;条数据            <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>            <span class="hljs-comment">&lt;!--遍历页数--&gt;</span>            <span class="hljs-comment">&lt;!--th:each="i:$&#123;#numbers.sequence(1,page.getPages())&#125;"--&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"pagination"</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:if</span>=<span class="hljs-string">"$&#123;!page.hasPrevious()&#125;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"javascript:alert('已经是第一页啦！');"</span>&gt;</span>上一页<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:if</span>=<span class="hljs-string">"$&#123;page.hasPrevious()&#125;"</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">"@&#123;'/userInfo?pageNum='+ $&#123;page.getCurrent() - 1&#125;&#125;"</span>&gt;</span>上一页<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">th:each</span>=<span class="hljs-string">"i:$&#123;#numbers.sequence(1,page.getPages())&#125;"</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">a</span>  <span class="hljs-attr">th:if</span>=<span class="hljs-string">"$&#123;page.getCurrent() == i&#125;"</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">"@&#123;'/uuserInfo?pageNum='+ $&#123;i&#125;&#125;"</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">"$&#123;i&#125;"</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"background: #aefff8"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">a</span>  <span class="hljs-attr">th:if</span>=<span class="hljs-string">"$&#123;!(page.getCurrent() == i)&#125;"</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">"@&#123;'/userInfo?pageNum='+ $&#123;i&#125;&#125;"</span> <span class="hljs-attr">th:text</span>=<span class="hljs-string">"$&#123;i&#125;"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>                <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:if</span>=<span class="hljs-string">"$&#123;!page.hasNext()&#125;"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"javascript:alert('已经是最后一页啦！');"</span>&gt;</span>下一页<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">th:if</span>=<span class="hljs-string">"$&#123;page.hasNext()&#125;"</span> <span class="hljs-attr">th:href</span>=<span class="hljs-string">"@&#123;'/userInfo?pageNum='+ $&#123;page.getCurrent() + 1&#125;&#125;"</span>&gt;</span>下一页<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>                <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>            <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></code></pre><p align="right"><br>2020年07月12日 晚上<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>项目记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Springboot</tag>
      
      <tag>bootstrap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MyBatisPlus学习笔记</title>
    <link href="/2020/07/12/MyBatisPlus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <url>/2020/07/12/MyBatisPlus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>前言：MyBatisPlus可以节省我们大量工作时间，所有的CRUD代码它都可以自动化完成！</p><hr><h1 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h1><ul><li>无侵入：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li>损耗小：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作， BaseMapper</li><li>强大的 CRUD 操作：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分CRUD 操作，更有强大的条件构造器，满足各类使用需求, 以后简单的CRUD操作，它不用自己编写了！</li><li>支持 Lambda 形式调用：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li>支持主键自动生成：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li>支持 ActiveRecord 模式：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li>支持自定义全局通用操作：支持全局通用方法注入（ Write once, use anywhere ）</li><li>内置代码生成器：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用（自动帮你生成代码）</li><li>内置分页插件：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li>分页插件支持多种数据库：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li>内置性能分析插件：可输出 Sql 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li>内置全局拦截插件：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li></ul><hr><h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><p>1、创建数据库<br>2、创建表(id自增)<br><pre><code class="hljs java">DROP TABLE IF EXISTS user;<span class="hljs-function">CREATE TABLE <span class="hljs-title">user</span><span class="hljs-params">(    id BIGINT(<span class="hljs-number">20</span>)</span> NOT NULL COMMENT '主键ID',    name <span class="hljs-title">VARCHAR</span><span class="hljs-params">(<span class="hljs-number">30</span>)</span> NULL DEFAULT NULL COMMENT '姓名',    age <span class="hljs-title">INT</span><span class="hljs-params">(<span class="hljs-number">11</span>)</span> NULL DEFAULT NULL COMMENT '年龄',    email <span class="hljs-title">VARCHAR</span><span class="hljs-params">(<span class="hljs-number">50</span>)</span> NULL DEFAULT NULL COMMENT '邮箱',    PRIMARY <span class="hljs-title">KEY</span> <span class="hljs-params">(id)</span>)</span>;<span class="hljs-function">INSERT INTO <span class="hljs-title">user</span> <span class="hljs-params">(id, name, age, email)</span> <span class="hljs-title">VALUES</span><span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-string">'Jone'</span>, <span class="hljs-number">18</span>, <span class="hljs-string">'test1@baomidou.com'</span>)</span>,<span class="hljs-params">(<span class="hljs-number">2</span>, <span class="hljs-string">'Jack'</span>, <span class="hljs-number">20</span>, <span class="hljs-string">'test2@baomidou.com'</span>)</span>,<span class="hljs-params">(<span class="hljs-number">3</span>, <span class="hljs-string">'Tom'</span>, <span class="hljs-number">28</span>, <span class="hljs-string">'test3@baomidou.com'</span>)</span>,<span class="hljs-params">(<span class="hljs-number">4</span>, <span class="hljs-string">'Sandy'</span>, <span class="hljs-number">21</span>, <span class="hljs-string">'test4@baomidou.com'</span>)</span>,<span class="hljs-params">(<span class="hljs-number">5</span>, <span class="hljs-string">'Billie'</span>, <span class="hljs-number">24</span>, <span class="hljs-string">'test5@baomidou.com'</span>)</span></span>;-- 真实开发中，version（乐观锁）、deleted（逻辑删除）、gmt_create、gmt_modified</code></pre></p><p>3、编写项目，初始化项目，使用SpringBoot初始化<br>4、导入依赖<br><pre><code class="hljs java">&lt;!-- 数据库驱动 --&gt;&lt;dependency&gt;    &lt;groupId&gt;mysql&lt;/groupId&gt;    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;&lt;/dependency&gt;&lt;!-- lombok --&gt;&lt;dependency&gt;    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;    &lt;artifactId&gt;lombok&lt;/artifactId&gt;&lt;/dependency&gt;&lt;!-- mybatis-plus --&gt;&lt;!-- mybatis-plus 是自己开发，并非官方的！ --&gt;&lt;dependency&gt;    &lt;groupId&gt;com.baomidou&lt;/groupId&gt;    &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;    &lt;version&gt;3.0.5&lt;/version&gt;&lt;/dependency&gt;</code></pre></p><p>5、连接数据库<br><pre><code class="hljs java">spring.datasource.username=rootspring.datasource.password=<span class="hljs-number">123456</span>spring.datasource.url=jdbc:mysql:<span class="hljs-comment">//localhost:3306/mybatis_plus?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8</span>spring.datasource.driver-<span class="hljs-class"><span class="hljs-keyword">class</span>-<span class="hljs-title">name</span></span>=com.mysql.cj.jdbc.Driver</code></pre></p><p>6、编写基本pojo类<br><pre><code class="hljs java"><span class="hljs-meta">@Data</span><span class="hljs-meta">@AllArgsConstructor</span><span class="hljs-meta">@NoArgsConstructor</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;    <span class="hljs-keyword">private</span> Long id;    <span class="hljs-keyword">private</span> String name;    <span class="hljs-keyword">private</span> Integer age;    <span class="hljs-keyword">private</span> String email;&#125;</code></pre></p><p>7、mapper接口<br><pre><code class="hljs java"><span class="hljs-meta">@Repository</span> <span class="hljs-comment">// 代表持久层</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">UserMapper</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">BaseMapper</span>&lt;<span class="hljs-title">User</span>&gt; </span>&#123;    <span class="hljs-comment">// 所有的CRUD操作都已经编写完成了</span>    <span class="hljs-comment">// 你不需要像以前的配置一大堆文件了！</span>&#125;</code></pre></p><ul><li><p>注意点：我们需要在主启动类上去扫描我们的mapper包下的所有接口<br><code>@MapperScan(&quot;com.kuang.mapper&quot;)</code></p></li><li><p>测试类：</p><pre><code class="hljs java"><span class="hljs-meta">@SpringBootTest</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MybatisPlusApplicationTests</span> </span>&#123;    <span class="hljs-comment">// 继承了BaseMapper，所有的方法都来自己父类</span>    <span class="hljs-comment">// 我们也可以编写自己的扩展方法！</span>    <span class="hljs-meta">@Autowired</span>    <span class="hljs-keyword">private</span> UserMapper userMapper;    <span class="hljs-meta">@Test</span>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">contextLoads</span><span class="hljs-params">()</span> </span>&#123;        <span class="hljs-comment">// 参数是一个 Wrapper ，条件构造器，这里我们先不用 null</span>        <span class="hljs-comment">// 查询全部用户</span>        List&lt;User&gt; users = userMapper.selectList(<span class="hljs-keyword">null</span>);        users.forEach(System.out::println);    &#125;&#125;</code></pre></li></ul><hr><h1 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h1><p>我们所有的sql现在是不可见的，我们希望知道它是怎么执行的，所以我们必须要看日志！<br><pre><code class="hljs java">mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl</code></pre></p><hr><h1 id="CRUD拓展"><a href="#CRUD拓展" class="headerlink" title="CRUD拓展"></a>CRUD拓展</h1><h4 id="1、插入操作"><a href="#1、插入操作" class="headerlink" title="1、插入操作"></a>1、插入操作</h4><pre><code class="hljs java"><span class="hljs-comment">// 测试插入</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testInsert</span><span class="hljs-params">()</span></span>&#123;    User user = <span class="hljs-keyword">new</span> User();    user.setName(<span class="hljs-string">"狂神说Java"</span>);    user.setAge(<span class="hljs-number">3</span>);    user.setEmail(<span class="hljs-string">"24736743@qq.com"</span>);    <span class="hljs-keyword">int</span> result = userMapper.insert(user); <span class="hljs-comment">// 帮我们自动生成id</span>    System.out.println(result); <span class="hljs-comment">// 受影响的行数</span>    System.out.println(user); <span class="hljs-comment">// 发现，id会自动回填</span>&#125;</code></pre><p>？出现的问题：默认id为全局唯一id：ID_WORKER，是根据雪花算法生成的。</p><h4 id="2、主键生成策略"><a href="#2、主键生成策略" class="headerlink" title="2、主键生成策略"></a>2、主键生成策略</h4><p><strong>雪花算法：</strong><br>snowflake是Twitter开源的分布式ID生成算法，结果是一个long型的ID。其核心思想是：使用41bit作为毫秒数，10bit作为机器的ID（5个bit是数据中心，5个bit的机器ID），12bit作为毫秒内的流水号（意味着每个节点在每毫秒可以产生 4096 个 ID），最后还有一个符号位，永远是0。可以保证几乎全球唯一！<br><strong>配置id自增方法：</strong><br>1、实体类字段上 <code>@TableId(type = IdType.AUTO)</code><br>2、数据库自增<br><pre><code class="hljs java">IdType解释：<span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> IdType &#123;    AUTO(<span class="hljs-number">0</span>), <span class="hljs-comment">// 数据库id自增</span>    NONE(<span class="hljs-number">1</span>), <span class="hljs-comment">// 未设置主键</span>    INPUT(<span class="hljs-number">2</span>), <span class="hljs-comment">// 手动输入</span>    ID_WORKER(<span class="hljs-number">3</span>), <span class="hljs-comment">// 默认的全局唯一id</span>    UUID(<span class="hljs-number">4</span>), <span class="hljs-comment">// 全局唯一id uuid</span>    ID_WORKER_STR(<span class="hljs-number">5</span>); <span class="hljs-comment">//ID_WORKER 字符串表示法</span>&#125;</code></pre></p><h4 id="3、更新操作"><a href="#3、更新操作" class="headerlink" title="3、更新操作"></a>3、更新操作</h4><pre><code class="hljs java"><span class="hljs-comment">// 测试更新</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testUpdate</span><span class="hljs-params">()</span></span>&#123;    User user = <span class="hljs-keyword">new</span> User();    <span class="hljs-comment">// 通过条件自动拼接动态sql</span>    user.setId(<span class="hljs-number">6L</span>);    user.setName(<span class="hljs-string">"关注公众号：狂神说"</span>);    user.setAge(<span class="hljs-number">18</span>);    <span class="hljs-comment">// 注意：updateById 但是参数是一个 对象！</span>    <span class="hljs-keyword">int</span> i = userMapper.updateById(user);    System.out.println(i);&#125;</code></pre><h4 id="4、自动填充机制：创建时间、更新时间"><a href="#4、自动填充机制：创建时间、更新时间" class="headerlink" title="4、自动填充机制：创建时间、更新时间"></a>4、自动填充机制：创建时间、更新时间</h4><p>创建时间、修改时间！这些个操作一遍都是自动化完成的，我们不希望手动更新！<br>阿里巴巴开发手册：所有的数据库表：gmt_create、gmt_modified几乎所有的表都要配置上！而且需要自动化！</p><blockquote><p>方式一：修改数据库设置（工作中不允许你直接修改数据库）</p></blockquote><p>1、在表中新增字段 create_time, update_time（提供更新）<br>2、再次测试插入方法，我们需要先把实体类同步！<br><pre><code class="hljs java"><span class="hljs-keyword">private</span> Date createTime;<span class="hljs-keyword">private</span> Date updateTime;</code></pre></p><blockquote><p>方式二：代码操作</p></blockquote><p>1、只添加字段<br>2、实体类字段属性上需要增加注解<br><pre><code class="hljs java"><span class="hljs-comment">// 字段添加填充内容</span><span class="hljs-meta">@TableField</span>(fill = FieldFill.INSERT)<span class="hljs-keyword">private</span> Date createTime;<span class="hljs-meta">@TableField</span>(fill = FieldFill.INSERT_UPDATE)<span class="hljs-keyword">private</span> Date updateTime;</code></pre></p><p>3、处理器类处理注解<br><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.kuang.handler;<span class="hljs-keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;<span class="hljs-keyword">import</span> lombok.extern.slf4j.Slf4j;<span class="hljs-keyword">import</span> org.apache.ibatis.reflection.MetaObject;<span class="hljs-keyword">import</span> org.springframework.stereotype.Component;<span class="hljs-keyword">import</span> java.util.Date;<span class="hljs-meta">@Slf</span>4j      <span class="hljs-comment">//日志注解</span><span class="hljs-meta">@Component</span> <span class="hljs-comment">// 一定不要忘记把处理器加到IOC容器中！</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyMetaObjectHandler</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">MetaObjectHandler</span> </span>&#123;    <span class="hljs-comment">// 插入时的填充策略</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">insertFill</span><span class="hljs-params">(MetaObject metaObject)</span> </span>&#123;        log.info(<span class="hljs-string">"start insert fill....."</span>);        <span class="hljs-comment">// setFieldValByName(String fieldName, Object fieldVal, MetaObject</span>        metaObject        <span class="hljs-keyword">this</span>.setFieldValByName(<span class="hljs-string">"createTime"</span>,<span class="hljs-keyword">new</span> Date(),metaObject);        <span class="hljs-keyword">this</span>.setFieldValByName(<span class="hljs-string">"updateTime"</span>,<span class="hljs-keyword">new</span> Date(),metaObject);    &#125;    <span class="hljs-comment">// 更新时的填充策略</span>    <span class="hljs-meta">@Override</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">updateFill</span><span class="hljs-params">(MetaObject metaObject)</span> </span>&#123;        log.info(<span class="hljs-string">"start update fill....."</span>);        <span class="hljs-keyword">this</span>.setFieldValByName(<span class="hljs-string">"updateTime"</span>,<span class="hljs-keyword">new</span> Date(),metaObject);    &#125;&#125;</code></pre></p><p>4、测试插入、更新操作</p><h4 id="5、乐观锁"><a href="#5、乐观锁" class="headerlink" title="5、乐观锁"></a>5、乐观锁</h4><blockquote><p>乐观锁 : 故名思意十分乐观，它总是认为不会出现问题，无论干什么不去上锁！如果出现了问题，再次更新值测试<br>悲观锁：故名思意十分悲观，它总是认为总是出现问题，无论干什么都会上锁！再去操作！</p></blockquote><p>实现原理：添加version字段</p><ul><li>取出记录时，获取当前 version</li><li>更新时，带上这个version</li><li>执行更新时， set version = newVersion where version = oldVersion</li><li>如果version不对，就更新失败</li></ul><pre><code class="hljs java">乐观锁：<span class="hljs-number">1</span>、先查询，获得版本号 version = <span class="hljs-number">1</span>-- Aupdate user set name = <span class="hljs-string">"kuangshen"</span>, version = version + <span class="hljs-number">1</span>where id = <span class="hljs-number">2</span> and version = <span class="hljs-number">1</span>-- B 线程抢先完成，这个时候 version = <span class="hljs-number">2</span>，会导致 A 修改失败！update user set name = <span class="hljs-string">"kuangshen"</span>, version = version + <span class="hljs-number">1</span>where id = <span class="hljs-number">2</span> and version = <span class="hljs-number">1</span></code></pre><p>1、数据库添加version字段，int，默认值为1<br>2、实体类添加对应的字段<br><pre><code class="hljs java"><span class="hljs-meta">@Version</span> <span class="hljs-comment">//乐观锁Version注解</span><span class="hljs-keyword">private</span> Integer version;</code></pre></p><p>3、注册插件：编写配置类，把扫描声明放来这里，添加事务管理注解<br><pre><code class="hljs java"><span class="hljs-comment">// 扫描我们的 mapper 文件夹</span><span class="hljs-meta">@MapperScan</span>(<span class="hljs-string">"com.kuang.mapper"</span>)<span class="hljs-meta">@EnableTransactionManagement</span><span class="hljs-meta">@Configuration</span> <span class="hljs-comment">// 配置类</span><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyBatisPlusConfig</span> </span>&#123;    <span class="hljs-comment">// 注册乐观锁插件</span>    <span class="hljs-meta">@Bean</span>        <span class="hljs-function"><span class="hljs-keyword">public</span> OptimisticLockerInterceptor <span class="hljs-title">optimisticLockerInterceptor</span><span class="hljs-params">()</span> </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> OptimisticLockerInterceptor();    &#125;&#125;</code></pre></p><p>4、测试<br><pre><code class="hljs java"><span class="hljs-comment">// 测试乐观锁成功！</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testOptimisticLocker</span><span class="hljs-params">()</span></span>&#123;    <span class="hljs-comment">// 1、查询用户信息</span>    User user = userMapper.selectById(<span class="hljs-number">1L</span>);    <span class="hljs-comment">// 2、修改用户信息</span>    user.setName(<span class="hljs-string">"kuangshen"</span>);    user.setEmail(<span class="hljs-string">"24736743@qq.com"</span>);    <span class="hljs-comment">// 3、执行更新操作</span>    userMapper.updateById(user);&#125;</code></pre></p><pre><code class="hljs java"><span class="hljs-comment">// 测试乐观锁失败！多线程下</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testOptimisticLocker2</span><span class="hljs-params">()</span></span>&#123;    <span class="hljs-comment">// 线程 1</span>    User user = userMapper.selectById(<span class="hljs-number">1L</span>);    user.setName(<span class="hljs-string">"kuangshen111"</span>);    user.setEmail(<span class="hljs-string">"24736743@qq.com"</span>);    <span class="hljs-comment">// 模拟另外一个线程执行了插队操作</span>    User user2 = userMapper.selectById(<span class="hljs-number">1L</span>);    user2.setName(<span class="hljs-string">"kuangshen222"</span>);    user2.setEmail(<span class="hljs-string">"24736743@qq.com"</span>);    userMapper.updateById(user2);    <span class="hljs-comment">// 自旋锁来多次尝试提交！</span>    userMapper.updateById(user); <span class="hljs-comment">// 如果没有乐观锁就会覆盖插队线程的值！</span>&#125;</code></pre><h4 id="6、查询操作"><a href="#6、查询操作" class="headerlink" title="6、查询操作"></a>6、查询操作</h4><pre><code class="hljs java"><span class="hljs-comment">// 测试查询</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testSelectById</span><span class="hljs-params">()</span></span>&#123;    User user = userMapper.selectById(<span class="hljs-number">1L</span>);    System.out.println(user);&#125;<span class="hljs-comment">// 测试批量查询！</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testSelectByBatchId</span><span class="hljs-params">()</span></span>&#123;    List&lt;User&gt; users = userMapper.selectBatchIds(Arrays.asList(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>));    users.forEach(System.out::println);&#125;<span class="hljs-comment">// 按条件查询之一使用map操作</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testSelectByBatchIds</span><span class="hljs-params">()</span></span>&#123;    HashMap&lt;String, Object&gt; map = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();    <span class="hljs-comment">// 自定义要查询</span>    map.put(<span class="hljs-string">"name"</span>,<span class="hljs-string">"狂神说Java"</span>);    map.put(<span class="hljs-string">"age"</span>,<span class="hljs-number">3</span>);    List&lt;User&gt; users = userMapper.selectByMap(map);    users.forEach(System.out::println);&#125;</code></pre><h4 id="7、分页查询（内置）"><a href="#7、分页查询（内置）" class="headerlink" title="7、分页查询（内置）"></a>7、分页查询（内置）</h4><p>1、配置组件<br><pre><code class="hljs java"><span class="hljs-comment">// 分页插件</span><span class="hljs-meta">@Bean</span>    <span class="hljs-function"><span class="hljs-keyword">public</span> PaginationInterceptor <span class="hljs-title">paginationInterceptor</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> PaginationInterceptor();&#125;</code></pre></p><p>2、直接使用Page对象<br><pre><code class="hljs java"><span class="hljs-comment">// 测试分页查询</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testPage</span><span class="hljs-params">()</span></span>&#123;    <span class="hljs-comment">// 参数一：当前页</span>    <span class="hljs-comment">// 参数二：页面大小</span>    <span class="hljs-comment">// 使用了分页插件之后，所有的分页操作也变得简单的！</span>    Page&lt;User&gt; page = <span class="hljs-keyword">new</span> Page&lt;&gt;(<span class="hljs-number">2</span>,<span class="hljs-number">5</span>);    userMapper.selectPage(page,<span class="hljs-keyword">null</span>);    page.getRecords().forEach(System.out::println);    System.out.println(page.getTotal());&#125;</code></pre></p><h4 id="8、删除操作"><a href="#8、删除操作" class="headerlink" title="8、删除操作"></a>8、删除操作</h4><p>1、根据id删除记录<br><pre><code class="hljs java"><span class="hljs-comment">// 测试删除</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testDeleteById</span><span class="hljs-params">()</span></span>&#123;    userMapper.deleteById(<span class="hljs-number">1240620674645544965L</span>);&#125;<span class="hljs-comment">// 通过id批量删除</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testDeleteBatchId</span><span class="hljs-params">()</span></span>&#123;    userMapper.deleteBatchIds(Arrays.asList(<span class="hljs-number">1L</span>,<span class="hljs-number">2L</span>));&#125;<span class="hljs-comment">// 通过map删除</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">testDeleteMap</span><span class="hljs-params">()</span></span>&#123;    HashMap&lt;String, Object&gt; map = <span class="hljs-keyword">new</span> HashMap&lt;&gt;();    map.put(<span class="hljs-string">"name"</span>,<span class="hljs-string">"狂神说Java"</span>);    userMapper.deleteByMap(map);&#125;</code></pre></p><h4 id="9、逻辑删除"><a href="#9、逻辑删除" class="headerlink" title="9、逻辑删除"></a>9、逻辑删除</h4><blockquote><p>物理删除 ：从数据库中直接移除<br>逻辑删除 ：再数据库中没有被移除，而是通过一个变量来让他失效！ deleted = 0 =&gt; deleted = 1</p></blockquote><p>管理员可以查看被删除的记录！防止数据的丢失，类似于回收站！<br>（原理：更新deleted字段，但同时查询也是将无结果）<br>1、在数据表中增加一个 deleted 字段（int 默认0）<br>2、实体类中增加属性<br><pre><code class="hljs java"><span class="hljs-meta">@TableLogic</span> <span class="hljs-comment">//逻辑删除</span><span class="hljs-keyword">private</span> Integer deleted;</code></pre></p><p>3、配置组件<br><pre><code class="hljs java"><span class="hljs-comment">// 逻辑删除组件！</span><span class="hljs-meta">@Bean</span><span class="hljs-function"><span class="hljs-keyword">public</span> ISqlInjector <span class="hljs-title">sqlInjector</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> LogicSqlInjector();&#125;</code></pre></p><pre><code class="hljs java"># 配置逻辑删除mybatis-plus.global-config.db-config.logic-delete-value=1mybatis-plus.global-config.db-config.logic-not-delete-value=0</code></pre><h4 id="10、性能分析插件"><a href="#10、性能分析插件" class="headerlink" title="10、性能分析插件"></a>10、性能分析插件</h4><p>我们在平时的开发中，会遇到一些慢sql。测试！ druid……<br>作用：性能分析拦截器，用于输出每条 SQL 语句及其执行时间，<br>MyBatisPlus也提供性能分析插件，如果超过这个时间就停止运行！<br>1、导入插件<br><pre><code class="hljs java"><span class="hljs-comment">/*** SQL执行效率插件*/</span><span class="hljs-meta">@Bean</span><span class="hljs-meta">@Profile</span>(&#123;<span class="hljs-string">"dev"</span>,<span class="hljs-string">"test"</span>&#125;)<span class="hljs-comment">// 设置 dev test 环境开启，保证我们的效率</span><span class="hljs-function"><span class="hljs-keyword">public</span> PerformanceInterceptor <span class="hljs-title">performanceInterceptor</span><span class="hljs-params">()</span> </span>&#123;    PerformanceInterceptor performanceInterceptor = <span class="hljs-keyword">new</span> PerformanceInterceptor();    performanceInterceptor.setMaxTime(<span class="hljs-number">100</span>); <span class="hljs-comment">// ms设置sql执行的最大时间，如果超过了则不执行</span>    performanceInterceptor.setFormat(<span class="hljs-keyword">true</span>); <span class="hljs-comment">// 是否格式化代码</span>    <span class="hljs-keyword">return</span> performanceInterceptor;&#125;</code></pre></p><p><code>记住，要在SpringBoot中配置环境为dev或者 test 环境！</code><br>2、测试使用<br><pre><code class="hljs java"><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">contextLoads</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-comment">// 参数是一个 Wrapper ，条件构造器，这里我们先不用 null</span>    <span class="hljs-comment">// 查询全部用户</span>    List&lt;User&gt; users = userMapper.selectList(<span class="hljs-keyword">null</span>);    users.forEach(System.out::println);&#125;</code></pre></p><h4 id="11、条件构造器"><a href="#11、条件构造器" class="headerlink" title="11、条件构造器"></a>11、条件构造器</h4><p>十分重要：Wrapper<br>我们写一些复杂的sql就可以使用它来替代！<br><strong>1、限定非空条件</strong><br><pre><code class="hljs java"><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">contextLoads</span><span class="hljs-params">()</span> </span>&#123;    <span class="hljs-comment">// 查询name不为空的用户，并且邮箱不为空的用户，年龄大于等于12</span>    QueryWrapper&lt;User&gt; wrapper = <span class="hljs-keyword">new</span> QueryWrapper&lt;&gt;();    wrapper        .isNotNull(<span class="hljs-string">"name"</span>)        .isNotNull(<span class="hljs-string">"email"</span>)        .ge(<span class="hljs-string">"age"</span>,<span class="hljs-number">12</span>);    userMapper.selectList(wrapper).forEach(System.out::println); <span class="hljs-comment">// 和我们刚才学习的map对比一下</span>&#125;</code></pre></p><p><strong>2、限定字段等于某个值</strong><br><pre><code class="hljs java"><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">test2</span><span class="hljs-params">()</span></span>&#123;    <span class="hljs-comment">// 查询名字狂神说</span>    QueryWrapper&lt;User&gt; wrapper = <span class="hljs-keyword">new</span> QueryWrapper&lt;&gt;();    wrapper.eq(<span class="hljs-string">"name"</span>,<span class="hljs-string">"狂神说"</span>);    User user = userMapper.selectOne(wrapper); <span class="hljs-comment">// 查询一个数据，出现多个结果使用List或者 Map</span>    System.out.println(user);&#125;</code></pre></p><p><strong>3、限定字段值为某个区间</strong><br><pre><code class="hljs java"><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">test3</span><span class="hljs-params">()</span></span>&#123;    <span class="hljs-comment">// 查询年龄在 20 ~ 30 岁之间的用户</span>    QueryWrapper&lt;User&gt; wrapper = <span class="hljs-keyword">new</span> QueryWrapper&lt;&gt;();    wrapper.between(<span class="hljs-string">"age"</span>,<span class="hljs-number">20</span>,<span class="hljs-number">30</span>); <span class="hljs-comment">// 区间</span>    Integer count = userMapper.selectCount(wrapper);<span class="hljs-comment">// 查询结果数</span>    System.out.println(count);&#125;</code></pre></p><p><strong>4、模糊查询</strong><br><pre><code class="hljs java"><span class="hljs-comment">// 模糊查询</span><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">test4</span><span class="hljs-params">()</span></span>&#123;    QueryWrapper&lt;User&gt; wrapper = <span class="hljs-keyword">new</span> QueryWrapper&lt;&gt;();    <span class="hljs-comment">// 左和右 t%</span>    wrapper        .notLike(<span class="hljs-string">"name"</span>,<span class="hljs-string">"e"</span>)        .likeRight(<span class="hljs-string">"email"</span>,<span class="hljs-string">"t"</span>);    List&lt;Map&lt;String, Object&gt;&gt; maps = userMapper.selectMaps(wrapper);    maps.forEach(System.out::println);&#125;</code></pre></p><p><strong>5、id条件从子查询中得来</strong><br><pre><code class="hljs java"><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">test5</span><span class="hljs-params">()</span></span>&#123;    QueryWrapper&lt;User&gt; wrapper = <span class="hljs-keyword">new</span> QueryWrapper&lt;&gt;();    <span class="hljs-comment">// id 在子查询中查出来</span>    wrapper.inSql(<span class="hljs-string">"id"</span>,<span class="hljs-string">"select id from user where id&lt;3"</span>);    List&lt;Object&gt; objects = userMapper.selectObjs(wrapper);    objects.forEach(System.out::println);&#125;</code></pre></p><p>6、根据id进行排序<br><pre><code class="hljs java"><span class="hljs-meta">@Test</span><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">test6</span><span class="hljs-params">()</span></span>&#123;    QueryWrapper&lt;User&gt; wrapper = <span class="hljs-keyword">new</span> QueryWrapper&lt;&gt;();    <span class="hljs-comment">// 通过id进行升序排序</span>    wrapper.orderByAsc(<span class="hljs-string">"id"</span>);    List&lt;User&gt; users = userMapper.selectList(wrapper);    users.forEach(System.out::println);&#125;</code></pre></p><h4 id="12、代码自动生成器"><a href="#12、代码自动生成器" class="headerlink" title="12、代码自动生成器"></a>12、代码自动生成器</h4><p>dao、pojo、service、controller都给我自己去编写完成！<br>AutoGenerator 是 MyBatis-Plus 的代码生成器，通过 AutoGenerator 可以快速生成 Entity、Mapper、Mapper XML、Service、Controller 等各个模块的代码，极大的提升了开发效率。</p><p>代码：<br><pre><code class="hljs java">package com.kuang;import com.baomidou.mybatisplus.annotation.DbType;import com.baomidou.mybatisplus.annotation.FieldFill;import com.baomidou.mybatisplus.annotation.IdType;import com.baomidou.mybatisplus.annotation.TableField;import com.baomidou.mybatisplus.generator.AutoGenerator;import com.baomidou.mybatisplus.generator.config.DataSourceConfig;import com.baomidou.mybatisplus.generator.config.GlobalConfig;import com.baomidou.mybatisplus.generator.config.PackageConfig;import com.baomidou.mybatisplus.generator.config.StrategyConfig;import com.baomidou.mybatisplus.generator.config.po.TableFill;import com.baomidou.mybatisplus.generator.config.rules.DateType;import com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;import java.util.ArrayList;// 代码自动生成器public class KuangCode &#123;    public static void main(String[] args) &#123;        // 需要构建一个 代码自动生成器 对象        AutoGenerator mpg = new AutoGenerator();        // 配置策略        // 1、全局配置        GlobalConfig gc = new GlobalConfig();        String projectPath = System.getProperty("user.dir");        gc.setOutputDir(projectPath+"/src/main/java");        gc.setAuthor("狂神说");        gc.setOpen(false);        gc.setFileOverride(false); // 是否覆盖        gc.setServiceName("%sService"); // 去Service的I前缀        gc.setIdType(IdType.ID_WORKER);        gc.setDateType(DateType.ONLY_DATE);        gc.setSwagger2(true);        mpg.setGlobalConfig(gc);                //2、设置数据源        DataSourceConfig dsc = new DataSourceConfig();        dsc.setUrl("jdbc:mysql://localhost:3306/kuang_community?        useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=GMT%2B8");        dsc.setDriverName("com.mysql.cj.jdbc.Driver");        dsc.setUsername("root");        dsc.setPassword("123456");        dsc.setDbType(DbType.MYSQL);        mpg.setDataSource(dsc);        //3、包的配置        PackageConfig pc = new PackageConfig();        pc.setModuleName("blog");        pc.setParent("com.kuang");        pc.setEntity("entity");        pc.setMapper("mapper");        pc.setService("service");        pc.setController("controller");        mpg.setPackageInfo(pc);        //4、策略配置（只需要改这里的表名即可）        StrategyConfig strategy = new StrategyConfig();        strategy.setInclude("blog_tags","course","links","sys_settings","user_record","user_say"); // 设置要映射的表名        strategy.setNaming(NamingStrategy.underline_to_camel);        strategy.setColumnNaming(NamingStrategy.underline_to_camel);        strategy.setEntityLombokModel(true); // 自动lombok；        strategy.setLogicDeleteFieldName("deleted");        //5、自动填充配置        TableFill gmtCreate = new TableFill("gmt_create", FieldFill.INSERT);        TableFill gmtModified = new TableFill("gmt_modified",        FieldFill.INSERT_UPDATE);        ArrayList&lt;TableFill&gt; tableFills = new ArrayList&lt;&gt;();        tableFills.add(gmtCreate);        tableFills.add(gmtModified);        strategy.setTableFillList(tableFills);        //6、乐观锁        strategy.setVersionFieldName("version");        strategy.setRestControllerStyle(true);        strategy.setControllerMappingHyphenStyle(true); //        localhost:8080/hello_id_2        mpg.setStrategy(strategy);        mpg.execute(); //执行    &#125;&#125;</code></pre></p><p align="right"><br>2020年06月13日 晚上<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mybatis-plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JavaScript的简单回顾</title>
    <link href="/2020/06/09/JavaScript%E7%9A%84%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE/"/>
    <url>/2020/06/09/JavaScript%E7%9A%84%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE/</url>
    
    <content type="html"><![CDATA[<p>前言：<a href="https://www.bilibili.com/video/BV1JJ41177di" target="_blank" rel="noopener">教学视频</a>、<a href="https://blog.csdn.net/qq_36259143/article/details/106044195" target="_blank" rel="noopener">笔记参考</a></p><h3 id="一、快速入门"><a href="#一、快速入门" class="headerlink" title="一、快速入门"></a>一、快速入门</h3><h4 id="1-1、两种引入方式"><a href="#1-1、两种引入方式" class="headerlink" title="1.1、两种引入方式"></a>1.1、两种引入方式</h4><p><strong>内部标签</strong><br><pre><code class="hljs javascript">&lt;script&gt; <span class="hljs-comment">//....</span>&lt;script&gt;</code></pre></p><p><strong>外部引入</strong><br><pre><code class="hljs javascript">&lt;script src=<span class="hljs-string">"js/myjs.js"</span>&gt;<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></code></pre></p><h4 id="1-2、基本语法"><a href="#1-2、基本语法" class="headerlink" title="1.2、基本语法"></a>1.2、基本语法</h4><pre><code class="hljs javascript">&lt;script&gt;    <span class="xml"><span class="hljs-comment">&lt;!--JavaScript严格区分大小写--&gt;</span>    var score = 1 ;    if (score &gt; 60 &amp;&amp; score <span class="hljs-tag">&lt; <span class="hljs-attr">70</span>)&#123;        <span class="hljs-attr">alert</span>("<span class="hljs-attr">60</span>~<span class="hljs-attr">70</span>");    &#125;<span class="hljs-attr">else</span> <span class="hljs-attr">if</span>(<span class="hljs-attr">score</span> &gt;</span> 70 &amp;&amp; score <span class="hljs-tag">&lt; <span class="hljs-attr">80</span>)&#123;        <span class="hljs-attr">alert</span>("<span class="hljs-attr">70</span>~<span class="hljs-attr">80</span>");    &#125;<span class="hljs-attr">else</span>&#123;        <span class="hljs-attr">alert</span>("<span class="hljs-attr">other</span>")    &#125;&lt;/<span class="hljs-attr">script</span>&gt;</span></span></code></pre><h4 id="1-3、数据类型"><a href="#1-3、数据类型" class="headerlink" title="1.3、数据类型"></a>1.3、数据类型</h4><pre><code class="hljs javascript">· 变量：<span class="hljs-keyword">var</span> a· number：js不区分小树和整数· 字符串：<span class="hljs-string">'abc'</span> <span class="hljs-string">"abc"</span>· 布尔值：<span class="hljs-literal">true</span> | <span class="hljs-literal">false</span>· 逻辑运算：    &amp;&amp; 两个都为真，结果为真    || 一个为真，结果为真    ! 真即假，假即真· 比较运算符：    == 等于（类型不一样，值一样，也会判断为<span class="hljs-literal">true</span>）    === 绝对等于（类型一样，值一样，结果为<span class="hljs-literal">true</span>）· <span class="hljs-literal">NaN</span> === <span class="hljs-literal">NaN</span>，这个与所有的数值都不相等，包括自己    只能通过<span class="hljs-built_in">isNaN</span>（<span class="hljs-literal">NaN</span>）来判断这个数是否是<span class="hljs-literal">NaN</span>· 尽量避免使用浮点数进行运算，存在精度问题！· <span class="hljs-literal">null</span> 空· <span class="hljs-literal">undefined</span> 未定义· Java的数组必须是相同类型的对象~，JS中不需要这样    <span class="hljs-comment">//保证代码的可读性，尽量使用[]</span>    <span class="hljs-keyword">var</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-string">'hello'</span>,<span class="hljs-literal">null</span>,<span class="hljs-literal">true</span>];    <span class="hljs-comment">//第二种定义方法</span>    <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-string">'hello'</span>);· 对象    <span class="hljs-keyword">var</span> person = &#123;        <span class="hljs-attr">name</span>:<span class="hljs-string">'Tom'</span>,        <span class="hljs-attr">age</span>:<span class="hljs-number">3</span>,        <span class="hljs-attr">tags</span>:[<span class="hljs-string">'js'</span>,<span class="hljs-string">'java'</span>,<span class="hljs-string">'web'</span>,<span class="hljs-string">'...'</span>]    &#125;· 取对象值    person.name    &gt; <span class="hljs-string">"Tom"</span>    person.age    &gt; <span class="hljs-number">3</span></code></pre><h4 id="1-4、严格检查模式"><a href="#1-4、严格检查模式" class="headerlink" title="1.4、严格检查模式"></a>1.4、严格检查模式</h4><p><strong>改用ES6</strong><br><pre><code class="hljs javascript">&lt;script&gt;    <span class="hljs-string">'use strict'</span>;    <span class="hljs-comment">//全局变量</span>    <span class="hljs-keyword">let</span> i=<span class="hljs-number">1</span>    <span class="hljs-comment">//ES6 let</span>&lt;<span class="hljs-regexp">/script&gt;</span></code></pre></p><h3 id="二、数据类型"><a href="#二、数据类型" class="headerlink" title="二、数据类型"></a>二、数据类型</h3><h4 id="2-1、字符串"><a href="#2-1、字符串" class="headerlink" title="2.1、字符串"></a>2.1、字符串</h4><p><strong>特殊转义字符</strong><br><pre><code class="hljs javascript">\'\n\t\u4e2d    \u##### Unicode字符\x41Ascall字符</code></pre></p><p><strong>多换字符串编写</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> msg =       <span class="hljs-string">`hello       world       你好呀       nihao       `</span></code></pre></p><p><strong>模板字符串</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> name = <span class="hljs-string">'Tom'</span>;<span class="hljs-keyword">let</span> age = <span class="hljs-number">3</span>;<span class="hljs-keyword">var</span> msg = <span class="hljs-string">`你好，<span class="hljs-subst">$&#123;name&#125;</span>`</span>   <span class="hljs-comment">//tab 上面 esc下面</span></code></pre></p><p><strong>字符串长度</strong><br><pre><code class="hljs javascript">str.length</code></pre></p><p><strong>大小写转换</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//注意，这里是方法，不是属性了</span>student.toUpperCase();student.toLowerCase();</code></pre></p><p><strong>取下标</strong><br><pre><code class="hljs javascript">student.indexof(<span class="hljs-string">'t'</span>)</code></pre></p><p><strong>切片</strong><br><pre><code class="hljs javascript">substring，从<span class="hljs-number">0</span>开始，取左不取右student.substring(<span class="hljs-number">1</span>)<span class="hljs-comment">//从第一个字符串截取到最后一个字符串</span>student.substring(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>)<span class="hljs-comment">//[1,3)</span></code></pre></p><h4 id="2-2、数组"><a href="#2-2、数组" class="headerlink" title="2.2、数组"></a>2.2、数组</h4><p><strong>Array可以包含任意的数据类型</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>];<span class="hljs-comment">//通过下标取值和赋值</span></code></pre></p><p><strong>长度</strong><br><pre><code class="hljs javascript">arr.length<span class="hljs-comment">//注意：假如给arr.lennth赋值，数组大小就会发生变化~，如果赋值过小，元素就会丢失</span></code></pre></p><p><strong>indexOf，通过元素获得下标索引</strong><br><pre><code class="hljs javascript">arr.indexOf(<span class="hljs-number">2</span>)<span class="hljs-number">1</span><span class="hljs-comment">//字符串的"1"和数字 1 是不同的</span></code></pre></p><p><strong>slice()：截取Array的一部分，返回的一个新数组，类似于String中substring</strong></p><p><strong>push()，pop() 进出栈原理</strong><br><pre><code class="hljs javascript">push：压入到尾部pop：弹出尾部的一个元素</code></pre></p><p><strong>unshift(),shift() 头部</strong><br><pre><code class="hljs javascript">unshift：压入到头部shift：弹出头部的一个元素</code></pre></p><p><strong>排序sort()</strong><br><pre><code class="hljs javascript">(<span class="hljs-number">3</span>)[<span class="hljs-string">"B"</span>,<span class="hljs-string">"C"</span>,<span class="hljs-string">"A"</span>]arr.sort()(<span class="hljs-number">3</span>)[<span class="hljs-string">"A"</span>,<span class="hljs-string">"B"</span>,<span class="hljs-string">"C"</span>]</code></pre></p><p><strong>元素反转reverse()</strong><br><pre><code class="hljs javascript">(<span class="hljs-number">3</span>)[<span class="hljs-string">"A"</span>,<span class="hljs-string">"B"</span>,<span class="hljs-string">"C"</span>]arr.reverse()(<span class="hljs-number">3</span>)[<span class="hljs-string">"C"</span>,<span class="hljs-string">"B"</span>,<span class="hljs-string">"A"</span>]</code></pre></p><p><strong>concat()</strong><br><pre><code class="hljs javascript">注意：concat()并没有修改数组，只是会返回一个新的数组<span class="hljs-keyword">var</span> a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]a.concat(<span class="hljs-number">4</span>,<span class="hljs-number">5</span>)</code></pre></p><p><strong>连接符join()</strong><br><pre><code class="hljs javascript">在本例中，我们将创建一个数组，然后把它的所有元素放入一个字符串：&lt;script type="text/javascript"&gt;    var arr = new Array(3)    arr[0] = "George"    arr[1] = "John"    arr[2] = "Thomas"    document.write(arr.join())&lt;/script&gt;=&gt; George,John,Thomas------------------------------------------------在本例中，我们将使用分隔符来分隔数组中的元素：&lt;script type="text/javascript"&gt;    var arr = new Array(3)    arr[0] = "George"    arr[1] = "John"    arr[2] = "Thomas"    document.write(arr.join("."))&lt;/script&gt;George.John.Thomas</code></pre></p><p><strong>多维数组：同java</strong></p><h4 id="2-3、对象"><a href="#2-3、对象" class="headerlink" title="2.3、对象"></a>2.3、对象</h4><p><strong>基本格式</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> 对象名 = &#123;    属性名：属性值，    属性名：属性值，    属性名：属性值&#125;<span class="hljs-comment">//定义了一个person对象，它有四个属性</span><span class="hljs-keyword">var</span> person = &#123;    <span class="hljs-attr">name</span>:<span class="hljs-string">"Tom"</span>,    <span class="hljs-attr">age</span>:<span class="hljs-number">3</span>,    <span class="hljs-attr">email</span>:<span class="hljs-string">"123456798@QQ.com"</span>,    <span class="hljs-attr">score</span>:<span class="hljs-number">66</span>&#125;</code></pre></p><p><strong>使用一个不存在的对象属性，不会报错！undefined</strong><br><pre><code class="hljs javascript">person.haha&gt;&gt;&gt; <span class="hljs-literal">undefined</span></code></pre></p><p><strong>动态的删减属性，通过delete删除对象属性</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">delete</span> person.name<span class="hljs-literal">true</span></code></pre></p><p><strong>动态添加，直接给新的属性添加值即可</strong><br><pre><code class="hljs javascript">person.haha = <span class="hljs-string">'haha'</span>;<span class="hljs-string">'haha'</span></code></pre></p><p><strong>判断属性是否在这个对象中！xxx in xxx</strong><br><pre><code class="hljs javascript"><span class="hljs-string">'age'</span> <span class="hljs-keyword">in</span> person<span class="hljs-literal">true</span><span class="hljs-comment">//继承</span><span class="hljs-string">'toString'</span> <span class="hljs-keyword">in</span> person<span class="hljs-literal">true</span></code></pre></p><p><strong>判断一个属性是否是这个对象自身拥有的：hasOwnProperty()</strong><br><pre><code class="hljs javascript">person.hasOwnProperty(<span class="hljs-string">'toString'</span>)<span class="hljs-literal">false</span>person.hasOwnProperty(<span class="hljs-string">'age'</span>)<span class="hljs-literal">true</span></code></pre></p><h4 id="2-4、流程控制"><a href="#2-4、流程控制" class="headerlink" title="2.4、流程控制"></a>2.4、流程控制</h4><p><strong>if、while、for同Java</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> age = <span class="hljs-number">3</span>;<span class="hljs-keyword">if</span>(age&gt;<span class="hljs-number">3</span>)&#123;    alert(<span class="hljs-number">3</span>);&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(age&lt;<span class="hljs-number">5</span>)&#123;    alert(<span class="hljs-number">5</span>);&#125;<span class="hljs-keyword">else</span>&#123;    alert(haha);&#125;<span class="hljs-keyword">while</span>(age &lt; <span class="hljs-number">100</span>)&#123;    age = age + <span class="hljs-number">1</span>;    <span class="hljs-built_in">console</span>.log(age);&#125;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>;i &lt; <span class="hljs-number">100</span>; i++)&#123;    <span class="hljs-built_in">console</span>.log(i);&#125;</code></pre></p><p><strong>forEach循环</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> age = [<span class="hljs-number">12</span>,<span class="hljs-number">3</span>,<span class="hljs-number">45</span>,<span class="hljs-number">123</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>,<span class="hljs-number">8</span>]age.forEach(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">value</span>) </span>&#123;    <span class="hljs-built_in">console</span>.log(value);&#125;)</code></pre></p><p><strong>for…in</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> index <span class="hljs-keyword">in</span> age)&#123;<span class="hljs-built_in">console</span>.log(age[index]);&#125;</code></pre></p><h4 id="2-5、Map-和-Set-ES6的新特性"><a href="#2-5、Map-和-Set-ES6的新特性" class="headerlink" title="2.5、Map 和 Set ES6的新特性"></a>2.5、Map 和 Set ES6的新特性</h4><p><strong>Map</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//ES6</span><span class="hljs-comment">//学成的成绩，学生的名字</span><span class="hljs-keyword">var</span> names = [<span class="hljs-string">'tom'</span>,<span class="hljs-string">'jack'</span>,<span class="hljs-string">'sam'</span>];<span class="hljs-keyword">var</span> scores = [<span class="hljs-number">100</span>,<span class="hljs-number">90</span>,<span class="hljs-number">80</span>];<span class="hljs-keyword">var</span> map = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Map</span>([[<span class="hljs-string">'tom'</span>,<span class="hljs-number">100</span>],[<span class="hljs-string">'jack'</span>,<span class="hljs-number">90</span>],[<span class="hljs-string">'sam'</span>,<span class="hljs-number">80</span>]])<span class="hljs-keyword">var</span> name = map.get(<span class="hljs-string">'tom'</span>);<span class="hljs-built_in">console</span>.log(name);<span class="hljs-comment">//</span>map.set(<span class="hljs-string">'admin'</span>,<span class="hljs-number">123456</span>);<span class="hljs-comment">//新增元素</span><span class="hljs-built_in">console</span>.log(map);<span class="hljs-comment">//Map(4)&#123;"tom" =&gt; 100, "jack" =&gt; 90, "sam" =&gt; 80, "admin" =&gt; 123456&#125;</span>map.delete(<span class="hljs-string">'tom'</span>);<span class="hljs-comment">//删除元素</span><span class="hljs-built_in">console</span>.log(map);<span class="hljs-comment">//Map(3)&#123;"jack" =&gt; 90, "sam" =&gt; 80, "admin" =&gt; 123456&#125;</span></code></pre></p><p><strong>Set：无需不重复的集合</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//set可以去重</span><span class="hljs-keyword">var</span> <span class="hljs-keyword">set</span> = new Set([3,1,1,1,1,2]);<span class="hljs-keyword">set</span>.add(4);//添加console.log(<span class="hljs-keyword">set</span>);//Set(4) &#123;<span class="hljs-number">3</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>&#125;<span class="hljs-keyword">set</span>.delete(1);//删除console.log(<span class="hljs-keyword">set</span>);//Set(3) &#123;<span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>&#125;<span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">set</span>.has(3));//是否包含某个元素</code></pre></p><h4 id="2-6、Iterator"><a href="#2-6、Iterator" class="headerlink" title="2.6、Iterator"></a>2.6、Iterator</h4><p><strong>遍历数组</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//通过for of / for in 下标</span><span class="hljs-keyword">var</span> arr = [<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>];<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x <span class="hljs-keyword">of</span> arr)&#123;    <span class="hljs-built_in">console</span>.log(x)&#125;<span class="hljs-comment">//存在一个bug</span>arr.name = <span class="hljs-number">123</span>;<span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> x <span class="hljs-keyword">of</span> arr)&#123;    <span class="hljs-built_in">console</span>.log(x)&#125;输出:<span class="hljs-number">1</span><span class="hljs-number">2</span><span class="hljs-number">3</span>name</code></pre></p><p><strong>遍历map</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//遍历map</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> x <span class="hljs-keyword">of</span> map)&#123;    <span class="hljs-built_in">console</span>.log(x);&#125;</code></pre></p><p><strong>遍历set</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//遍历set</span><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> x <span class="hljs-keyword">of</span> <span class="hljs-keyword">set</span>)&#123;    <span class="hljs-built_in">console</span>.log(x);&#125;</code></pre></p><h3 id="三、函数"><a href="#三、函数" class="headerlink" title="三、函数"></a>三、函数</h3><h4 id="3-1、定义函数"><a href="#3-1、定义函数" class="headerlink" title="3.1、定义函数"></a>3.1、定义函数</h4><p><strong>方式一</strong><br><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abs</span>(<span class="hljs-params">x</span>)</span>&#123;    <span class="hljs-keyword">return</span> x;&#125;<span class="hljs-comment">//一旦执行到return代表函数结束，返回结果。</span><span class="hljs-comment">//如果没有执行return，函数执行完也会返回结果，返回就是undefined</span></code></pre></p><p><strong>方式二</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> abs = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">x</span>)</span>&#123;    <span class="hljs-keyword">return</span> x;&#125;<span class="hljs-comment">//function(x),这是一个匿名函数，但是赋值给abs。所以通过abs可以调用</span></code></pre></p><p><strong>参数问题</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//jJavaScript可以传任意个参数，也可以不传递参数。</span><span class="hljs-comment">//参数进来是否存在的问题？假设不存在参数，如何规避？</span><span class="hljs-keyword">var</span> abs = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">x</span>) </span>&#123;    <span class="hljs-comment">//参数个数</span>    <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">arguments</span>.length);    <span class="hljs-comment">//手动抛出异常   </span>    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> x !==<span class="hljs-string">'number'</span>)&#123;        <span class="hljs-keyword">throw</span> <span class="hljs-string">'Not a Number'</span>;    &#125;    <span class="hljs-keyword">return</span> x;&#125;<span class="hljs-comment">//arguments：代表传递进来所有的参数，是一个数组</span></code></pre></p><p><strong>问题：arguments 包含所有的参数，我们有时候想使用多余的参数来进行附加操作，需要排除已有参数</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//rest：获去除了已经定义的参数，ES6引入的新特性</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">arg</span>(<span class="hljs-params">a,b,...rest</span>) </span>&#123;    <span class="hljs-built_in">console</span>.log(a);    <span class="hljs-built_in">console</span>.log(b);    <span class="hljs-built_in">console</span>.log(rest);&#125;<span class="hljs-comment">//rest参数只能写在最后面，必须用…标识</span></code></pre></p><h4 id="3-2、变量的作用域"><a href="#3-2、变量的作用域" class="headerlink" title="3.2、变量的作用域"></a>3.2、变量的作用域</h4><p><strong>在Javascript中，var定义变量实际是有作用域的。<br>假设在函数体中声明，则在函数体外不可以使用~（如果想要实现，则需要闭包）</strong><br><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abc</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> x= <span class="hljs-number">1</span>;    x = x + <span class="hljs-number">1</span>;&#125;x = x + <span class="hljs-number">2</span> ;<span class="hljs-comment">//Uncaught ReferenceError: x is not defined</span></code></pre></p><p><strong>如果两个函数使用相同变量名，只要在函数内部，就不冲突</strong><br><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abc1</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> x= <span class="hljs-number">1</span>;    x = x + <span class="hljs-number">1</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abc2</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> x= <span class="hljs-number">2</span>;    x = x + <span class="hljs-number">1</span>;&#125;</code></pre></p><p><strong>内部函数可以询问外部函数的成员，反之则不行</strong><br><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abc3</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> x= <span class="hljs-number">1</span>;    <span class="hljs-comment">//内部函数可以询问外部函数的成员，反之则不行</span>    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abc3</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> y = x + <span class="hljs-number">1</span>;<span class="hljs-comment">//2</span>    &#125;    <span class="hljs-keyword">var</span> z = y + <span class="hljs-number">1</span>;<span class="hljs-comment">//Uncaught ReferenceError: x is not defined</span>&#125;</code></pre></p><p><strong>假设：内部函数变量与外部函数变量重名</strong><br><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abc5</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> x = <span class="hljs-number">1</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abc6</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">var</span> x = A;        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'inner'</span> + x);<span class="hljs-comment">//outer1</span>    &#125;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">'outer'</span>+x);<span class="hljs-comment">//innerA</span>    abc6();&#125;<span class="hljs-comment">//不冲突，自己有就用自己的</span></code></pre></p><p><strong>提升变量作用域</strong><br><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abc8</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> x = <span class="hljs-string">'x'</span> + y;    <span class="hljs-built_in">console</span>.log(x);    <span class="hljs-keyword">var</span> y = <span class="hljs-string">'y'</span>;&#125;<span class="hljs-comment">//结果：undefined</span><span class="hljs-comment">//说明：js执行引擎，自动提升了y的声明，但是不会提升y的赋值</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abc8</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> y;    <span class="hljs-keyword">var</span> x = <span class="hljs-string">'x'</span> + y;    <span class="hljs-built_in">console</span>.log(x);    y = <span class="hljs-string">'y'</span>;&#125;<span class="hljs-comment">//这是在Javascript简历之初就存在的特性。养成规范：所有的变量定义都放在函数头部，不要乱放，便于代码维护；</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">abc</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-keyword">var</span> x = <span class="hljs-number">1</span>,        y = x + <span class="hljs-number">1</span>,        z,i,a;<span class="hljs-comment">//undefined</span>&#125;</code></pre></p><p><strong>全局函数</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//全局变量</span>x = <span class="hljs-number">1</span>;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">f</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-built_in">console</span>.log(x);&#125;f();<span class="hljs-built_in">console</span>.log(x);</code></pre></p><p><strong>全局对象：window</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> x = <span class="hljs-string">'xxx'</span>;alert(x);alert(windws.x);<span class="hljs-comment">//alert()这个函数本身也是一个window变量：</span><span class="hljs-keyword">var</span> x = <span class="hljs-string">'xxx'</span>;<span class="hljs-built_in">window</span>.alert(x);<span class="hljs-keyword">var</span> old_alert = <span class="hljs-built_in">window</span>.alert;<span class="hljs-comment">// old_alert(x);</span><span class="hljs-built_in">window</span>.alert = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;&#125;;<span class="hljs-comment">//发现alert()失效了</span><span class="hljs-built_in">window</span>.alert(<span class="hljs-number">123</span>);<span class="hljs-comment">//恢复</span><span class="hljs-built_in">window</span>.alert = old_alert;<span class="hljs-built_in">window</span>.alert(<span class="hljs-number">456</span>);<span class="hljs-comment">//Javascript实际上只有一个全局作用域，任何变量（函数也可以视为变量），假设没有在函数作用范围，就会向外查找，如果在全局作用域都没有找到，报错RefrenceError</span></code></pre></p><p><strong>规范：由于我们所有的全局变量都会绑定到我们的window上。如果不同的js文件，使用了相同的全局变量，冲突-&gt;如何能够减少冲突？</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//唯一全局变量</span><span class="hljs-keyword">var</span> LiusxApp = &#123;&#125;;<span class="hljs-comment">//定义全局变量</span>LiusxApp.name = <span class="hljs-string">'xiaoming'</span>;LiusxApp.add = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">a,b</span>) </span>&#123;    <span class="hljs-keyword">return</span> a + b;&#125;<span class="hljs-comment">//把自己的代码全部放入自己定义的唯一空间名字中，降低全局命名冲突的问题。（jQuery）</span></code></pre></p><p><strong>局部作用域：let</strong><br><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">aaa</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100</span> ;i++)&#123;        <span class="hljs-built_in">console</span>.log(i);    &#125;    <span class="hljs-built_in">console</span>.log(i+<span class="hljs-number">1</span>);<span class="hljs-comment">//问题，i 出了这个作用域还可以使用</span>&#125;<span class="hljs-comment">//ES6：let关键字，解决局部作用域冲突问题！</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">aaa</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">100</span> ;i++)&#123;        <span class="hljs-built_in">console</span>.log(i);    &#125;    <span class="hljs-built_in">console</span>.log(i+<span class="hljs-number">1</span>);<span class="hljs-comment">//问题，i 出了这个作用域即刻失效</span>&#125;<span class="hljs-comment">//建议大家都用let取定义局部作用域的变量</span></code></pre></p><p><strong>const：ES6之前，怎么定义常量：只有用全部大写字母命名的变量就是常量：建议不要修改这样的值</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> PI = <span class="hljs-string">'3.14'</span>;<span class="hljs-comment">//只读效果</span><span class="hljs-built_in">console</span>.log(PI);PI = <span class="hljs-string">'123'</span>;<span class="hljs-comment">//Uncaught TypeError: Assignment to constant variable.</span><span class="hljs-built_in">console</span>.log(PI);</code></pre></p><h4 id="3-3、方法"><a href="#3-3、方法" class="headerlink" title="3.3、方法"></a>3.3、方法</h4><p><strong>定义方法（方法就是把函数放在对象里面，对象中只有2个东西：属性和方法）</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> liusx = &#123;    <span class="hljs-attr">name</span>: <span class="hljs-string">'Sam'</span>,    <span class="hljs-attr">bitrh</span>: <span class="hljs-number">2020</span>,    <span class="hljs-comment">//方法</span>    age: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getFullYear();        <span class="hljs-keyword">return</span> now-<span class="hljs-keyword">this</span>.bitrh;    &#125;&#125;<span class="hljs-comment">//属性</span>liusx.name;<span class="hljs-comment">//方法，一定要带()</span>liusx.age();</code></pre></p><p><strong>this的使用：没有上下午关系直接使用会NaN，但可以添加指向</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> liusx = &#123;    <span class="hljs-attr">name</span>: <span class="hljs-string">'Sam'</span>,    <span class="hljs-attr">bitrh</span>: <span class="hljs-number">2020</span>,    <span class="hljs-comment">//方法</span>    age: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getFullYear();        <span class="hljs-keyword">return</span> now-<span class="hljs-keyword">this</span>.bitrh;    &#125;&#125;<span class="hljs-comment">//属性</span>liusx.name;<span class="hljs-comment">//方法，一定要带()</span>liusx.age();</code></pre></p><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getAge</span> (<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getFullYear();    <span class="hljs-keyword">return</span> now-<span class="hljs-keyword">this</span>.bitrh;&#125;<span class="hljs-keyword">var</span> liusx = &#123;    <span class="hljs-attr">name</span>: <span class="hljs-string">'Sam'</span>,    <span class="hljs-attr">bitrh</span>: <span class="hljs-number">2020</span>,    <span class="hljs-comment">//方法</span>    age: getAge&#125;<span class="hljs-comment">//liusx.age()    =&gt;ok</span><span class="hljs-comment">//getAge()     =&gt;NaN</span></code></pre><p><strong>控制this的指向</strong><br><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getAge</span> (<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().getFullYear();    <span class="hljs-keyword">return</span> now-<span class="hljs-keyword">this</span>.bitrh;&#125;<span class="hljs-keyword">var</span> liusx = &#123;    <span class="hljs-attr">name</span>: <span class="hljs-string">'Sam'</span>,    <span class="hljs-attr">bitrh</span>: <span class="hljs-number">2020</span>,    <span class="hljs-comment">//方法</span>    age: getAge&#125;<span class="hljs-comment">//liusx.age()    =&gt;ok</span><span class="hljs-comment">//getAge()       =&gt;NaN</span>getAge.apply(liusx,[])<span class="hljs-comment">//this，指向了liusx，参数为空</span></code></pre></p><h3 id="四、内部对象"><a href="#四、内部对象" class="headerlink" title="四、内部对象"></a>四、内部对象</h3><p><strong>标准对象</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">typeof</span> <span class="hljs-number">123</span><span class="hljs-string">"number"</span><span class="hljs-keyword">typeof</span> <span class="hljs-string">'123'</span><span class="hljs-string">"string"</span><span class="hljs-keyword">typeof</span> <span class="hljs-literal">true</span><span class="hljs-string">"boolean"</span><span class="hljs-keyword">typeof</span> <span class="hljs-literal">NaN</span><span class="hljs-string">"number"</span><span class="hljs-keyword">typeof</span> []<span class="hljs-string">"object"</span><span class="hljs-keyword">typeof</span> &#123;&#125;<span class="hljs-string">"object"</span><span class="hljs-keyword">typeof</span> <span class="hljs-built_in">Math</span>.abs<span class="hljs-string">"function"</span><span class="hljs-keyword">typeof</span> <span class="hljs-literal">undefined</span><span class="hljs-string">"undefined"</span></code></pre></p><p><strong>4.1、Date的基本使用</strong><br><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> now = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>();<span class="hljs-comment">//</span>now.getFullYear();<span class="hljs-comment">//年</span>now.getMonth();<span class="hljs-comment">//月</span>now.getDate();<span class="hljs-comment">//日</span>now.getDay();<span class="hljs-comment">//星期几</span>now.getHours();<span class="hljs-comment">//时</span>now.getMinutes();<span class="hljs-comment">//分</span>now.getSeconds();<span class="hljs-comment">//秒</span>now.getTime();<span class="hljs-comment">//时间戳 全世界统一 1970 1.1 8:00:00</span><span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>(<span class="hljs-number">1589096655409</span>));<span class="hljs-comment">//时间戳转时间</span><span class="hljs-comment">//转换</span><span class="hljs-comment">//本地时间</span>now.toLocaleString();<span class="hljs-string">"2020/5/10 下午3:44:15"</span><span class="hljs-comment">//东八区</span>now.toGMTString();<span class="hljs-string">"Sun, 10 May 2020 07:44:15 GMT"</span></code></pre></p><p><strong>4.2、JSON</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//JSON 字符串和 JS 对象的转换</span><span class="hljs-keyword">var</span> user = &#123;    <span class="hljs-attr">name</span>: <span class="hljs-string">'liusx'</span>,    <span class="hljs-attr">age</span>: <span class="hljs-number">3</span>,    <span class="hljs-attr">sex</span>: <span class="hljs-string">'男'</span>&#125;<span class="hljs-comment">//对象转换json字符串:&#123;"name":"liusx","age":3,"sex":"男"&#125;</span><span class="hljs-keyword">var</span> jsonuUer = <span class="hljs-built_in">JSON</span>.stringify(user);<span class="hljs-built_in">console</span>.log(jsonuUer);<span class="hljs-comment">//json  字符串转换为对象，参数为json字符串</span><span class="hljs-keyword">var</span> obj = <span class="hljs-built_in">JSON</span>.parse(<span class="hljs-string">'&#123;"name":"liusx","age":3,"sex":"男"&#125;'</span>);<span class="hljs-built_in">console</span>.log(obj);</code></pre></p><pre><code class="hljs javascript"><span class="hljs-comment">//JSON 和 JS 对象的区别：</span><span class="hljs-keyword">var</span> obj = &#123;<span class="hljs-string">"name"</span>:<span class="hljs-string">"liusx"</span>,<span class="hljs-string">"age"</span>:<span class="hljs-number">3</span>,<span class="hljs-string">"sex"</span>:<span class="hljs-string">"男"</span>&#125;;<span class="hljs-keyword">var</span> json = <span class="hljs-string">'&#123;"name":"liusx","age":3,"sex":"男"&#125;'</span>;</code></pre><p><strong>4.3、Ajax</strong><br><pre><code class="hljs javascript">原生的Javascript写法，xhr异步请求jQuery封装好的方法axios请求</code></pre></p><h3 id="五、原型"><a href="#五、原型" class="headerlink" title="五、原型"></a>五、原型</h3><p><strong>5.1、原型的概念（类似Java继承）</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//面向对象</span><span class="hljs-keyword">var</span> Student = &#123;    <span class="hljs-attr">name</span>: <span class="hljs-string">'liusx'</span>,    <span class="hljs-attr">age</span>: <span class="hljs-number">3</span>,    <span class="hljs-attr">run</span>:<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name+<span class="hljs-string">"run....."</span>)    &#125;&#125;<span class="hljs-keyword">var</span> xiaoming = &#123;    <span class="hljs-attr">name</span>: <span class="hljs-string">'小明'</span>&#125;<span class="hljs-comment">//小明的原型 是Student</span>xiaoming.__proto__ = Student;   <span class="hljs-comment">//把属性继承给小明</span>xiaoming.run();<span class="hljs-keyword">var</span> Bird = &#123;    <span class="hljs-attr">fly</span>: <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-built_in">console</span>.log(<span class="hljs-keyword">this</span>.name + <span class="hljs-string">"fly......"</span>)    &#125;&#125;<span class="hljs-comment">//小明的原型 是Bird</span>xiaoming.__proto__ = Bird;</code></pre></p><p><strong>5.2、class继承：class关键字，ES6引入</strong><br><pre><code class="hljs javascript"><span class="hljs-comment">//class继承</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Student</span>(<span class="hljs-params">name</span>) </span>&#123;    <span class="hljs-keyword">this</span>.name = name;&#125;<span class="hljs-comment">//给student新增一个方法</span>Student.prototype.hello = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) </span>&#123;    alert(<span class="hljs-string">'hello'</span>);&#125;</code></pre></p><blockquote><p>1、定义一个类，属性，方法<br><pre><code class="hljs javascript"><span class="hljs-comment">//ES6 之后======极度类似Java</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span></span>&#123;    <span class="hljs-keyword">constructor</span>(name)&#123;        <span class="hljs-keyword">this</span>.name = name;    &#125;    hello()&#123;        alert(<span class="hljs-string">'hello'</span>);    &#125;&#125;<span class="hljs-keyword">var</span> xiaoming = <span class="hljs-keyword">new</span> Student(<span class="hljs-string">'小明'</span>);<span class="hljs-keyword">var</span> xiaoming = <span class="hljs-keyword">new</span> Student(<span class="hljs-string">'小红'</span>);xiaoming.hello();</code></pre></p></blockquote><blockquote><p>2、继承<br><pre><code class="hljs javascript"><span class="hljs-comment">//ES6 之后======极度类似Java</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Student</span></span>&#123;    <span class="hljs-keyword">constructor</span>(name)&#123;        <span class="hljs-keyword">this</span>.name = name;    &#125;    hello()&#123;        alert(<span class="hljs-string">'hello'</span>);    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">XiaoStudent</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Student</span> </span>&#123;    <span class="hljs-keyword">constructor</span>(name,grade)&#123;        <span class="hljs-keyword">super</span>(name);        <span class="hljs-keyword">this</span>.grade = grade;    &#125;    myGrade()&#123;        alert(<span class="hljs-string">'我是一名小学生'</span>);    &#125;&#125;<span class="hljs-keyword">var</span> xiaoming = <span class="hljs-keyword">new</span> Student(<span class="hljs-string">'小明'</span>);xiaoming.hello();<span class="hljs-keyword">var</span> xiaohong = <span class="hljs-keyword">new</span> XiaoStudent(<span class="hljs-string">'小红'</span>,<span class="hljs-number">1</span>);xiaohong.myGrade();</code></pre></p></blockquote><p><strong>5.3、原型链</strong><br><pre><code class="hljs javascript">__proto__<span class="hljs-comment">//无限套娃，形成了链</span></code></pre></p><h3 id="六、操作BOM对象（重点）"><a href="#六、操作BOM对象（重点）" class="headerlink" title="六、操作BOM对象（重点）"></a>六、操作BOM对象（重点）</h3><h4 id="6-1、window（重要）：代表浏览器窗口"><a href="#6-1、window（重要）：代表浏览器窗口" class="headerlink" title="6.1、window（重要）：代表浏览器窗口"></a>6.1、window（重要）：代表浏览器窗口</h4><pre><code class="hljs javascript"><span class="hljs-built_in">window</span>.alert(<span class="hljs-number">1</span>)<span class="hljs-literal">undefined</span><span class="hljs-built_in">window</span>.innerHeight<span class="hljs-number">722</span><span class="hljs-built_in">window</span>.innerWidth<span class="hljs-number">1148</span><span class="hljs-built_in">window</span>.outerHeight<span class="hljs-number">824</span><span class="hljs-built_in">window</span>.outerWidth<span class="hljs-number">1536</span><span class="hljs-comment">// 大家可以调整浏览器窗口试试</span></code></pre><h4 id="6-2、Navigator：封装了浏览器信息"><a href="#6-2、Navigator：封装了浏览器信息" class="headerlink" title="6.2、Navigator：封装了浏览器信息"></a>6.2、Navigator：封装了浏览器信息</h4><pre><code class="hljs javascript"><span class="hljs-comment">//大多数时候，我们不会使用：Navigator 对象，因为会被认为修改！不建议使用这些属性判断和编写代码</span>navigator.appName<span class="hljs-string">"Netscape"</span>navigator.appVersion<span class="hljs-string">"5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36"</span>navigator.userAgent<span class="hljs-string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36"</span>navigator.platform<span class="hljs-string">"Win32"</span></code></pre><h4 id="6-3、screen：代表屏幕尺寸"><a href="#6-3、screen：代表屏幕尺寸" class="headerlink" title="6.3、screen：代表屏幕尺寸"></a>6.3、screen：代表屏幕尺寸</h4><pre><code class="hljs javascript">screen.width<span class="hljs-number">1536</span>screen.height<span class="hljs-number">864</span></code></pre><h4 id="6-4、location（重要）：代表当前页面的URL信息"><a href="#6-4、location（重要）：代表当前页面的URL信息" class="headerlink" title="6.4、location（重要）：代表当前页面的URL信息"></a>6.4、location（重要）：代表当前页面的URL信息</h4><pre><code class="hljs javascript">host:<span class="hljs-string">"www.baidu.com"</span>href:<span class="hljs-string">"https://www.baidu.com/"</span>proticlo:<span class="hljs-string">"https"</span>reload:f reload()<span class="hljs-comment">// 刷新网页</span><span class="hljs-comment">// 设置新的地址</span>location.assign(<span class="hljs-string">'https://Guzhz.github.io/'</span>)</code></pre><h4 id="6-5、document（内容：DOM）：代表当前页面，HTML-DOM文档树"><a href="#6-5、document（内容：DOM）：代表当前页面，HTML-DOM文档树" class="headerlink" title="6.5、document（内容：DOM）：代表当前页面，HTML DOM文档树"></a>6.5、document（内容：DOM）：代表当前页面，HTML DOM文档树</h4><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.title<span class="hljs-string">"百度一下，你就知道"</span></code></pre><h4 id="6-6、获取具体的文档数节点"><a href="#6-6、获取具体的文档数节点" class="headerlink" title="6.6、获取具体的文档数节点"></a>6.6、获取具体的文档数节点</h4><pre><code class="hljs javascript">&lt;dl id="app"&gt;    &lt;dt&gt;Java&lt;/dt&gt;    &lt;dt&gt;JavaSE&lt;/dt&gt;    &lt;dt&gt;JavaScript&lt;/dt&gt;&lt;/dl&gt;&lt;script&gt;    var dl = document.getElementById('app');&lt;/script&gt;</code></pre><h4 id="6-7、获取：cookie"><a href="#6-7、获取：cookie" class="headerlink" title="6.7、获取：cookie"></a>6.7、获取：cookie</h4><pre><code class="hljs javascript"><span class="hljs-built_in">document</span>.cookie<span class="hljs-comment">//劫持cookie原理</span>&lt;script src=<span class="hljs-string">"aa.js"</span>&gt;<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>&lt;!--恶意人员：获取你的cookie上传到它的服务器--&gt;<span class="hljs-comment">//服务器端可以设置cookie：httpOnly</span></code></pre><h4 id="6-8、history（不建议使用）：代表浏览器的历史记录"><a href="#6-8、history（不建议使用）：代表浏览器的历史记录" class="headerlink" title="6.8、history（不建议使用）：代表浏览器的历史记录"></a>6.8、history（不建议使用）：代表浏览器的历史记录</h4><pre><code class="hljs javascript">histor.forward();<span class="hljs-comment">//前进</span>history.back();<span class="hljs-comment">//后退</span></code></pre><h3 id="七、操作DOM对象（重点）"><a href="#七、操作DOM对象（重点）" class="headerlink" title="七、操作DOM对象（重点）"></a>七、操作DOM对象（重点）</h3><h4 id="7-1、获得Dom节点"><a href="#7-1、获得Dom节点" class="headerlink" title="7.1、获得Dom节点"></a>7.1、获得Dom节点</h4><pre><code class="hljs javascript">&lt;div id="father"&gt;    &lt;h1&gt;标题一&lt;/h1&gt;    &lt;p id="p1"&gt;p1&lt;/p&gt;    &lt;p class="p2"&gt;p2&lt;/p&gt;&lt;/div&gt;&lt;script&gt;    var h1 = document.getElementsByTagName("h1");   //返回数组    var p1 = document.getElementById("p1")    var p2 = document.getElementsByClassName("p2"); //返回数组    var father = document.getElementById("father");    //获取父节点下所有的子节点    var childrens = father.children;    //father.firstChild;    //father.lastChild;&lt;/script&gt;</code></pre><h4 id="7-2、更新节点"><a href="#7-2、更新节点" class="headerlink" title="7.2、更新节点"></a>7.2、更新节点</h4><pre><code class="hljs javascript">&lt;div id=<span class="hljs-string">"id1"</span>&gt;<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>&lt;script&gt;    <span class="hljs-keyword">var</span> id1 = <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">'id1'</span>);    id1.innerText=<span class="hljs-string">'456'</span>;<span class="hljs-comment">//修改文本的值</span>    id1.innerHTML=<span class="hljs-string">'&lt;strong&gt;456&lt;/strong&gt;'</span>;<span class="hljs-comment">//可以解析HTML文本标签</span>    <span class="hljs-comment">//操作CSS</span>    id1.style.color = <span class="hljs-string">'yellow'</span>;<span class="hljs-comment">// 属性使用 字符串 包裹</span>    id1.style.fontSize = <span class="hljs-string">'20px'</span>;<span class="hljs-comment">// - 转 驼峰命名问题</span>    id1.style.padding = <span class="hljs-string">'2em'</span>&lt;<span class="hljs-regexp">/script&gt;</span></code></pre><h4 id="7-3、删除节点：先获取父节点，再通过父节点删除自己"><a href="#7-3、删除节点：先获取父节点，再通过父节点删除自己" class="headerlink" title="7.3、删除节点：先获取父节点，再通过父节点删除自己"></a>7.3、删除节点：先获取父节点，再通过父节点删除自己</h4><pre><code class="hljs javascript">&lt;div id="father"&gt;    &lt;h1&gt;标题一&lt;/h1&gt;    &lt;p id="p1"&gt;p1&lt;/p&gt;    &lt;p class="p2"&gt;p2&lt;/p&gt;&lt;/div&gt;&lt;script&gt;    var self = document.getElementById("p1")    var father = p1.parentElement;    father.removeChild(self);        //删除是一个动态的过程，先删除0，在删除2会找不到2节点，因为会重新排序    father.removeChild(father.children[0]);    father.removeChild(father.children[1])    father.removeChild(father.children[2])&lt;/script&gt;</code></pre><h4 id="7-4、插入节点"><a href="#7-4、插入节点" class="headerlink" title="7.4、插入节点"></a>7.4、插入节点</h4><p>我们获得了某个Dom节点，假设这个dom节点是空的，我们通过 innerHTML 就可以增加一个元素，但是如果这个DOM节点已经存在元素了，则会直接覆盖。追加：appendChild()<br><pre><code class="hljs javascript">&lt;p id="js"&gt;Javascript&lt;/p&gt;&lt;div id="list"&gt;    &lt;p id="se"&gt;JavaSE&lt;/p&gt;    &lt;p id="ee"&gt;JavaEE&lt;/p&gt;    &lt;p id="me"&gt;JavaME&lt;/p&gt;&lt;/div&gt;&lt;script&gt;    var js = document.getElementById('js');    var list = document.getElementById('list');    //追加到后面    list.appendChild(js);&lt;/script&gt;-----追加后效果为：&lt;div id="list"&gt;    &lt;p id="se"&gt;JavaSE&lt;/p&gt;    &lt;p id="ee"&gt;JavaEE&lt;/p&gt;    &lt;p id="me"&gt;JavaME&lt;/p&gt;    &lt;p id="js"&gt;Javascript&lt;/p&gt;&lt;/div&gt;</code></pre></p><p>创建一个新的标签，实现插入<br><pre><code class="hljs javascript">&lt;p id="js"&gt;Javascript&lt;/p&gt;&lt;div id="list"&gt;    &lt;p id="se"&gt;JavaSE&lt;/p&gt;    &lt;p id="ee"&gt;JavaEE&lt;/p&gt;    &lt;p id="me"&gt;JavaME&lt;/p&gt;&lt;/div&gt;&lt;script&gt;    let js = document.getElementById('js');//已经存在的节点    let list = document.getElementById('list');    //追加到后面    //list.appendChild(js);    //通过JS 创建一个新的节点    let newP = document.createElement('p');    newP.id = 'newP';    newP.innerText = 'Hello,Sam';    list.appendChild(newP);    //创建一个标签节点    let myScript = document.createElement('script');    myScript.setAttribute('type', 'text/javascript');    //给body标签创建样式1    let body = document.getElementsByTagName('body')[0];    body.setAttribute('style', 'background-color: yellow;');    //给body标签创建样式2    //let myStyle = document.createElement('style');//创建一个style标签    //myStyle.setAttribute('tyle', 'text/css');    //myStyle.innerHTML = 'body&#123;background-color: chartreuse;&#125;';//设置样式    //document.getElementsByTagName('head')[0].appendChild(myStyle);&lt;/script&gt;----------------------------------------------------------------追加后效果为：&lt;body style="background-color: yellow;"&gt;    &lt;p id="js"&gt;Javascript&lt;/p&gt;    &lt;div id="list"&gt;        &lt;p id="se"&gt;JavaSE&lt;/p&gt;        &lt;p id="ee"&gt;JavaEE&lt;/p&gt;        &lt;p id="me"&gt;JavaME&lt;/p&gt;        &lt;p id="newP"&gt;Hello,Sam&lt;/p&gt;        &lt;script type="text/javascript"&gt;&lt;/script&gt;    &lt;/div&gt;&lt;/body&gt;</code></pre></p><p>insertBefore()追加<br><pre><code class="hljs javascript">&lt;p id="js"&gt;Javascript&lt;/p&gt;&lt;div id="list"&gt;    &lt;p id="se"&gt;JavaSE&lt;/p&gt;    &lt;p id="ee"&gt;JavaEE&lt;/p&gt;    &lt;p id="me"&gt;JavaME&lt;/p&gt;&lt;/div&gt;&lt;script&gt;    let js = document.getElementById('js');//已经存在的节点    let list = document.getElementById('list');    let ee = document.getElementById('ee');    //要包含的节点. insertBefore(newNode,targetNode)    list.insertBefore(js, ee);&lt;/script&gt;----追加后效果为：&lt;body&gt;&lt;div id="list"&gt;    &lt;p id="se"&gt;JavaSE&lt;/p&gt;    &lt;p id="js"&gt;Javascript&lt;/p&gt;    &lt;p id="ee"&gt;JavaEE&lt;/p&gt;    &lt;p id="me"&gt;JavaME&lt;/p&gt;&lt;/div&gt;&lt;/body&gt;</code></pre></p><h3 id="八、操作表单（验证）"><a href="#八、操作表单（验证）" class="headerlink" title="八、操作表单（验证）"></a>八、操作表单（验证）</h3><h4 id="8-1、表单：form-DOM树"><a href="#8-1、表单：form-DOM树" class="headerlink" title="8.1、表单：form DOM树"></a>8.1、表单：form DOM树</h4><pre><code class="hljs javascript">文本框：text下拉框：select单选框：radio多选框：checkbox隐藏域：hidden密码框：password…表单的目的：提交信息</code></pre><h4 id="8-2、获得要提交的信息"><a href="#8-2、获得要提交的信息" class="headerlink" title="8.2、获得要提交的信息"></a>8.2、获得要提交的信息</h4><pre><code class="hljs javascript">&lt;form action=<span class="hljs-string">"#"</span> method=<span class="hljs-string">"post"</span>&gt;    &lt;p&gt;        &lt;span&gt;用户名：&lt;/span&gt;&lt;input type="text" id="username"&gt;    &lt;/p&gt;    &lt;p&gt;        &lt;span&gt;性别：&lt;/span&gt;        &lt;input type="radio" name="sex" value="man" id="boy"&gt;男        &lt;input type="radio" name="sex" value="woman" id="girl"&gt;女    &lt;/p&gt;    &lt;script&gt;        var input_text = document.getElementById('username');        //得到输入框的值：input_text.value        //修改输入框的值：input_text.value = wudi                var boy_radio = document.getElementById('boy');        var girl_radio = document.getElementById('girl');        //对于单选框、多选框等等固定的值，        boy_radio.checked;//查看返回的结果，是否为true，如果为true，则被选中        girl_radio.checked = true;//赋值    &lt;/script&gt;&lt;/form&gt;//提交表单：MD5加密，表单优化</code></pre><h4 id="8-3、一般MD5加密"><a href="#8-3、一般MD5加密" class="headerlink" title="8.3、一般MD5加密"></a>8.3、一般MD5加密</h4><pre><code class="hljs javascript">&lt;script&gt;    function sub() &#123;        let username = document.getElementById('username');        let password = document.getElementById('password');        console.log(username);        console.log(password);        // MD5 算法    方案一：        password.value = md5(password.value);        console.log(password.value);    &#125;&lt;/script&gt;//隐藏密码框+MD5加密：&lt;!--    表单绑定提交事件    onsubmit = 绑定一个提交检查的函数，true，false    将这个结果返回给表单，使用 onsubmit 接收！    οnsubmit="return sub();"--&gt;&lt;form action="#" method="post" onsubmit="return sub();"&gt;    &lt;p&gt;        &lt;span&gt;用户名：&lt;/span&gt;&lt;input type="text" id="username" name="username"&gt;    &lt;/p&gt;    &lt;p&gt;        &lt;span&gt;密码：&lt;/span&gt;&lt;input type="password" id="password"&gt;        &lt;input type="hidden" id="md5-password" name="password"&gt;    &lt;/p&gt;    &lt;button type="submit" &gt;提交&lt;/button&gt;    &lt;script&gt;        function sub() &#123;            let username = document.getElementById('username');            let password = document.getElementById('password');            let md5password = document.getElementById('md5-password');            //MD5 算法：隐藏表单域提交表单密码            md5password.value = md5(password.value);            //可以校验判断表单内容，true：通过提交，false：阻止提交            return true;        &#125;    &lt;/script&gt;&lt;/form&gt;</code></pre><h3 id="九、jQuery"><a href="#九、jQuery" class="headerlink" title="九、jQuery"></a>九、jQuery</h3><blockquote><p>jQuery API：<a href="http://jquery.cuishifeng.cn/" target="_blank" rel="noopener">http://jquery.cuishifeng.cn/</a></p></blockquote><h4 id="9-1、初始jQuery（直接引用、使用js文件）"><a href="#9-1、初始jQuery（直接引用、使用js文件）" class="headerlink" title="9.1、初始jQuery（直接引用、使用js文件）"></a>9.1、初始jQuery（直接引用、使用js文件）</h4><pre><code class="hljs javascript">&lt;head&gt;    &lt;meta charset="UTF-8"&gt;    &lt;title&gt;Title&lt;/title&gt;    &lt;script src="https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.js"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;    &lt;a href="" id="test-jquery"&gt;点我&lt;/a&gt;&lt;script&gt;    $('#test-jquery').click(function () &#123;        alert('hello,jQuery')    &#125;)&lt;/script&gt;&lt;/body&gt;</code></pre><h4 id="9-2、选择器"><a href="#9-2、选择器" class="headerlink" title="9.2、选择器"></a>9.2、选择器</h4><pre><code class="hljs javascript">&lt;head&gt;    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span>&lt;body&gt;<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    <span class="hljs-comment">//原生js，选择器少，麻烦且不好记</span>    <span class="hljs-comment">//id、标签、类</span>    <span class="hljs-built_in">document</span>.getElementById();    <span class="hljs-built_in">document</span>.getElementsByTagName();    <span class="hljs-built_in">document</span>.getElementsByClassName();    <span class="hljs-comment">//jQuery 就是 css中的选择器</span>    $(<span class="hljs-string">'#id'</span>).click();<span class="hljs-comment">//id选择器</span>    $(<span class="hljs-string">'div'</span>).click();<span class="hljs-comment">//标签选择</span>    $(<span class="hljs-string">'.className'</span>).click();<span class="hljs-comment">//class选择器</span></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span></code></pre><h4 id="9-3、操作DOM"><a href="#9-3、操作DOM" class="headerlink" title="9.3、操作DOM"></a>9.3、操作DOM</h4><pre><code class="hljs javascript"><span class="hljs-comment">/*  节点文本操作;    css操作;        元素的显示和隐藏：本质 display=none;    …等等更多查看API    */</span>&lt;head&gt;    <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Title<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"https://cdn.bootcdn.net/ajax/libs/jquery/3.4.1/jquery.js"</span>&gt;</span><span class="undefined"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span></span>&lt;body&gt;<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"test-ul"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"js"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"js"</span>&gt;</span>Javascript<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"python"</span>&gt;</span>Python<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"sh"</span>&gt;</span>show_hide<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span>&lt;script&gt;    $(<span class="hljs-string">"#test-ul li[name='python']"</span>).text();<span class="hljs-comment">//获得值</span>    $(<span class="hljs-string">"#test-ul li[name='python']"</span>).text(<span class="hljs-string">'Python_new'</span>);    $(<span class="hljs-string">'#test-ul'</span>).html();<span class="hljs-comment">//获得值</span>    $(<span class="hljs-string">'test-ul'</span>).html(<span class="hljs-string">'&lt;strong&gt;html_new&lt;/strong&gt;'</span>);<span class="hljs-comment">//设置值</span>    $(<span class="hljs-string">'#js'</span>).css(<span class="hljs-string">'color'</span>,<span class="hljs-string">'red'</span>);<span class="hljs-comment">//设置样式</span>    $(<span class="hljs-string">'#sh'</span>).show();<span class="hljs-comment">//显示</span>    $(<span class="hljs-string">'#sh'</span>).hide();<span class="hljs-comment">//隐藏</span>        $(<span class="hljs-built_in">window</span>).width();    $(<span class="hljs-built_in">window</span>).height();    $(<span class="hljs-built_in">document</span>).width();    $(<span class="hljs-built_in">document</span>).height();<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span>&lt;<span class="hljs-regexp">/body&gt;</span></code></pre><p align="right"><br>2020年06月09日 晚上<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>javascript</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CSS3的简单回顾</title>
    <link href="/2020/06/08/CSS3%E7%9A%84%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE/"/>
    <url>/2020/06/08/CSS3%E7%9A%84%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE/</url>
    
    <content type="html"><![CDATA[<p>前言：<a href="https://www.bilibili.com/video/BV1YJ411a7dy" target="_blank" rel="noopener">教学视频参考</a></p><h3 id="1、CSS3的三种导入方式"><a href="#1、CSS3的三种导入方式" class="headerlink" title="1、CSS3的三种导入方式"></a>1、CSS3的三种导入方式</h3><blockquote><p>优先级：就近原则</p></blockquote><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">"en"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-comment">&lt;!--内部样式--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">        <span class="hljs-selector-tag">h1</span> &#123;            <span class="hljs-attribute">color</span>: green;        &#125;    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span>    <span class="hljs-comment">&lt;!--外部样式--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"stylesheet"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"css/style.css"</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-comment">&lt;!--行内样式：在标签元素中，编写一个style属性，编写样式即可--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h1</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: red"</span>&gt;</span>这是标签<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><blockquote><p>拓展：CSS2.1导入式 </p></blockquote><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="css">    @<span class="hljs-keyword">import</span> url(<span class="hljs-string">"css/style.css"</span>);</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></code></pre><h3 id="2、选择器"><a href="#2、选择器" class="headerlink" title="2、选择器"></a>2、选择器</h3><h4 id="2-1、基本选择器"><a href="#2-1、基本选择器" class="headerlink" title="2.1、基本选择器"></a>2.1、基本选择器</h4><pre><code class="hljs html">标签选择器：选择一类标签 标签.&#123; &#125;class选择器：.类名&#123; &#125;id选择器：#.ID名&#123; &#125;</code></pre><h4 id="2-2、层次选择器"><a href="#2-2、层次选择器" class="headerlink" title="2.2、层次选择器"></a>2.2、层次选择器</h4><blockquote><p>后代选择器，在某个元素的后面</p></blockquote><pre><code class="hljs css">&lt;style&gt;    body p &#123;        background: red;    &#125;&lt;/style&gt;</code></pre><blockquote><p>子选择器，一代</p></blockquote><pre><code class="hljs css">&lt;style&gt;    body&gt;p &#123;        background: orange;    &#125;&lt;/style&gt;</code></pre><blockquote><p>相邻兄弟选择器：只有一个，相邻（向下）</p></blockquote><pre><code class="hljs css">&lt;style&gt;    .active+p &#123;        background: red    &#125;&lt;/style&gt;&lt;body&gt;    &lt;p class="active"&gt;p1&lt;p&gt;    &lt;p&gt;p2&lt;/p&gt;&lt;/body&gt;</code></pre><blockquote><p>通用兄弟选择器，当前选中元素的向下的所有兄弟元素</p></blockquote><pre><code class="hljs css">&lt;style&gt;    .active~p &#123;        background: red;    &#125;&lt;/style&gt;&lt;body&gt;    &lt;p class="active"&gt;p1&lt;p&gt;    &lt;p&gt;p2&lt;/p&gt;&lt;/body&gt;</code></pre><h4 id="2-3、结构伪类选择器"><a href="#2-3、结构伪类选择器" class="headerlink" title="2.3、结构伪类选择器"></a>2.3、结构伪类选择器</h4><blockquote><p>ul的第一个子元素</p></blockquote><pre><code class="hljs css"><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:first-child</span> &#123;    <span class="hljs-attribute">background</span>: aqua;&#125;</code></pre><blockquote><p>ul的最后一个子元素</p></blockquote><pre><code class="hljs css"><span class="hljs-selector-tag">ul</span> <span class="hljs-selector-tag">li</span><span class="hljs-selector-pseudo">:last-child</span> &#123;    <span class="hljs-attribute">background</span>: blue;&#125;</code></pre><blockquote><p>选中pfather：定位到父元素，选择当前的第一个子元素p，子元素的第一位必须为p才生效</p></blockquote><pre><code class="hljs css"><span class="hljs-selector-tag">pfather</span><span class="hljs-selector-pseudo">:nth-child(1)</span> &#123;    <span class="hljs-attribute">background</span>: orange;&#125;</code></pre><blockquote><p>选中父元素下的，第2个p元素</p></blockquote><pre><code class="hljs css"><span class="hljs-selector-tag">p</span><span class="hljs-selector-pseudo">:nth-of-type(2)</span> &#123;    <span class="hljs-attribute">background</span>: red;&#125;</code></pre><h4 id="2-4、属性选择器（常用）"><a href="#2-4、属性选择器（常用）" class="headerlink" title="2.4、属性选择器（常用）"></a>2.4、属性选择器（常用）</h4><blockquote><p>class + id 结合 </p></blockquote><pre><code class="hljs css">&lt;style&gt;    .demo a &#123;        display: block;        height: 50px;        width: 50px;        float: left;        border-radius: 10px;        background: blue;        text-align: center;        color: beige;        text-decoration: none;        margin-right: 5px;        font: bold 20px/50px Arial;    &#125;&lt;/style&gt;</code></pre><blockquote><p>标签名[属性名=属性值]（正则: =、*=、^=、$=）</p></blockquote><pre><code class="hljs css">&lt;style&gt;/*存在id的a标签*/a[id] &#123;    background: red;&#125;    /*    =表示绝对等于    *=表示包含...    ^=表示以...开头    $=表示以...结尾    *//*id=first的a标签*/a[id=first] &#123;    background: aqua;&#125;/*class属性值绝对等于"links item2 first2"*/a[class="links item2 first2"] &#123;    background: orange;&#125;/*class属性值绝对包涵"links"*/a[class *="links"] &#123;    background: black;&#125;/*选中href中以http开头的元素*/a[href^="http"] &#123;    background: orange;&#125;&lt;/style&gt;</code></pre><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"demo"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://www.baidu.com"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"links item first"</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"first"</span>&gt;</span>1<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/adad/faf"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"links item2 first2"</span>&gt;</span>2<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"qwe123"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"links item3 first3"</span>&gt;</span>3<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"eweqe"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"links item4 first4"</span>&gt;</span>4<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"rrrrr"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"links item5 first5"</span>&gt;</span>5<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"ttt"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"links item6 first6"</span>&gt;</span>6<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"yyy"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"links item7 first7"</span>&gt;</span>7<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre><h3 id="3、美化网页元素"><a href="#3、美化网页元素" class="headerlink" title="3、美化网页元素"></a>3、美化网页元素</h3><h4 id="3-1、字体"><a href="#3-1、字体" class="headerlink" title="3.1、字体"></a>3.1、字体</h4><blockquote><p>建立在标签上的处理，所以建议用span包裹</p></blockquote><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="undefined">        #title1 &#123;            font-size: 50px;            font-weight：blod;            font-family: 楷体;            /*常用写法：*/            font: oblique bloder 12px "楷体"        &#125;    </span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"title1"</span>&gt;</span>JAVA<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre><h4 id="3-2、文本"><a href="#3-2、文本" class="headerlink" title="3.2、文本"></a>3.2、文本</h4><blockquote><p>下划线</p></blockquote><pre><code class="hljs css"><span class="hljs-selector-tag">text-decoration</span><span class="hljs-selector-pseudo">:underline</span><span class="hljs-comment">/*下划线*/</span><span class="hljs-selector-tag">text-decoration</span><span class="hljs-selector-pseudo">:line-through</span><span class="hljs-comment">/*中划线*/</span><span class="hljs-selector-tag">text-decoration</span><span class="hljs-selector-pseudo">:overline</span><span class="hljs-comment">/*上划线*/</span><span class="hljs-selector-tag">text-decoration</span><span class="hljs-selector-pseudo">:none</span><span class="hljs-comment">/*超链接去下划线*/</span></code></pre><blockquote><p>图片、文字水平居中</p></blockquote><pre><code class="hljs css"><span class="hljs-selector-tag">img</span>,<span class="hljs-selector-tag">span</span> &#123;    <span class="hljs-attribute">vertical-align</span>: middle&#125;</code></pre><h4 id="3-3、文本，阴影和超链接伪类"><a href="#3-3、文本，阴影和超链接伪类" class="headerlink" title="3.3、文本，阴影和超链接伪类"></a>3.3、文本，阴影和超链接伪类</h4><blockquote><p>超链接伪类</p></blockquote><pre><code class="hljs css">&lt;style&gt;/*超链接有默认的颜色*/a &#123;    text-decoration: none;    color: #000000;&#125;a:hover &#123;    /*鼠标悬浮的状态*/    color: orange;&#125;a:active &#123;    /*鼠标按住未释放的状态*/    color: green&#125;a:visited &#123;    /*点击之后的状态*/    color: red&#125;&lt;/style&gt;</code></pre><blockquote><p>阴影</p></blockquote><pre><code class="hljs css">            左 下 半径<span class="hljs-selector-tag">text-shadow</span><span class="hljs-selector-pseudo">:5px</span> 5<span class="hljs-selector-tag">px</span> 5<span class="hljs-selector-tag">px</span> 颜色</code></pre><h4 id="3-4、利用列表ul-li小设计：a进来变样式"><a href="#3-4、利用列表ul-li小设计：a进来变样式" class="headerlink" title="3.4、利用列表ul li小设计：a进来变样式"></a>3.4、利用列表ul li小设计：a进来变样式</h4><pre><code class="hljs css">ul li &#123;    height: 30px;    list-style: none;    /*none:去掉原点、circle:空心圆、decimal:数字、square:正方形*/    text-indent: 1em;    /*缩进*/&#125;a&#123;    text-decoration: none;    /*首先去掉下划线*/    font-size: 14px;    color: #000;&#125;a:hover &#123;    color: orange;    text-decoration: underline  /*进来再有下划线*/     &#125;/*放在div中，作为导航栏*/&lt;div id="nav"&gt;&lt;/div&gt;#nav &#123;    width: 300px;&#125;</code></pre><h4 id="3-5、背景样式、图片"><a href="#3-5、背景样式、图片" class="headerlink" title="3.5、背景样式、图片"></a>3.5、背景样式、图片</h4><pre><code class="hljs css"><span class="hljs-selector-tag">background</span><span class="hljs-selector-pseudo">:red</span><span class="hljs-selector-tag">---------------------------------------------</span><span class="hljs-selector-tag">background-image</span><span class="hljs-selector-pseudo">:url("")</span>;   <span class="hljs-comment">/*默认是全部平铺的*/</span><span class="hljs-selector-tag">background-repeat</span><span class="hljs-selector-pseudo">:repeat-x</span>  <span class="hljs-comment">/*水平平铺*/</span><span class="hljs-selector-tag">background-repeat</span><span class="hljs-selector-pseudo">:repeat-y</span>  <span class="hljs-comment">/*垂直平铺*/</span><span class="hljs-selector-tag">background-repeat</span><span class="hljs-selector-pseudo">:no-repeat</span> <span class="hljs-comment">/*不平铺*/</span><span class="hljs-selector-tag">---------------------------------------------</span><span class="hljs-selector-tag">background</span><span class="hljs-selector-pseudo">:red</span> <span class="hljs-selector-tag">url</span>("<span class="hljs-selector-tag">url</span>") 270<span class="hljs-selector-tag">px</span> 10<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">no-repeat</span> <span class="hljs-comment">/*综合使用*/</span><span class="hljs-selector-tag">background-position</span><span class="hljs-selector-pseudo">:center</span>                      <span class="hljs-comment">/*定位：背景位置*/</span></code></pre><blockquote><p>拓展：渐变<br>网址：<a href="https://www.grablent.com" target="_blank" rel="noopener">https://www.grablent.com</a><br>径向渐变、圆形渐变</p></blockquote><h3 id="4、盒子模型"><a href="#4、盒子模型" class="headerlink" title="4、盒子模型"></a>4、盒子模型</h3><h4 id="4-1、什么是盒子模型"><a href="#4-1、什么是盒子模型" class="headerlink" title="4.1、什么是盒子模型"></a>4.1、什么是盒子模型</h4><pre><code class="hljs css"><span class="hljs-selector-tag">margin</span>：外边距<span class="hljs-selector-tag">padding</span>：内边距<span class="hljs-selector-tag">border</span>：边框</code></pre><h4 id="4-2、边框"><a href="#4-2、边框" class="headerlink" title="4.2、边框"></a>4.2、边框</h4><pre><code class="hljs css"><span class="hljs-selector-tag">border</span>：2<span class="hljs-selector-tag">px</span> <span class="hljs-selector-tag">solid</span> <span class="hljs-selector-tag">red</span></code></pre><h3 id="4-3、外边距的妙用：居中"><a href="#4-3、外边距的妙用：居中" class="headerlink" title="4.3、外边距的妙用：居中"></a>4.3、外边距的妙用：居中</h3><pre><code class="hljs css"><span class="hljs-selector-tag">margin</span><span class="hljs-selector-pseudo">:0</span> 0 0 0          <span class="hljs-comment">/*表示上、右、下、左*/</span><span class="hljs-selector-tag">margin</span><span class="hljs-selector-pseudo">:0</span> <span class="hljs-selector-tag">auto</span>           <span class="hljs-comment">/*居中、auto表示左右自动*/</span><span class="hljs-selector-tag">margin</span><span class="hljs-selector-pseudo">:4px</span>              <span class="hljs-comment">/*表示上、右、下、左都为4px*/</span><span class="hljs-selector-tag">margin</span><span class="hljs-selector-pseudo">:10px</span> 20<span class="hljs-selector-tag">px</span> 30<span class="hljs-selector-tag">px</span>   <span class="hljs-comment">/*表示上为10px，左右为20px，下为30px*/</span></code></pre><blockquote><p>开发中的常用操作<br><pre><code class="hljs css"><span class="hljs-comment">/* 盒子的计算方式：margin+border+padding+内容的大小 */</span><span class="hljs-comment">/* body总有一个默认的外边距，开发中会先把内外边距置为0 */</span><span class="hljs-selector-tag">margin</span><span class="hljs-selector-pseudo">:0</span>;<span class="hljs-selector-tag">padding</span><span class="hljs-selector-pseudo">:0</span>;<span class="hljs-selector-tag">text-decoration</span><span class="hljs-selector-pseudo">:none</span>;</code></pre></p></blockquote><h4 id="4-4、圆角边框：border-radius"><a href="#4-4、圆角边框：border-radius" class="headerlink" title="4.4、圆角边框：border-radius"></a>4.4、圆角边框：border-radius</h4><pre><code class="hljs css">（顺时针），左上开始圆圈：圆角=半径border-radius: 有四个参数</code></pre><h3 id="5、浮动"><a href="#5、浮动" class="headerlink" title="5、浮动"></a>5、浮动</h3><h4 id="5-1、标准文档流"><a href="#5-1、标准文档流" class="headerlink" title="5.1、标准文档流"></a>5.1、标准文档流</h4><blockquote><p>包涵关系：块级元素包裹行级元素<br>块级元素：独占一行 h1~h6 、p、div、 列表…<br>行内元素：不独占一行 span、a、img、strong</p></blockquote><h4 id="5-2、display（重要）"><a href="#5-2、display（重要）" class="headerlink" title="5.2、display（重要）"></a>5.2、display（重要）</h4><blockquote><p>block：块元素<br>inline：行内元素<br>inline-block：行内块元素<br>none：消失<br>注：这也是一种实现行内元素排列的方式，但是我们很多情况用float</p></blockquote><h4 id="5-3、float：浮动"><a href="#5-3、float：浮动" class="headerlink" title="5.3、float：浮动"></a>5.3、float：浮动</h4><blockquote><p>参考：<a href="https://blog.csdn.net/qq_36595013/article/details/81810219" target="_blank" rel="noopener">详细参考</a><br><pre><code class="hljs css"><span class="hljs-selector-tag">div</span>&#123;    <span class="hljs-attribute">float</span>:left/right&#125;<span class="hljs-comment">/*浮动后，不再属于标准中的元素，下面的元素会上移、但本身还会于上面的元素对其*/</span><span class="hljs-comment">/*假如某个div元素A是浮动的，如果A元素上一个元素也是浮动的，那么A元素会跟随在上一个元素的后边(如果一行放不下这两个元素，那么A元素会被挤到下一行)；如果A元素上一个元素是标准流中的元素，那么A的相对垂直位置不会改变，也就是说A的顶部总是和上一个元素的底部对齐。*/</span></code></pre></p></blockquote><blockquote><p>清除浮动 clear<br><pre><code class="hljs css"><span class="hljs-comment">/*  right：右侧不允许有浮动元素left： 左侧不允许有浮动元素both： 两侧不允许有浮动元素none： 两侧允许有浮动元素   对于CSS的清除浮动(clear)，一定要牢记：这个规则只能影响使用清除的元素本身，不能影响其他元素。*/</span></code></pre></p></blockquote><h4 id="5-4、解决浮动后父级边框塌陷问题"><a href="#5-4、解决浮动后父级边框塌陷问题" class="headerlink" title="5.4、解决浮动后父级边框塌陷问题"></a>5.4、解决浮动后父级边框塌陷问题</h4><pre><code class="hljs css">/* 方案一：增加父级元素的高度；*//* 方案二：增加一个空的div标签，清除本标签的浮动来实现补回原标签 */&lt;style&gt;    .clear&#123;        clear:both;        margin:0;        padding:0;    &#125;&lt;/style&gt;&lt;div class = "clear"&gt;&lt;/div&gt;/* 方案三：在父级元素中增加一个滚动条然后隐藏起来：overflow：hidden */overflow:hidden /*隐藏*/overflow：scoll /*滚动*//* 方案四：父类添加一个伪类:after */#father:after&#123;content:'';display:block;clear:both;&#125;浮动元素增加空div----&gt; 简单、代码尽量避免空div设置父元素的高度-----&gt; 简单，元素假设没有了固定的高度，就会超出overflow----&gt; 简单，下拉的一些场景避免使用父类添加一个伪类:after（推荐）----&gt; 写法稍微复杂，但是没有副作用，推荐使用</code></pre><h4 id="5-5、display与float对比"><a href="#5-5、display与float对比" class="headerlink" title="5.5、display与float对比"></a>5.5、display与float对比</h4><blockquote><p>display：方向不可以控制<br>float：浮动起来的话会脱离标准文档流，所以要解决父级边框塌陷的问题。</p></blockquote><h3 id="6、定位"><a href="#6、定位" class="headerlink" title="6、定位"></a>6、定位</h3><h4 id="6-1、相对定位（relative）"><a href="#6-1、相对定位（relative）" class="headerlink" title="6.1、相对定位（relative）"></a>6.1、相对定位（relative）</h4><blockquote><p>相对于自身的位置，它仍然在标准文档流中<br><pre><code class="hljs css"><span class="hljs-selector-tag">h2</span><span class="hljs-selector-class">.pos_left</span>&#123;    <span class="hljs-attribute">location</span>:relative    top:-<span class="hljs-number">20px</span>;    <span class="hljs-attribute">left</span>:<span class="hljs-number">20px</span>;    <span class="hljs-attribute">bottom</span>:-<span class="hljs-number">10px</span>;    <span class="hljs-attribute">right</span>:<span class="hljs-number">20px</span>;&#125;</code></pre></p></blockquote><h4 id="6-2、绝对定位："><a href="#6-2、绝对定位：" class="headerlink" title="6.2、绝对定位："></a>6.2、绝对定位：</h4><blockquote></blockquote><pre><code class="hljs css"><span class="hljs-comment">/* 总结：相对一父级或浏览器的位置，进行指定的偏移，   绝对定位的话，它不在标准文档流中，原来的位置不会被保留 */</span><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-of-type(1)</span>&#123;<span class="hljs-comment">/*绝对定位：没有相对的父级元素，所以相对于浏览器*/</span>    <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;    <span class="hljs-attribute">background</span>:red;    <span class="hljs-attribute">position</span>: absolute;    <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;&#125;</code></pre><h4 id="6-3、固定定位"><a href="#6-3、固定定位" class="headerlink" title="6.3、固定定位"></a>6.3、固定定位</h4><pre><code class="hljs css"><span class="hljs-selector-tag">div</span><span class="hljs-selector-pseudo">:nth-of-type(2)</span>&#123;    <span class="hljs-comment">/*始终在右下角*/</span>    <span class="hljs-attribute">width</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">height</span>: <span class="hljs-number">50px</span>;    <span class="hljs-attribute">background</span>: yellow;    <span class="hljs-attribute">position</span>: fixed;    <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;&#125;</code></pre><h4 id="6-4、图层"><a href="#6-4、图层" class="headerlink" title="6.4、图层"></a>6.4、图层</h4><blockquote><p>z-index：默认是0，最高无限~999(最顶层)<br><pre><code class="hljs css"><span class="hljs-selector-class">.tipText</span>&#123;    <span class="hljs-attribute">color</span>: white;    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">999</span>;&#125;</code></pre></p></blockquote><h4 id="6-5、透明度"><a href="#6-5、透明度" class="headerlink" title="6.5、透明度"></a>6.5、透明度</h4><pre><code class="hljs css"><span class="hljs-selector-class">.tipBg</span>&#123;    <span class="hljs-attribute">background</span>: orange;    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0.5</span>;   <span class="hljs-comment">/*背景透明度*/</span>    <span class="hljs-attribute">filter</span>: <span class="hljs-built_in">alpha</span>(opacity=50);  <span class="hljs-comment">/*原理同上，这里解决ie的兼容性问题*/</span>&#125;</code></pre><p align="right"><br>2020年06月06日 下午<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTML5的简单回顾</title>
    <link href="/2020/06/06/HTML5%E7%9A%84%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE/"/>
    <url>/2020/06/06/HTML5%E7%9A%84%E7%AE%80%E5%8D%95%E5%9B%9E%E9%A1%BE/</url>
    
    <content type="html"><![CDATA[<p>前言：教学视频参考：<a href="https://www.bilibili.com/video/BV1x4411V75C" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1x4411V75C</a></p><h3 id="网页基本标签"><a href="#网页基本标签" class="headerlink" title="网页基本标签"></a>网页基本标签</h3><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--meta描述性标签，用来描述我们网站的一些信息--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">"UTF-8"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"keywords"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"跟狂神学Java"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"description"</span> <span class="hljs-attr">content</span>=<span class="hljs-string">"可以学习java"</span>&gt;</span></code></pre><pre><code class="hljs xml">粗体：<span class="hljs-tag">&lt;<span class="hljs-name">strong</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">strong</span>&gt;</span>斜体：<span class="hljs-tag">&lt;<span class="hljs-name">em</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">em</span>&gt;</span></code></pre><pre><code class="hljs xml">  空         &amp;nbsp;大于号       &amp;gt;小于号       &amp;lt;版权符号     &amp;copy;</code></pre><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--图像标签： alt:图片描述--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../resources/image/1.jpg"</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">"我的图片"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"悬停文字"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"1366"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"768"</span>&gt;</span></code></pre><pre><code class="hljs xml">target="_blank" ：在新标签中打开target="_self"  ：在自己的网页中打开target="#MarkName"：即跳转到锚点  <span class="hljs-comment">&lt;!--锚链接：指定跳转到页面的某个位置，需要定义name属性作为标记--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"top"</span>&gt;</span>顶部<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-comment">&lt;!--跳转到标记--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"#top"</span>&gt;</span>回到顶部<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-comment">&lt;!--邮件连接：mailto--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"mailto:936681921@qq.com"</span>&gt;</span>点击联系我<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre><h3 id="行内元素和块元素"><a href="#行内元素和块元素" class="headerlink" title="行内元素和块元素"></a>行内元素和块元素</h3><pre><code class="hljs xml">块元素：无论内容有多少，元素自己独占一行行内元素：内容撑开宽度，左右都是行内元素的可以排在一行</code></pre><h3 id="列表标签"><a href="#列表标签" class="headerlink" title="列表标签"></a>列表标签</h3><pre><code class="hljs xml">有序列表<span class="hljs-tag">&lt;<span class="hljs-name">ol</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>语文<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>       1.语文    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>数学<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>       2.数学    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>英语<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>       3.英语<span class="hljs-tag">&lt;/<span class="hljs-name">ol</span>&gt;</span>无序列表<span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>语文<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>       ● 语文    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>数学<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>       ● 数学    <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>英语<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>       ● 英语<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>自定义列表<span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>科目<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span>   科目    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>语文<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span>        语文    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>数学<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span>        数学    <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>英语<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span>        英语<span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span></code></pre><h3 id="表格标签"><a href="#表格标签" class="headerlink" title="表格标签"></a>表格标签</h3><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span> ...<span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>表格标签。<span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>行标签，代表一行。<span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span>列标签，代表一列。border=""表示表格线条宽度。colspan="3"表示这一单元跨几列。rowspan="2"表示这一单元跨几行。</code></pre><h3 id="视频和音频"><a href="#视频和音频" class="headerlink" title="视频和音频"></a>视频和音频</h3><pre><code class="hljs xml">controls：控制调autoplay：自动播放<span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../resources/video/2.mp4"</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">autoplay</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">audio</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"../resources/audio/3.mp3"</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">autoplay</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">audio</span>&gt;</span></code></pre><h3 id="结构分析"><a href="#结构分析" class="headerlink" title="结构分析"></a>结构分析</h3><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">header</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>网页头部<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">header</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">section</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>网页主体<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">section</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">footer</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">h2</span>&gt;</span>网页脚步<span class="hljs-tag">&lt;/<span class="hljs-name">h2</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">footer</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">nav</span>&gt;</span>导航<span class="hljs-tag">&lt;/<span class="hljs-name">nav</span>&gt;</span></code></pre><h3 id="iframe内联框架"><a href="#iframe内联框架" class="headerlink" title="iframe内联框架"></a>iframe内联框架</h3><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-comment">&lt;!--单独使用--&gt;</span>     <span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"www.baidu.com"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"go"</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"1000"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"800"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span>    <span class="hljs-comment">&lt;!--配合a标签使用--&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">src</span>=<span class="hljs-string">""</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"go"</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"1000"</span> <span class="hljs-attr">height</span>=<span class="hljs-string">"800"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://www.baidu.com"</span> <span class="hljs-attr">target</span>=<span class="hljs-string">"go"</span> &gt;</span>点击打开百度<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">""</span> <span class="hljs-attr">method</span>=<span class="hljs-string">""</span>&gt;</span>        action:填写表单内数据提交给的地址。        是提交表单数据的方式，get可以在url看见提交的内容，post的保密性稍高。        <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">""</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>    type="text"     默认文本框。    type="password" 密码框，输入不显示密码。    type="search"   搜索框。    type="submit"   提交按钮，网页中点击提交。    type="reset"    重置按钮，网页中点击后表单重置。    hidden:隐藏。    单选框：    type="radio"    name="":填入组名，网页内在同一组内的单选框只能选中一个，不在同一组则    相当于多选框。    value=""：提交时显示的名字。    checked:默认选择本项选中。    多选框：    type="checkbox"    name="":填入组名。    value=""：提交时显示的名字。    checked:默认选择本项选中。    普通按钮：    type="button":    name="":提交时的按钮名。    value=""：在网页显示在按钮中的字符。    下拉列表框：    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">name</span>=<span class="hljs-string">""</span>&gt;</span>:name中填写列表名。        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span>&gt;</span>:value填写单元名        <span class="hljs-tag">&lt;<span class="hljs-name">option</span> <span class="hljs-attr">value</span>=<span class="hljs-string">""</span>&gt;</span>:value填写单元名    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span>    selected:默认选择本项选中。    文本域：    <span class="hljs-tag">&lt;<span class="hljs-name">textarea</span> <span class="hljs-attr">name</span>=<span class="hljs-string">""</span><span class="hljs-attr">cols</span>=<span class="hljs-string">"30"</span> <span class="hljs-attr">rows</span>=<span class="hljs-string">"10"</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">""</span>&gt;</span>    name=""       :文本域名。文本域网页。    cols="30"     :列数。    rows="10"     :行数。    placeholder="":默认显示内容，所有文本框可用。    文件域：    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"file"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"files"</span>&gt;</span>    滑块：    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"range"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"range"</span> <span class="hljs-attr">min</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">max</span>=<span class="hljs-string">"100"</span> <span class="hljs-attr">step</span>=<span class="hljs-string">"5"</span>&gt;</span>滑块网  页    type="range"    min：表示滑块底部的数值。    max：表示滑块顶端的数值。    step：表示每次拖动滑块改变的数值。    数字验证：    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"number"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"number"</span> <span class="hljs-attr">min</span>=<span class="hljs-string">"0"</span> <span class="hljs-attr">max</span>=<span class="hljs-string">"100"</span> <span class="hljs-attr">step</span>=<span class="hljs-string">"1"</span>&gt;</span>数字  验证网页    min：表示最低数字。    max：表示最大数字。    step：表示每次增加时改变的数值。    <span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">for</span>=<span class="hljs-string">""</span>&gt;</span>此处可任意填写<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>    给其他标签添加id=""属性，然后将id中的字符填入for="",点击其产生的字符    可指向对应id的文本框。    初级验证    type="email"    邮箱输入框，带有简单的邮箱格式验证。    type="url"      url连接输入框，带有简单的格式验证。    type="number"   <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"number"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"num"</span> <span class="hljs-attr">max</span>=<span class="hljs-string">"100"</span> <span class="hljs-attr">min</span>=<span class="hljs-string">"1"</span>   <span class="hljs-attr">step</span>=<span class="hljs-string">"1"</span>&gt;</span>    pattern="正则表达式验证，使用正则表达式验证文本框填写是否正确"<span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span></code></pre><p align="right"><br>2020年06月06日 下午<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>学习记录</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Html5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新玩意儿</title>
    <link href="/2020/03/26/%E6%96%B0%E7%8E%A9%E6%84%8F%E5%84%BF/"/>
    <url>/2020/03/26/%E6%96%B0%E7%8E%A9%E6%84%8F%E5%84%BF/</url>
    
    <content type="html"><![CDATA[<p>耗时三天，<br>搭建了人生的，<br>第一个网站，<br>感觉还不错。(#^.^#)</p><h4 id="Mood"><a href="#Mood" class="headerlink" title="Mood"></a>Mood</h4><pre><code>从郁闷到舒畅。</code></pre><h4 id="Weather"><a href="#Weather" class="headerlink" title="Weather"></a>Weather</h4><pre><code>阴天。</code></pre><h4 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h4><pre><code>2019年3月26日 晚上</code></pre><p><strong><center>完结</center></strong></p>]]></content>
    
    
    <categories>
      
      <category>生活类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>心情</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一年了</title>
    <link href="/2020/02/25/%E4%B8%80%E5%B9%B4%E4%BA%86/"/>
    <url>/2020/02/25/%E4%B8%80%E5%B9%B4%E4%BA%86/</url>
    
    <content type="html"><![CDATA[<p>时间飞逝，一眨眼，一年过去了。</p><p>好久没来，<br>好久没写，<br>其实心里一直想着，<br>总要记录点什么，<br>可是总是没能抽出时间过来。</p><p>有空再写吧，晚安。</p><h4 id="Mood"><a href="#Mood" class="headerlink" title="Mood"></a>Mood</h4><pre><code>挺好的。</code></pre><h4 id="Weather"><a href="#Weather" class="headerlink" title="Weather"></a>Weather</h4><pre><code>晴天。</code></pre><h4 id="Date"><a href="#Date" class="headerlink" title="Date"></a>Date</h4><pre><code>2020年2月24日 晚上</code></pre><p><strong><center>完结</center></strong></p>]]></content>
    
    
    <categories>
      
      <category>生活类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>心情</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Github&amp;Gitee使用教程</title>
    <link href="/2019/05/13/Github&amp;Gitee%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <url>/2019/05/13/Github&amp;Gitee%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<p>前言：注册GitHub有一段时间了，之前有按照教程操作过，不过后来一段时间不用又不熟练了。以至于后期突然使用时出现一些错误，导致本地文件一直提交不了。今天又熟悉了一次，这里做个笔记，以至于后面在忘记可以回顾一下。</p><h3 id="一、操作前准备"><a href="#一、操作前准备" class="headerlink" title="一、操作前准备"></a>一、操作前准备</h3><ul><li><a href="https://www.jianshu.com/p/8282eced3bf2" target="_blank" rel="noopener">Github环境搭建</a></li><li><a href="https://segmentfault.com/a/1190000020127413" target="_blank" rel="noopener">配置共存Github/Gitee环境</a><br>共存Github/Gitee环境，需要切换全局的 user.name 和 user.email<blockquote><p>git config - -global - -list（先查看变量）<br>git config - -global user.name “账户名” （再修改变量）<br>git config - -global user.email “邮箱”</p></blockquote></li></ul><h3 id="二、Github-Gitee部署详细步骤"><a href="#二、Github-Gitee部署详细步骤" class="headerlink" title="二、Github/Gitee部署详细步骤"></a>二、Github/Gitee部署详细步骤</h3><h5 id="【无仓库：新建远程仓库、初始化本地仓库、两者建立连接、添加并部署】"><a href="#【无仓库：新建远程仓库、初始化本地仓库、两者建立连接、添加并部署】" class="headerlink" title="【无仓库：新建远程仓库、初始化本地仓库、两者建立连接、添加并部署】"></a>【无仓库：新建远程仓库、初始化本地仓库、两者建立连接、添加并部署】</h5><blockquote><p>创建仓库，勾选上RENAME<br> name -&gt; description -&gt; public -&gt; Init -&gt; create<br> “+” -&gt; 介绍 -&gt; 使用Readme文件初始化这个仓库 -&gt; 创建</p></blockquote><blockquote><p>git init （初始化本地仓库）<br>  git add .（有空格）<br>  git status（可查看代码的状态）<br>  git commit -m “说明”（把文件提交的本地仓库）</p></blockquote><blockquote><p>git remote add origin [url]（连接远程仓库，这个为新建的仓库地址）</p></blockquote><blockquote><p>git pull - -rebase origin master （本地仓库为空，远程仓库不为空，需要pull合并同步，这里–为“双杠”）</p></blockquote><blockquote><ul><li>git push origin master（部署）</li></ul></blockquote><h5 id="【有本地仓库-克隆操作（已建立连接）：在仓库文件夹下进行以下操作】"><a href="#【有本地仓库-克隆操作（已建立连接）：在仓库文件夹下进行以下操作】" class="headerlink" title="【有本地仓库/克隆操作（已建立连接）：在仓库文件夹下进行以下操作】"></a>【有本地仓库/克隆操作（已建立连接）：在仓库文件夹下进行以下操作】</h5><blockquote><p>改动文件后 ↓<br>  git add .<br>  git status<br>  git commit -m “说明”<br>  git push origin master</p></blockquote><h3 id="三、常用命令"><a href="#三、常用命令" class="headerlink" title="三、常用命令"></a>三、常用命令</h3><ol><li>git status</li><li>git add .</li><li>git commit -m “说明”</li><li>git push origin master</li><li>git clone [url]</li><li>git pull （拉去远程库更新本地库）</li></ol><p align="right"><br>2020年4月11日 下午<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo的使用</title>
    <link href="/2019/05/09/Hexo%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <url>/2019/05/09/Hexo%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>前言：Hexo是一个主题框架，用于搭建博客，这里做个笔记，以至于后面忘记了可以回顾一下如何操作。</p><h3 id="一、详细搭建参考"><a href="#一、详细搭建参考" class="headerlink" title="一、详细搭建参考"></a>一、详细搭建参考</h3><blockquote><p><a href="http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa" target="_blank" rel="noopener">搭建参考一</a><br><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">搭建参考二</a><br><a href="https://www.jianshu.com/p/36d67d7d6985" target="_blank" rel="noopener">markdown语法参考</a><br><a href="https://www.jianshu.com/p/bcdbe7347c8d" target="_blank" rel="noopener">主题推荐</a></p></blockquote><h3 id="二、域名的绑定与解绑"><a href="#二、域名的绑定与解绑" class="headerlink" title="二、域名的绑定与解绑"></a>二、域名的绑定与解绑</h3><p>绑定：<a href="https://my.freenom.com/clientarea.php" target="_blank" rel="noopener">免费一年的域名网</a></p><blockquote><p>1、在myblog\source（source目录下的文件为源文件)目录下新建CNAME(无后缀)<br>2、把域名写进去即可，www加不加都行。</p></blockquote><p>解绑：</p><blockquote><p>1、只生效一次的解绑方法：直接删除github项目上的CNAME文件，但是更新后重新部署后又会生成<br>2、永久解绑方法：删除主题source目录下的CNAME，删除/清空source目录下的CNAME文件后重新部署，setting里删除手动指定的域名。</p></blockquote><h3 id="三、我的博客详细分类"><a href="#三、我的博客详细分类" class="headerlink" title="三、我的博客详细分类"></a>三、我的博客详细分类</h3><p>操作步骤：</p><pre><code>1. 在项目的根目录下（myblog)2. 右键打开：Git Bash3. 新文章  ：myblog\source\_posts 下编写md文件</code></pre><blockquote><font color="red">hexo g  (生成)<br>    hexo s   (本地浏览)<br>    hexo d   (部署到github)</font></blockquote><p>博客一：VScode、有道云笔记</p><pre><code>myblog      → 主目录myblog_bak  → 主目录备份Picture-bed → 图床仓库</code></pre><p>博客二：有道云笔记编写，VScode编辑</p><pre><code>虚拟机桌面的“blog”文件已同步到坚果云test = &gt; 测试仓库blog\source\_posts              =&gt; 源文件blog\themes\diaspora\source\img =&gt; 图库(图床)，不需要额外的图床source -&gt; MD File =&gt; md文件</code></pre><p align="right"><br>2020年4月11日 凌晨<br>Guzhz</p>]]></content>
    
    
    <categories>
      
      <category>工具使用</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
      <tag>博客</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
